<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Shared.WPF"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    
    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:shared_resources="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialLightCustom"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialLightCustom"/>
    </ResourceDictionary.MergedDictionaries>

    <local:MoreColorVisibilityconverter x:Key="MoreColorVisibilityconverterkey" />
    <local:SizeToDoubleConverter x:Key="SizeToDoubleConverterKey" />

    <shared:ColorToBrushConverter x:Key="ColorToBrushConverterKey" ></shared:ColorToBrushConverter>
    <DataTemplate x:Key="HeaderTemplateKey">
        <Grid x:Name="IconGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="colorborder_row" Height="*" />
            </Grid.RowDefinitions>
            <Image
                x:Name="image" Stretch="Uniform"
                Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=width, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
                Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=height, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
                Source="{Binding Path=Icon, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}, UpdateSourceTrigger=PropertyChanged}" />
            <Border 
                x:Name="color_border" 
                Grid.Row="1" 
                BorderThickness="1" 
                MinHeight="5" 
                Background="{Binding Path=Color, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}},Converter={StaticResource ColorToBrushConverterKey}, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger SourceName="image" Property="Source" Value="{x:Null}">
                <Setter TargetName="color_border" Property="BorderBrush" Value="{StaticResource ContentForeground}" />
                <Setter TargetName="color_border" Property="CornerRadius" Value="{StaticResource MaterialLightCustom.ThemeCornerRadiusVariant1}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--<SolidColorBrush x:Key="ColorPickerPalette.PolygonItem.Selected.Border1" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ColorPickerPalette.PolygonItem.Selected.Border2" Color="#FFF0F0F0" />-->

    <Style x:Key="SyncfusionColorGroupItemStyle" TargetType="{x:Type local:ColorGroupItem}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ItemMargin" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderMargin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorGroupItem">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="ItemBorder"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderWidth}"
                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderHeight}"
                            MinHeight="{TemplateBinding MinHeight}"
                            MinWidth="{TemplateBinding MinWidth}"
                            Margin="0.8"
                            HorizontalAlignment="Left"
                            BorderBrush="{StaticResource Black}"
                            FocusVisualStyle="{x:Null}"
                            Focusable="True"
                            SnapsToDevicePixels="True">
                            <Border
                                x:Name="InnerBorder"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Color}"
                                BorderBrush="{StaticResource PopupBackground}">
                                <Border.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{TemplateBinding ColorName}" />
                                    </ToolTip>
                                </Border.ToolTip>
                            </Border>
                        </Border>

                        <ItemsControl
                            x:Name="Ic1"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ColorName" Value="White, Background 1">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="ColorName" Value="White">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="ItemBorder" Property="IsMouseOver" Value="True" />
                                <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Default" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="ItemBorder" Property="IsFocused" Value="True" />
                                <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Default" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="2" />
                            <Setter TargetName="ItemBorder" Property="BorderBrush" Value="{StaticResource Black}" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                            <Setter Property="MinWidth" Value="{StaticResource TouchMode.MinHeight}" />
                        </Trigger>
                        <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionColorGroupItemStyle}" TargetType="{x:Type local:ColorGroupItem}" />

    <Style x:Key="SyncfusionColorGroupStyle" TargetType="{x:Type local:ColorGroup}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Margin" Value="0,6,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorGroup">
                    <Grid Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PanelVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="ColorGroupHeader"
                            Grid.Row="0"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHeaderBackGround}"
                            Visibility="{TemplateBinding HeaderVisibility}" />
                        <TextBlock
                            x:Name="ColorGroupHeaderText"
                            Grid.Row="0"
                            Margin="5,2,2,2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="12"
                            FontWeight="{StaticResource MaterialLightCustom.FontWeightNormal}"
                            Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHeaderForeGround}"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HeaderName}"
                            Visibility="{TemplateBinding HeaderVisibility}" />

                        <ItemsControl
                            x:Name="ColorGroupItemsControl"
                            Grid.Row="1"
                            Margin="0,6,0,0"
                            HorizontalAlignment="Left"
                            IsTabStop="False"
                            ItemsSource="{TemplateBinding DataSource}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ColorGroupHeader" Property="Fill" Value="{StaticResource ContentBackgroundAlt2}" />
                            <Setter TargetName="ColorGroupHeaderText" Property="Foreground" Value="{StaticResource DisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionColorGroupStyle}" TargetType="{x:Type local:ColorGroup}" />

    <Style x:Key="SyncfusionPolygonItemStyle" TargetType="{x:Type local:PolygonItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PolygonItem">
                    <Grid Focusable="False">
                        <Polygon
                            x:Name="polygon"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=color}"
                            Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Points}"
                            Stroke="Black"
                            StrokeThickness="0">
                            <ToolTipService.ToolTip>
                                <TextBlock Text="{TemplateBinding ColorName}" />
                            </ToolTipService.ToolTip>
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionPolygonItemStyle}" TargetType="{x:Type local:PolygonItem}" />

    <Style x:Key="SyncfusionColorPickerPaletteStyle" TargetType="{x:Type local:ColorPickerPalette}">
        <Setter Property="ThemeHeaderBackGround" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="ThemeHeaderForeGround" Value="{StaticResource ContentForeground}" />
        <Setter Property="MouseOverBackground" Value="{StaticResource SecondaryHoverBackground}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource HeaderTemplateKey}" />
        <Setter Property="MoreColorsIcon">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing Brush="{StaticResource ContentForeground}" Geometry="M25.620001,10.567001C24.123999,10.567001 22.928015,11.763 22.928015,13.259003 22.928015,14.753998 24.123999,15.950005 25.620001,15.950005L25.719,15.950005C27.114996,15.950005 28.411018,14.753998 28.411018,13.259003 28.411018,12.162003 27.713018,11.264999 26.716009,10.765999 26.317999,10.667 26.019018,10.567001 25.620001,10.567001z M6.0809951,10.567001C4.5859995,10.567001 3.3890083,11.763 3.3890085,13.259003 3.3890083,14.753998 4.5859995,15.950005 6.0809951,15.950005L6.2800002,15.950005C7.6759968,15.950005 8.9720173,14.753998 8.9720173,13.259003 8.9720173,12.162003 8.1740131,11.165001 7.27701,10.765999 6.7789931,10.667 6.3800063,10.567001 6.0809951,10.567001z M20.536016,3.5890045C18.941013,3.5890045 17.743992,4.7850037 17.743992,6.1809998 17.743992,6.9780045 18.143009,7.6760025 18.642002,8.0750046 18.841007,8.2740021 19.140018,8.473999 19.338993,8.572998 19.73801,8.7730026 20.136999,8.9720001 20.536016,8.9720001 22.031012,8.9720001 23.226995,7.776001 23.226995,6.2799988 23.226995,4.7850037 22.031012,3.5890045 20.536016,3.5890045z M11.563998,3.5890045C11.364017,3.5890045 11.265018,3.6880035 11.065005,3.6880035 9.7690144,3.8880005 8.6730061,4.8850021 8.6730061,6.2799988 8.6730061,7.776001 9.8689899,8.9720001 11.364017,8.9720001 12.162021,8.9720001 12.760013,8.6730042 13.257998,8.1740036 13.756991,7.6760025 14.15601,6.9780045 14.15601,6.2799988 14.15601,4.7850037 12.959018,3.5890045 11.563998,3.5890045z M15.950016,0C24.821997,0 31.900002,6.3800049 31.900002,14.155998 31.900002,19.139999 28.011999,23.028 23.028021,23.028L19.838017,23.028C18.44202,23.028 17.146,24.324005 17.146,25.720001 17.146,26.417 17.545017,26.916 17.843998,27.514 18.343021,28.012001 18.541996,28.611 18.541996,29.307999 18.541996,30.704002 17.346012,32 15.85001,32 7.0780048,31.900002 -5.2932592E-09,24.821999 0,15.950005 -5.2932592E-09,7.0780029 7.0780048,0 15.950016,0z" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter Property="MoreColorsIconSize" Value="16,16" />
        <Setter Property="BorderThickness" 
                Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="{StaticResource MaterialLightCustom.BodyTextStyle}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialLightCustom.ThemeFontFamily}" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialLightCustom.FontWeightNormal}" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorPickerPalette">
                    <Grid x:Name="OuterGrid">
                        <Border
                            x:Name="ColorPaletteBorder"
                            Background="Transparent"
                            BorderBrush="Transparent">
                            <Grid x:Name="lay">
                                <Grid.Resources>
                                    <ItemsPanelTemplate x:Key="ItemPanelTemplate">
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                    <ItemsPanelTemplate x:Key="ItemPanelTemplate2">
                                        <StackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </Grid.Resources>

                                <Border
                                    x:Name="ColorPickerBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    FocusVisualStyle="{x:Null}"
                                    CornerRadius="0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            x:Name="ColorBorder"
                                            FocusVisualStyle="{x:Null}"
                                            Grid.Column="0"
                                            Padding="2"
                                            SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                        </Border>
                                        <Border
                                            x:Name="UpDownBorder"
                                            Grid.Column="1"
                                            MinWidth="16"
                                            FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                            Background="Transparent">
                                            <Viewbox Width="7" Height="7">
                                                <Path
                                                    x:Name="Txt"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Fill="{StaticResource IconColor}" 
                                                    Stroke="Transparent"
                                                    StrokeThickness="1">
                                                    <Path.Data>
                                                        <PathGeometry>M 0 0 L 3.5 4 L 7 0 Z</PathGeometry>
                                                    </Path.Data>
                                                </Path>
                                            </Viewbox>
                                        </Border>
                                    </Grid>
                                </Border>

                                <Popup
                                    x:Name="pop"
                                    AllowsTransparency="True"
                                    Focusable="True">
                                    <Border x:Name="b" Padding="7">
                                        <Border.Effect>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Direction="-75"
                                                Opacity="0.5"
                                                ShadowDepth="2" />
                                        </Border.Effect>
                                        <Border
                                            Background="{StaticResource PopupBackground}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="0">
                                            <Grid Margin="6">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <Border
                                                    x:Name="Automatic1"
                                                    Grid.Row="0"
                                                    Background="{StaticResource ContentBackgroundAlt2}"
                                                    FocusVisualStyle="{x:Null}"
                                                    Focusable="True"
                                                    Height="32"
                                                    Visibility="{TemplateBinding AutomaticColorVisibility}">
                                                    <Grid Margin="4">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="24" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Border
                                                            x:Name="AutoBorder1"
                                                            Grid.Column="0"
                                                            BorderBrush="{StaticResource PopupBackground}"
                                                            BorderThickness="1"
                                                            CornerRadius="2">
                                                            <Border
                                                                x:Name="AutoBorder2"
                                                                Grid.Column="0"
                                                                Background="{StaticResource PopupBackground}"
                                                                BorderBrush="{StaticResource PopupBackground}"
                                                                BorderThickness="1">
                                                                <Border
                                                                    x:Name="aborder"
                                                                    Grid.Column="0"
                                                                    Background="{TemplateBinding AutomaticColor}" />
                                                            </Border>
                                                        </Border>
                                                        <TextBlock
                                                            x:Name="AutomaticText"
                                                            Grid.Column="1"
                                                            Margin="6,0,0,0"
                                                            Padding="2"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            FontSize="12"
                                                            Foreground="{StaticResource ContentForeground}"
                                                            Text="{shared_resources:SharedLocalizationResourceExtension ResourceName=AutomaticText}" />
                                                    </Grid>
                                                </Border>

                                                <ItemsControl
                                                    x:Name="ColorArea"
                                                    Grid.Row="1"
                                                    IsTabStop="False">
                                                    <local:ColorGroup
                                                        x:Name="item1"
                                                        IsTabStop="False"
                                                        HeaderName="{shared_resources:SharedLocalizationResourceExtension ResourceName=ThemeColorsText}"
                                                        ThemeHeaderBackGround="{TemplateBinding ThemeHeaderBackGround}"
                                                        ThemeHeaderForeGround="{TemplateBinding ThemeHeaderForeGround}" />
                                                    <local:ColorGroup
                                                        x:Name="item2"
                                                        IsTabStop="False"
                                                        HeaderName="{shared_resources:SharedLocalizationResourceExtension ResourceName=StandardColorsText}"
                                                        ThemeHeaderBackGround="{TemplateBinding ThemeHeaderBackGround}"
                                                        ThemeHeaderForeGround="{TemplateBinding ThemeHeaderForeGround}" />
                                                    <local:ColorGroup
                                                        x:Name="item3"
                                                        IsTabStop="False"
                                                        HeaderName="{shared_resources:SharedLocalizationResourceExtension ResourceName=RecentlyUsedText}"
                                                        ThemeHeaderBackGround="{TemplateBinding ThemeHeaderBackGround}"
                                                        ThemeHeaderForeGround="{TemplateBinding ThemeHeaderForeGround}" />
                                                </ItemsControl>
                                                <Border
                                                    x:Name="NoColor"
                                                    Grid.Row="2"  Height="{Binding ElementName=Automatic1, Path=Height, Mode=OneWay}"
                                                    Background="{StaticResource ContentBackgroundAlt2}"
                                                    FocusVisualStyle="{x:Null}"
                                                    Focusable="True" Margin="2,2,0,2"
                                                    Visibility="{TemplateBinding NoColorVisibility}">
                                                    <Grid Margin="4">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="24" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Border
                                                            Grid.Column="0"
                                                            BorderBrush="{StaticResource PopupBackground}"
                                                            BorderThickness="1"
                                                            CornerRadius="2">
                                                            <Border
                                                                Grid.Column="0"
                                                                Background="{StaticResource PopupBackground}"
                                                                BorderBrush="{StaticResource IconColor}"
                                                                BorderThickness="1">
                                                                <Border Grid.Column="0" Background="{StaticResource ContentBackgroundAlt2}" />
                                                            </Border>
                                                        </Border>
                                                        <TextBlock
                                                            x:Name="NoColorText"
                                                            Grid.Column="1"
                                                            Margin="6,0,0,0"
                                                            Padding="2"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            FontSize="{TemplateBinding FontSize}"
                                                            Foreground="{StaticResource ContentForeground}"
                                                            Text="{shared_resources:SharedLocalizationResourceExtension ResourceName=NoColorText}" />
                                                    </Grid>
                                                </Border>
                                                <Border
                                                    Grid.Row="3"
                                                    Margin="0,3,0,3"
                                                    BorderBrush="{StaticResource BorderAlt}"
                                                    BorderThickness=".5" />
                                                <Border
                                                    x:Name="MoreColors1"
                                                    Grid.Row="4"
                                                    Height="{Binding ElementName=Automatic1, Path=Height, Mode=OneWay}"
                                                    Margin="0,3,0,0"
                                                    Background="{StaticResource ContentBackgroundAlt2}"
                                                    BorderThickness="0"
                                                    FocusVisualStyle="{x:Null}"
                                                    Focusable="True">
                                                    <Border.Visibility>
                                                        <MultiBinding Converter="{StaticResource MoreColorVisibilityconverterkey}">
                                                            <Binding Path="IsStandardTabVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding Path="IsCustomTabVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding Path="MoreColorOptionVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        </MultiBinding>
                                                    </Border.Visibility>
                                                    <Grid x:Name="MoreColorsGrid">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Image
                                                            x:Name="morecolorsimage"
                                                            Grid.Column="0"
                                                            Width="{Binding Path=MoreColorsIconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Height="{Binding Path=MoreColorsIconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Margin="4"
                                                            Source="{TemplateBinding MoreColorsIcon}" />
                                                        <TextBlock
                                                            x:Name="MoreColorText"
                                                            Grid.Column="1"
                                                            Margin="8,0,0,0"
                                                            Padding="2"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            FontSize="{TemplateBinding FontSize}"
                                                            Foreground="{StaticResource ContentForeground}"
                                                            Text="{shared_resources:SharedLocalizationResourceExtension ResourceName=MoreColorsText}" />
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Border>

                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Mode" Value="Palette">
                            <Setter TargetName="b" Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger SourceName="AutoBorder1" Property="IsMouseOver" Value="True">
                            <Setter TargetName="AutoBorder1" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="Automatic1" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                        </Trigger>
                        <Trigger SourceName="Automatic1" Property="IsMouseOver" Value="True">
                            <Setter TargetName="AutoBorder1" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="AutoBorder2" Property="BorderBrush" Value="{StaticResource Black}" />
                            <Setter TargetName="Automatic1" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="AutomaticText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger SourceName="Automatic1" Property="IsFocused" Value="True">
                            <Setter TargetName="AutoBorder1" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="AutoBorder2" Property="BorderBrush" Value="{StaticResource Black}" />
                            <Setter TargetName="Automatic1" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="AutomaticText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger SourceName="MoreColors1" Property="IsMouseOver" Value="True">
                            <Setter TargetName="MoreColors1" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MoreColorText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger SourceName="MoreColors1" Property="IsFocused" Value="True">
                            <Setter TargetName="MoreColors1" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MoreColorText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger SourceName="NoColor" Property="IsMouseOver" Value="True">
                            <Setter TargetName="NoColor" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="NoColorText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger SourceName="NoColor" Property="IsFocused" Value="True">
                            <Setter TargetName="NoColor" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="NoColorText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsAutomaticBorderPressed" Value="True">
                            <Setter TargetName="AutoBorder1" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="AutoBorder2" Property="BorderBrush" Value="{StaticResource Black}" />
                            <Setter TargetName="Automatic1" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="AutomaticText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsMoreColorsBorderPressed" Value="True">
                            <Setter TargetName="MoreColors1" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="MoreColorText" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Mode" Value="DropDown" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Txt" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="Mode" Value="DropDown" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Txt" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="ColorBorder" Property="IsMouseOver" Value="True" />
                                <Condition Property="Mode" Value="Split" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="Mode" Value="Split" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColorBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="UpDownBorder" Property="IsMouseOver" Value="True" />
                                <Condition Property="Mode" Value="Split" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="UpDownBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Txt" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="UpDownBorder" Property="IsFocused" Value="True" />
                                <Condition Property="Mode" Value="Split" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="UpDownBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Txt" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <Trigger SourceName="pop" Property="IsOpen" Value="True">
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Txt" Property="Fill" Value="{StaticResource IconColor}" />
                            <!--<Setter TargetName="UpDownBorder" Property="Background" Value="Transparent" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="UpDownBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="b" Property="Background" Value="{StaticResource PopupBackground}" />
                            <Setter TargetName="b" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="Automatic1" Property="Background" Value="{StaticResource DisabledForeground}" />
                            <Setter TargetName="AutomaticText" Property="Foreground" Value="{StaticResource DisabledForeground}" />
                            <Setter TargetName="MoreColors1" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MoreColorText" Property="Foreground" Value="{StaticResource DisabledForeground}" />
                            <Setter TargetName="Txt" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </Trigger>
                        <Trigger Property="Mode" Value="Split">
                            <!--<Setter TargetName="ColorBorder" Property="Focusable" Value="True"/>-->
                            <Setter TargetName="UpDownBorder" Property="Focusable" Value="True"/>
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Default">
                            <Setter Property="BorderHeight" Value="24" />
                            <Setter Property="BorderWidth" Value="24" />
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                            <Setter Property="BorderHeight" Value="{StaticResource TouchMode.MinHeight}" />
                            <Setter Property="BorderWidth" Value="{StaticResource TouchMode.MinHeight}" />
                            <Setter TargetName="ColorBorder" Property="MinWidth" Value="{StaticResource TouchMode.MinHeight}" />
                        </Trigger>
                        <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
                        </Trigger>
                        <!--<Trigger Property="Mode" Value="DropDown">
                            <Setter TargetName="ColorPickerBorder" Property="Focusable" Value="True"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionColorPickerPaletteStyle}" TargetType="{x:Type local:ColorPickerPalette}" />

</ResourceDictionary>
