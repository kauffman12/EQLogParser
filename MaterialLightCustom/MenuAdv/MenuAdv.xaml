<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:vsm="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.WPF">

    <ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialLightCustom"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialLightCustom"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialLightCustom.WPF;component/MSControl/FlatButton.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!--  Top Scroll Button Style  -->
    <Style x:Key="SyncfusionTopScrollButtonStyle" BasedOn="{StaticResource WPFFlatButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{StaticResource ContentForeground}"
                     RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform Angle="180" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Bottom Scroll Button Style  -->
    <Style x:Key="SyncfusionBottomScrollButtonStyle" BasedOn="{StaticResource WPFFlatButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{StaticResource ContentForeground}">
                </Path>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Check Box Style  -->
    <Style x:Key="SyncfusionMenuCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border
                            x:Name="checkBoxBorder"
                            Width="17"
                            Height="17"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{StaticResource MaterialLightCustom.BorderThickness}"
                            CornerRadius="0">
                            <Path
                                x:Name="glyph"
                                Width="9"
                                Height="11"
                                Data="M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z"
                                Fill="{StaticResource IconColor}"
                                FlowDirection="LeftToRight" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Radion BUtton Style  -->
    <Style x:Key="SyncfusionMenuRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border
                            x:Name="radioButtonBorder"
                            Width="20"
                            Height="20"
                            Background="{StaticResource ContentBackgroundSelection}"
                            BorderBrush="{StaticResource ContentBackgroundSelection}"
                            BorderThickness="1"
                            CornerRadius="0">
                            <Ellipse
                                x:Name="ellipsePath"
                                Width="8"
                                Height="8"
                                Margin="1"
                                Fill="{StaticResource IconColor}"
                                StrokeThickness="1" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="ellipsePath" Property="Fill" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="ellipsePath" Property="Fill" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource PopupBackground}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource PopupBackground}" />
                            <Setter TargetName="ellipsePath" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  MenuItemSeparator Style  -->
    <Style x:Key="SyncfusionMenuItemSeparatorStyle" TargetType="{x:Type shared:MenuItemSeparator}">
        <Setter Property="Background" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Margin" Value="26,1,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="shared:MenuItemSeparator">
                    <Border
                            Height="1"
                            Background="{TemplateBinding BorderBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionMenuItemSeparatorStyle}" TargetType="{x:Type shared:MenuItemSeparator}" />

    <!--  MenuAdv Style  -->
    <Style x:Key="SyncfusionMenuAdvStyle" TargetType="{x:Type shared:MenuAdv}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialLightCustom.BorderThickness}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FontSize" Value="{StaticResource MaterialLightCustom.BodyTextStyle}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialLightCustom.ThemeFontFamily}" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialLightCustom.FontWeightNormal}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="shared:MenuAdv">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionMenuAdvStyle}" TargetType="{x:Type shared:MenuAdv}" />

    <!--  MenuItemAdv Style  -->
    <Style x:Key="SyncfusionMenuItemAdvStyle" TargetType="{x:Type shared:MenuItemAdv}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="BottomScrollButtonStyle" Value="{StaticResource SyncfusionBottomScrollButtonStyle}" />
        <Setter Property="TopScrollButtonStyle" Value="{StaticResource SyncfusionTopScrollButtonStyle}" />
        <Setter Property="CheckBoxStyle" Value="{StaticResource SyncfusionMenuCheckBoxStyle}" />
        <Setter Property="RadioButtonStyle" Value="{StaticResource SyncfusionMenuRadioButtonStyle}" />
        <Setter Property="Padding" Value="4,4,8,4" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialLightCustom.ThemeFontFamily}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="MenuItemAdvDefault" TargetType="shared:MenuItemAdv">
                    <Grid x:Name="menuItemAdvGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="MenuItemBorder"
                            Grid.ColumnSpan="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{StaticResource MaterialLightCustom.BorderThickness}"
                            Opacity="0" />

                        <Grid
                            x:Name="IconGrid"
                            Grid.Column="0"
                            MinWidth="22">
                            <ContentControl
                                x:Name="IconContent"
                                Margin="3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                IsTabStop="False" />
                            <CheckBox
                                x:Name="CheckBoxPanel"
                                IsTabStop="False"
                                Style="{TemplateBinding CheckBoxStyle}"
                                Visibility="{TemplateBinding CheckBoxVisibility}" />
                            <RadioButton
                                x:Name="RadioButtonPanel"
                                IsTabStop="False"
                                Style="{TemplateBinding RadioButtonStyle}"
                                Visibility="{TemplateBinding RadioButtonVisibility}" />
                        </Grid>

                        <ContentPresenter
                            x:Name="MenuItemContent"
                            Grid.Column="2"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>

                        <TextBlock
                            x:Name="GestureTextBlock"
                            Grid.Column="3"
                            Margin="14,3,8,3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontSize="{StaticResource MaterialLightCustom.CaptionText}"
                            Foreground="{StaticResource ContentForegroundAlt}"
                            Text="{TemplateBinding InputGestureText}"
                            Visibility="Collapsed" />

                        <Border
                            Grid.Column="4"
                            Width="20"
                            Visibility="{TemplateBinding ExtendButtonVisibility}">
                            <Path
                                Name="ExtendButton"
                                Grid.Column="5"
                                Width="3"
                                Height="5"
                                Margin="0,0,7,0"
                                HorizontalAlignment="right"
                                Data="M129,173 L129,282 L246,222 z"
                                Fill="{StaticResource IconColor}"
                                Stretch="Fill"
                                Stroke="{StaticResource IconColor}" />
                        </Border>

                        <Popup x:Name="SubMenuPopup" AllowsTransparency="True">
                            <Border
                                x:Name="PopUpBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                
                                BorderThickness="{StaticResource MaterialLightCustom.BorderThickness}"
                                Effect="{StaticResource Default.ShadowDepth3}">
                                <Border.Margin>
                                    <Thickness>14,0,14,14</Thickness>
                                </Border.Margin>
                                <Border.Padding>
                                    <Thickness>0,4,0,4</Thickness>
                                </Border.Padding>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Button
                                        x:Name="PART_TopScroll"
                                        Grid.Row="0"
                                        Height="{TemplateBinding ScrollerHeight}"
                                        Style="{TemplateBinding TopScrollButtonStyle}"
                                        Visibility="Collapsed" />
                                    <Grid x:Name="PopUpGrid" Grid.Row="1">
                                        <ScrollViewer
                                            x:Name="PART_ScrollViewer"
                                            Padding="1"
                                            Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                                            BorderBrush="Transparent"
                                            HorizontalScrollBarVisibility="Disabled"
                                            VerticalScrollBarVisibility="Hidden">
                                            <ItemsPresenter Margin="0" />
                                        </ScrollViewer>
                                    </Grid>
                                    <Button
                                        x:Name="PART_BottomScroll"
                                        Grid.Row="2"
                                        Height="{TemplateBinding ScrollerHeight}"
                                        Style="{TemplateBinding BottomScrollButtonStyle}"
                                        Visibility="Collapsed" />
                                </Grid>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Popup>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GestureTextBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ContentForegroundAlt}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExtendButton" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="MenuItemSelected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GestureTextBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ContentForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExtendButton" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource IconColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExtendButton" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource IconColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="MenuItemFocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="SubMenuItemFocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GestureTextBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ContentForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExtendButton" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource IconColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExtendButton" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource IconColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuHeader" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="GestureTextBlock" Property="Foreground" Value="{StaticResource ContentForeground}" />
                            <Setter TargetName="ExtendButton" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuHeader" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="GestureTextBlock" Property="Foreground" Value="{StaticResource ContentForeground}" />
                            <Setter TargetName="ExtendButton" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuHeader" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource PopupBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="GestureTextBlock" Property="Foreground" Value="{StaticResource ContentForegroundAlt}" />
                            <Setter TargetName="ExtendButton" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuHeader" />
                                <Condition Property="IsSubMenuOpen" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsFocused" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                                <Condition Property="IsPressed" Value="false" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsSubMenuOpen" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuItem" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="GestureTextBlock" Property="Foreground" Value="{StaticResource ContentForeground}" />
                            <Setter TargetName="ExtendButton" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuItem" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="GestureTextBlock" Property="Foreground" Value="{StaticResource ContentForeground}" />
                            <Setter TargetName="ExtendButton" Property="Fill" Value="{StaticResource IconColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubMenuItem" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource PopupBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="GestureTextBlock" Property="Foreground" Value="{StaticResource ContentForegroundAlt}" />
                            <Setter TargetName="ExtendButton" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelItem" />
                                <Condition Property="IsFocused" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                                <Condition Property="IsPressed" Value="false" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelItem" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelItem" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelItem" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelItem" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="MenuItemBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuHeader" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuHeader" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuHeader" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuHeader" />
                    <Condition Property="IsSubMenuOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsFocused" Value="false" />
                    <Condition Property="IsMouseOver" Value="false" />
                    <Condition Property="IsPressed" Value="false" />
                    <Condition Property="IsEnabled" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsSubMenuOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuItem" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubMenuItem" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsFocused" Value="false" />
                    <Condition Property="IsMouseOver" Value="false" />
                    <Condition Property="IsPressed" Value="false" />
                    <Condition Property="IsEnabled" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter  Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </MultiTrigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionMenuItemAdvStyle}" TargetType="{x:Type shared:MenuItemAdv}" />

</ResourceDictionary>
