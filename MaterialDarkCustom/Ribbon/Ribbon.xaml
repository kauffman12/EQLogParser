<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:Microsoft_Windows_Luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:shell="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:tools="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
    xmlns:tools_resources="clr-namespace:Syncfusion.Windows.Tools.Controls.Resources;assembly=Syncfusion.Tools.WPF"
    xmlns:windows_shared="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.WPF">
    <ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialDarkCustom"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialDarkCustom"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/ToolTip.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/ColorPickerPalette/ColorPickerPalette.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/ScrollViewer.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/FlatButton.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/GlyphRepeatButton.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/Button.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/Separator.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/Menu.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/TextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/TextBlock.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/ComboBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/ListBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/RadioButton.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/CheckBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/GlyphDropdownExpander.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/GlyphEditableDropdownExpander.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/ToggleButton.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/TabControl.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.MaterialDarkCustom.WPF;component/MSControl/GlyphButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <tools:ColorToTransparentBrushConverter x:Key="colorToTransparentBrushConverter" />
    <tools:ColorToBrushConverter x:Key="colorToBrushConverter" />
    <tools:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />
    <tools:FilterToRibbonButtonConverter x:Key="FilterToRibbonButtonConverter" />
    <tools:BooleanToVisibilitySeperatorConverter x:Key="BoolInvertConverter" />
    <tools:GalleryFilterConverter x:Key="GalleryFilterConverter" />
    <tools:CountToVisibilityConverter x:Key="CountToVisibilityConverter" />
    <tools:SizeToDoubleConverter x:Key="SizeToDoubleConverter" />
    <tools:TextWrappingConverter x:Key="TextWrappingConverter" />
    <tools:BorderThicknessConverter x:Key="borderThicknessConverter" />
    <shared:DisableEffect x:Key="SyncfusionRibbonDisableEffect" />
	<shared:EmptyObjectToObjectConverter x:Key="EmptyObjectToObjectConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>

    <!--  Start of the RibbonDropDownButton resources  -->

    <ContentControl x:Key="SyncfusionDropDownPathIcon">
        <ContentControl.Style>
            <Style>
                <Setter Property="Control.OverridesDefaultStyle" Value="True" />
                <Setter Property="Control.HorizontalAlignment" Value="Center" />
                <Setter Property="Control.VerticalAlignment" Value="Top" />
                <Setter Property="Control.Height" Value="14" />
                <Setter Property="Control.Margin" Value="0,-1,0,0" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <Border>
                                <Path            x:Name="path"
                                                 Width="5"
                                                 Height="3"
                                                 Margin="0,4,0,0"
                                                 HorizontalAlignment="Center"
                                                 Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                                 Fill="{TemplateBinding Foreground}"
                                                 Stretch="Fill" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ContentControl.Style>
    </ContentControl>

    <!--  DropDownButton style for QuickAccessToolBar  -->
    <Style x:Key="SyncfusionQuickAccessPopupDropDownButtonStyle" TargetType="{x:Type tools:DropDownButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Width" Value="11" />
        <Setter Property="Height" Value="21" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="ButtonBase.ClickMode">
            <Setter.Value>
                <x:Static Member="ClickMode.Press" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                    <Border
                        Name="PART_ToggleButton"
                        Width="13"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Panel.Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid
                                Height="17"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*" />
                                    <RowDefinition Height="5*" />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    x:Name="path1"
                                    Width="5"
                                    Height="1"
                                    Margin="0,4,0,0"
                                    VerticalAlignment="Center"
                                    Stroke="{StaticResource IconColor}" />
                                <Path
                                    x:Name="path2"
                                    Grid.Row="1"
                                    Width="5"
                                    Height="3"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                    Fill="{StaticResource IconColor}"
                                    Stretch="Fill" />
                            </Grid>
                            <Popup
                                Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                Placement="Bottom"
                                PopupAnimation="Fade"
                                StaysOpen="False">

                                <Border
                                    Background="{StaticResource PopupBackground}"
                                    BorderBrush="{StaticResource BorderAlt}"
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                    
                                    Effect="{StaticResource Default.ShadowDepth3}">
                                    <Border.Margin>
                                        <Thickness>8,1,8,8</Thickness>
                                    </Border.Margin>
                                    <ItemsPresenter />
                                </Border>

                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="path2" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="path1" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="path2" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="path1" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="path2" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                            <Setter TargetName="path1" Property="Stroke" Value="{StaticResource IconDisabledColor}" />
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="30" />
                            <Setter Property="MinWidth" Value="30" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DropDownButton style for OverflowButton  -->
    <Style x:Key="SyncfusionRibbonOverflowDropDownButtonStyle" TargetType="{x:Type tools:DropDownButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="20" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="ButtonBase.ClickMode">
            <Setter.Value>
                <x:Static Member="ClickMode.Press" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                    <Border
                        Name="PART_ToggleButton"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Panel.Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Path
                                x:Name="path"
                                Data="{TemplateBinding PathGeometry}"
                                Fill="{StaticResource IconColor}"
                                Stroke="{StaticResource IconColor}"
                                StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}" />
                            <Popup
                                Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                Placement="Bottom"
                                PopupAnimation="Fade"
                                StaysOpen="False">

                                <Border
                                    Background="{StaticResource PopupBackground}"
                                    BorderBrush="{StaticResource BorderAlt}"
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                    Margin="8,1,8,8"
                                    
                                    Effect="{StaticResource Default.ShadowDepth3}">
                                    <ItemsPresenter />
                                </Border>

                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource IconDisabledColor}" />
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DropDownButton style for the overflow button in Simplified Ribbon  -->
    <Style x:Key="SyncfusionSimplifiedOverflowDropDownButtonStyle" BasedOn="{StaticResource SyncfusionRibbonOverflowDropDownButtonStyle}" TargetType="{x:Type tools:DropDownButton}">
        <Setter Property="Width" Value="38" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="PathGeometry">
            <Setter.Value>
                <GeometryGroup>
                    <EllipseGeometry Center="11,21" RadiusX="1.5" RadiusY="1.5"/>
                    <EllipseGeometry Center="18.5,21" RadiusX="1.5" RadiusY="1.5"/>
                    <EllipseGeometry Center="26,21" RadiusX="1.5" RadiusY="1.5"/>
                </GeometryGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="RibbonItemVectorImageTemplate">
        <Grid>
            <Viewbox Name="VectorImage">
                <Viewbox.Child>
                    <Grid x:Name="PathGrid" />
                </Viewbox.Child>
            </Viewbox>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DropDownButtonIconTemplate">
        <Grid>
            <Image RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="{Binding IconStretch, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:DropDownButton}}}" 
  x:Name="PART_Image" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent }}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SplitButtonIconTemplate">
        <Grid>
            <Image RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="{Binding IconStretch, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:SplitButton}}}" 
  x:Name="PART_Image" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent }}" />
        </Grid>
    </DataTemplate>

    <!--  DropDownButton style for RibbonBar  -->
    <Style x:Key="SyncfusionRibbonBarDropDownButtonStyle" TargetType="{x:Type tools:DropDownButton}">
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                    <Border
                        Name="PART_ToggleButton"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <StackPanel Orientation="Vertical">
                                <Border
                                Name="PART_ImageBorder"
                                Margin="3"
                                Background="Transparent"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                BorderBrush="Transparent"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                DockPanel.Dock="Top">
                                    <Grid MinWidth="31" MinHeight="31">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="7" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Name="IconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" MaxHeight="32" MaxWidth="32"/>
                                    </Grid>
                                </Border>
                                <tools:CustomItemsControl
                                x:Name="label"
                                Margin="3,2,3,3"
                                DockPanel.Dock="Bottom"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                Path="{StaticResource SyncfusionDropDownPathIcon}"
                                ItemsSource="{Binding Path=Label, Mode=OneWay, Converter={StaticResource TextWrappingConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <tools:MultilinePanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </tools:CustomItemsControl>
                                <Popup
                                        Name="PART_Popup"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PlacementTarget="{Binding ElementName=PART_ToggleButton}"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                    <Border BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            
                                            Effect="{StaticResource Default.ShadowDepth5}">
                                        <ItemsPresenter/>
                                    </Border>
                                </Popup>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IconTemplate" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="IconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource DropDownButtonIconTemplate}"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsDropDownOpen}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                        </MultiDataTrigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter TargetName="IconContent" Property="FrameworkElement.MaxHeight" Value="38" />
                            <Setter TargetName="IconContent" Property="FrameworkElement.MaxWidth" Value="38" />
                            <Setter TargetName="label" Property="Margin" Value="3,15,3,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DropDown Button Style  -->
    <Style x:Key="SyncfusionRibbonDropDownButtonStyle" TargetType="{x:Type tools:DropDownButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Label" Value="New Button" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="LargeIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt32.png" />
        <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png" />
        <Setter Property="MediumIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt20.png"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SizeForm" Value="ExtraSmall">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                            <Border
                                Name="PART_ToggleButton"
                                MinHeight="22"
                                Focusable="{TemplateBinding Focusable}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                SnapsToDevicePixels="True">
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        Grid.Column="0"
                                        Margin="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter 
                                    Name="IconContent" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>
                                    </Border>

                                    <Path
                                        x:Name="path"
                                        Grid.Column="1"
                                        Width="5"
                                        Height="3"
                                        Margin="3,5"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                        Fill="{StaticResource IconColor}"
                                        Focusable="False"
                                        SnapsToDevicePixels="True"
                                        Stretch="Fill" />

                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">

                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            Background="Transparent"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Margin="0"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsDropDownOpen" Value="False"/>
                                        <Condition Property="IsPressed" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource DropDownButtonIconTemplate}"/>
                                </MultiTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter Property="Padding" Value="5" />
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinWidth" Value="47" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="SizeForm" Value="Small">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                            <Border
                                Name="PART_ToggleButton"
                                MinHeight="22"
                                Focusable="{TemplateBinding Focusable}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                Opacity="{TemplateBinding Opacity}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        Name="PART_ImageBorder"
                                        Grid.Column="0"
                                        Margin="2,3">
                                        <ContentPresenter 
                                    Name="IconContent" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>
                                    </Border>
                                    <tools:RibbonAutomatableTextBlock
                                        x:Name="label"
                                        Grid.Column="1"
                                        Margin="2,3,4,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Label}" />

                                    <Path
                                        x:Name="path"
                                        Grid.Column="2"
                                        Width="5"
                                        Height="3"
                                        Margin="3,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                        Fill="{StaticResource IconColor}"
                                        Focusable="False"
                                        Stretch="Fill" />

                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            Background="{StaticResource PopupBackground}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Margin="0"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource DropDownButtonIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                                    <Setter TargetName="PART_ToggleButton" Property="Padding" Value="3,3,0,3"/>
                                    <Setter TargetName="label" Property="Margin" Value="6,2,15,0"/>
                                    <Setter TargetName="PART_ImageBorder" Property="Margin" Value="2"/>
                                    <Setter TargetName="path" Property="Margin" Value="0,0,5,0"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="2"/>
                                    <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                                    <Setter Property="RenderTransform" TargetName="path">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" CenterX="3" CenterY="2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsSmallImageVisible" Value="False">
                                    <Setter TargetName="PART_ImageBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ToggleButton" Property="Padding" Value="5,4,0,4"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="5,2,2,2"/>
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="Normal"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Padding" Value="5" />
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                    <Setter Property="MinWidth" Value="47" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="SizeForm" Value="Large">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                            <Border
                                Name="PART_ToggleButton"
                                Focusable="{TemplateBinding Focusable}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                Opacity="{TemplateBinding Opacity}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <StackPanel Orientation="Vertical">
                                        <Border
                                            Name="PART_ImageBorder"
                                            Margin="3"
                                            SnapsToDevicePixels="True">
                                            <ContentPresenter 
                                    Name="IconContent" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="32" Width="32"/>
                                        </Border>
                                        <tools:CustomItemsControl
                                            x:Name="label"
                                            Margin="2,3,2,2"
                                            Focusable="False"
                                            Path="{StaticResource SyncfusionDropDownPathIcon}"
											Foreground="{TemplateBinding Foreground}"
											ItemsSource="{Binding Path=Label, Mode=OneWay, Converter={StaticResource TextWrappingConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <tools:MultilinePanel HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </tools:CustomItemsControl>
                                        <Popup
                                            Name="PART_Popup"
                                            AllowsTransparency="True"
                                            Focusable="False"
                                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                            Placement="Bottom"
                                            PopupAnimation="Fade"
                                            StaysOpen="False"
                                            VerticalOffset="-2">
                                            <Border
                                                MinWidth="28"
                                                MinHeight="14"
                                                Background="{StaticResource PopupBackground}"
                                                BorderBrush="{StaticResource BorderAlt}"
                                                
                                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                                <Border.Margin>
                                                    <Thickness>8,1,8,8</Thickness>
                                                </Border.Margin>
                                                <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                    <ItemsPresenter
                                                        Name="Presenter"
                                                        Margin="0"
                                                        Grid.IsSharedSizeScope="true"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource DropDownButtonIconTemplate}"/>
                                </MultiTrigger>

                                <Trigger Property="IsLargeImageVisible" Value="False">
                                    <Setter TargetName="PART_ImageBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                </Trigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="48" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="48" />
                                    <Setter TargetName="IconContent" Property="RenderOptions.BitmapScalingMode" Value="LowQuality" />
                                    <Setter TargetName="label" Property="Margin" Value="2,10,2,2" />
                                    <Setter Property="MinHeight" Value="100" />
                                    <Setter Property="MinWidth" Value="60" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
            </Trigger>

            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:DropDownButton}">
                            <Border x:Name="PART_ToggleButton"
                                    Focusable="{TemplateBinding Focusable}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                    Opacity="{TemplateBinding Opacity}"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        Name="PART_ImageBorder"
                                        Grid.Column="0">
                                        <ContentPresenter 
                                    Name="IconContent" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="20" Width="20"/>
                                    </Border>
                                    <tools:RibbonAutomatableTextBlock
                                        x:Name="label"
                                        Grid.Column="1"
                                        Margin="5,3,0,2"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Label}" />

                                    <Path
                                        x:Name="path"
                                        Grid.Column="2"
                                        Width="5"
                                        Height="3"
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                        Fill="{StaticResource IconColor}"
                                        Focusable="False"
                                        Stretch="Fill" />
                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            Background="{StaticResource PopupBackground}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>

                                            <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Margin="0"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                                </Trigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource DropDownButtonIconTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Width" Value="NaN"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ToggleButton" Property="Padding" Value="7,0,7,0"/>
                                </MultiTrigger>
                                <Trigger Property="SizeForm" Value="ExtraSmall">
                                    <Setter TargetName="label" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter Property="Padding" Value="5" />
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                    <Setter Property="MinWidth" Value="47" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonDropDownButtonStyle}" TargetType="{x:Type tools:DropDownButton}" />

    <!--  Split Button Style  -->
    <Style x:Key="SyncfusionSplitButtonStyle" TargetType="{x:Type tools:SplitButton}">
        <Setter Property="Label" Value="New Button" />
        <Setter Property="LargeIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt32.png" />
        <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="MediumIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt20.png"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <Trigger Property="SizeForm" Value="ExtraSmall">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:SplitButton}">
                            <Border
                                Name="OuterBorder"
                                MinHeight="22"
                                Focusable="{TemplateBinding Focusable}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                Opacity="{TemplateBinding Opacity}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="12" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        Name="PART_Button"
                                        Grid.Column="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter Name="IconContent" HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
 ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>
                                    </Border>

                                    <tools:RibbonUIBorder
                                        Name="PART_ToggleButton"
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                        SnapsToDevicePixels="True"
                                        ToolTip="{TemplateBinding ToggleButtonToolTip}">

                                        <Path
                                            x:Name="PathData"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Width="6"
                                            Height="4"
                                            Fill="{StaticResource IconColor}"
                                            Focusable="False"
                                            Stretch="fill"
                                            Margin="0,2,0,0"
                                            StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}">
                                            <Path.Data>
                                                <PathGeometry>M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z</PathGeometry>
                                            </Path.Data>
                                        </Path>

                                    </tools:RibbonUIBorder>
                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">

                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            Background="{StaticResource PopupBackground}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Margin="0"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                                        <Condition Property="IsPressed" Value="False"/>
                                        <Condition Property="IsDropDownOpen" Value="False"/>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource SplitButtonIconTemplate}"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="3,1"/>
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />

                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Button" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                                        <Condition Property="IsPressed" Value="False"/>
                                        <Condition Property="IsDropDownOpen" Value="False"/>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PathData" Property="Fill" Value="{StaticResource SecondaryForeground}"/>
                                </MultiTrigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter Property="MinHeight" Value="27" />
                                    <Setter Property="Padding" Value="5" />
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinWidth" Value="47" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Default">
                                    <Setter Property="MinHeight" Value="22" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter TargetName="OuterBorder" Property="MinHeight" Value="20" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="SizeForm" Value="Small" />
                    <Condition Property="HitTestArea" Value="LabelAndImage" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:SplitButton}">
                            <Border
                                Name="OuterBorder"
                                MinHeight="22"
                                Focusable="{TemplateBinding Focusable}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="{TemplateBinding Opacity}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="14" />
                                    </Grid.ColumnDefinitions>

                                    <Border
                                        Name="PART_Button"
                                        Grid.Column="0"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                        SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Name="IconContent" HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
 ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>
                                            <tools:RibbonAutomatableTextBlock
                                                Name="label"
                                                Grid.Column="1"
                                                Margin="2,3,4,0"
                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                Foreground="{TemplateBinding Foreground}"
                                                FontFamily="{TemplateBinding FontFamily}"
                                                Text="{TemplateBinding Label}" />
                                        </Grid>
                                    </Border>

                                    <tools:RibbonUIBorder
                                        Name="PART_ToggleButton"
                                        Grid.Column="2"
                                        AutomationProperties.Name="DropDownButton"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                        ToolTip="{TemplateBinding ToggleButtonToolTip}">
                                        <Grid AutomationProperties.Name="DropDownButton">
                                            <!--  <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}" RadiusX="2" RadiusY="2"/>  -->

                                            <Path
                                                x:Name="path"
                                                Width="6"
                                                Height="4"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Fill="{StaticResource IconColor}"
                                                Focusable="False"
                                                Margin="0,2,0,0"
                                                Stretch="Fill">
                                                <Path.Data>
                                                    <PathGeometry>M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z</PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Grid>
                                    </tools:RibbonUIBorder>
                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">

                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <ScrollViewer Margin="1" Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>

                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource SplitButtonIconTemplate}"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="2"/>
                                    <Setter Property="Visibility" TargetName="IconContent" Value="Collapsed"/>
                                </MultiTrigger>

                                <Trigger Property="IsSmallImageVisible" Value="True">
                                    <Setter TargetName="IconContent" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                                    <Setter TargetName="PART_ToggleButton" Property="Padding" Value="0,4"/>
                                    <Setter TargetName="PART_Button" Property="Padding" Value="3,4,0,4"/>
                                    <Setter TargetName="IconContent" Property="Margin" Value="2"/>
                                    <Setter TargetName="label" Property="Margin" Value="6,2,15,0"/>
                                    <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                                    <Setter Property="RenderTransform" TargetName="path">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" CenterX="3" CenterY="2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource ContentForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness0111}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Button" Property="Padding" Value="5,5,0,5"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="5,2,2,2"/>
                                    <Setter TargetName="label" Property="Margin" Value="8,0,15,1"/>
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="Normal"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinWidth" Value="47" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="SizeForm" Value="Small" />
                    <Condition Property="HitTestArea" Value="ImageOnly" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:SplitButton}">
                            <Border
                                Name="OuterBorder"
                                MinHeight="22"
                                Focusable="{TemplateBinding Focusable}"
                                BorderBrush="Transparent"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                Opacity="{TemplateBinding Opacity}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Border
                                        Name="PART_Button"
                                        Grid.Column="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}">
                                        <Border.CornerRadius>
                                            <CornerRadius>3,0,0,3</CornerRadius>
                                        </Border.CornerRadius>
                                        <ContentPresenter Name="IconContent" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>
                                    </Border>
                                    <tools:RibbonUIBorder
                                        Name="PART_ToggleButton"
                                        Grid.Column="1"
                                        AutomationProperties.Name="DropDownButton"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                        ToolTip="{TemplateBinding ToggleButtonToolTip}">
                                        <Grid>
                                            <DockPanel>
                                                <tools:RibbonAutomatableTextBlock
                                                    Name="label"
                                                    Margin="2,0,2,0"
                                                    VerticalAlignment="Center"
                                                    DockPanel.Dock="Left"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    Text="{TemplateBinding Label}" />
                                                <Path
                                                    x:Name="path"
                                                    Width="6"
                                                    Height="4"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Margin="0,2,0,0"
                                                    Fill="{StaticResource IconColor}"
                                                    Stretch="Fill">
                                                    <Path.Data>
                                                        <PathGeometry>M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z</PathGeometry>
                                                    </Path.Data>
                                                </Path>
                                            </DockPanel>
                                        </Grid>
                                    </tools:RibbonUIBorder>
                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            Background="Transparent"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Margin="0"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource SplitButtonIconTemplate}"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="1"/>
                                </MultiTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource ContentForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness0111}" />
                                </MultiTrigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinWidth" Value="47" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
            </MultiTrigger>

            <Trigger Property="SizeForm" Value="Large">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:SplitButton}">
                            <Border
                                Name="OuterBorder"
                                Focusable="{TemplateBinding Focusable}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                Opacity="{TemplateBinding Opacity}">
                                <StackPanel Orientation="Vertical">
                                    <Border
                                        Name="PART_Button"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                        Visibility="Collapsed">
                                        <ContentPresenter Name="IconContent" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}"  ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="32" Width="32"/>
                                    </Border>
                                    <tools:RibbonUIBorder
                                        Name="PART_ToggleButton"
                                        AutomationProperties.Name="DropDownButton"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0,1,0,0"
                                        ToolTip="{TemplateBinding ToggleButtonToolTip}">
                                        <Grid>
                                            <tools:CustomItemsControl
                                                x:Name="label"
                                                Margin="0,2,0,2"
                                                Focusable="False"
                                                Foreground="{TemplateBinding Foreground}"
                                                ItemsSource="{Binding Path=Label, Mode=OneWay, Converter={StaticResource TextWrappingConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                Path="{StaticResource SyncfusionDropDownPathIcon}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <tools:MultilinePanel HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </tools:CustomItemsControl>
                                        </Grid>
                                    </tools:RibbonUIBorder>
                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                        <Border x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                            <Border
                                                MinWidth="28"
                                                MinHeight="14"
                                                Background="{StaticResource PopupBackground}"
                                                BorderBrush="{StaticResource BorderAlt}"
                                                
                                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                                <Border.Margin>
                                                    <Thickness>8,1,8,8</Thickness>
                                                </Border.Margin>
                                                <ScrollViewer Style="{StaticResource WPFMenuScrollViewer}">
                                                    <ItemsPresenter
                                                        Name="Presenter"
                                                        Margin="0"
                                                        Grid.IsSharedSizeScope="true"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </Popup>
                                </StackPanel>
                            </Border>

                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource SplitButtonIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsLargeImageVisible" Value="True">
                                    <Setter TargetName="PART_Button" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />

                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter Property="Padding" Value="5" />
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="60" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="48" />
                                    <Setter TargetName="label" Property="Margin" Value="0,11,0,2" />
                                    <Setter Property="MinWidth" Value="60" />
                                    <Setter Property="MinHeight" Value="100" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
            </Trigger>

            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:SplitButton}">
                            <Border x:Name="OuterBorder"
                                    Focusable="{TemplateBinding Focusable}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"
                                    Opacity="{TemplateBinding Opacity}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="14" />
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="PART_Button"
                                            Grid.Column="0" Margin="0"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Name="IconContent" HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
 ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="20" Width="20"/>
                                            <tools:RibbonAutomatableTextBlock x:Name="label"
                                                       Grid.Column="1"
                                                       Margin="2,0,4,0"
                                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{TemplateBinding Label}" />
                                        </Grid>
                                    </Border>
                                    <tools:RibbonUIBorder AutomationProperties.Name="DropDownButton" x:Name="PART_ToggleButton"
                                            Grid.Column="2"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            ToolTip="{TemplateBinding ToggleButtonToolTip}">
                                        <Grid AutomationProperties.Name="DropDownButton">
                                            <Path x:Name="path"
                                                  Width="6"
                                                  Height="4"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="0,2,0,0"
                                                  Fill="{StaticResource IconColor}"
                                                  Focusable="False"
                                                  Stretch="Fill">
                                                <Path.Data>
                                                    <PathGeometry>M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z</PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Grid>
                                    </tools:RibbonUIBorder>
                                    <Popup
                                        Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type tools:DropDownButton}}}"
                                        Placement="Bottom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                        <Border
                                            MinWidth="28"
                                            MinHeight="14"
                                            Background="{StaticResource PopupBackground}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <ScrollViewer Margin="1" Style="{StaticResource WPFMenuScrollViewer}">
                                                <ItemsPresenter
                                                    Name="Presenter"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                                </Trigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource SplitButtonIconTemplate}"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="2"/>
                                    <Setter Property="Visibility" TargetName="IconContent" Value="Collapsed"/>
                                </MultiTrigger>
                                <Trigger Property="SizeForm" Value="ExtraSmall">
                                    <Setter TargetName="label" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsSmallImageVisible" Value="True">
                                    <Setter TargetName="IconContent" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource ContentForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsDropDownOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </MultiTrigger>

                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsPressed" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Button" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_ToggleButton" Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness0111}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}" />
                                    <Setter Property="Opacity" Value="0.5"/>

                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                    <Setter Property="MinWidth" Value="47" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionSplitButtonStyle}" TargetType="{x:Type tools:SplitButton}" />

    <!--  End of the RibbonDropDownButton resources  -->
    
    <!--  Start of the RibbonGallery resources  -->

    <!--  PopupResizeThumb Style  -->
    <ControlTemplate x:Key="SyncfusionPopupResizeThumbControlTemplate" TargetType="{x:Type tools:PopupResizeThumb}">
        <Border
            Width="20"
            Height="10"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Background="Transparent">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path
                    Margin="1,1,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0L2,0 2,2 0,2z M5,0L7,0 7,2 5,2z M10,0L12,0 12,2 10,2z M15,0L17,0 17,2 15,2z"
                    Fill="{StaticResource IconColor}" />
                <Path
                    Margin="0,0,1,1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0L2,0 2,2 0,2z M5,0L7,0 7,2 5,2z M10,0L12,0 12,2 10,2z M15,0L17,0 17,2 15,2z"
                    Fill="{StaticResource IconColor}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="SizeNS" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SyncfusionPopupResizeThumbStyle" TargetType="{x:Type tools:PopupResizeThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:PopupResizeThumb}">
                    <Border
                        Width="10"
                        Height="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="Transparent">
                        <Grid Width="6" Height="6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*" />
                                <ColumnDefinition Width="0.5*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.5*" />
                                <RowDefinition Height="0.5*" />

                            </Grid.RowDefinitions>
                            <Border
                                Grid.Row="1"
                                Grid.Column="1"
                                Width="2"
                                Height="2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Background="#FFA7A7A7" />
                            <Border
                                Grid.Row="1"
                                Grid.Column="0"
                                Width="2"
                                Height="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Background="#FFA7A7A7" />
                            <Border
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="2"
                                Height="2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Background="#FFA7A7A7" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="SizeNWSE" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="Cursor" Value="SizeNESW" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Right" />

    </Style>

    <Style BasedOn="{StaticResource SyncfusionPopupResizeThumbStyle}" TargetType="{x:Type tools:PopupResizeThumb}" />

    <!--  RibbonButtonPopupItemStyle  -->
    <Style x:Key="SyncfusionQATMenuItemRibbonButtonStyle" TargetType="{x:Type tools:RibbonButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.BodyTextStyle}" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightNormal}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                    <Border
                        Name="OuterBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Margin="{TemplateBinding Margin}"
                        Padding="0,0,7,0"
                        Background="{TemplateBinding Panel.Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Margin="0,1,0,1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="22" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Name="PART_CheckBorder"
                                Grid.Column="0"
                                Width="19"
                                Height="19"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <Path
                                    Width="8"
                                    Height="8"
                                    Data="M10.738967,0 L11.817,1.1360061 5.1774399,7.4388217 5.1789999,7.4406547 4.0474274,8.5560006 0,3.7727338 1.1959616,2.7609998 4.1605471,6.244079 z"
                                    Fill="{StaticResource IconColor}"
                                    SnapsToDevicePixels="True"
                                    Stretch="Fill" />
                            </Border>
                            <TextBlock
                                Name="label"
                                Grid.Column="1"
                                Margin="7,2,2,2"
                                VerticalAlignment="Center"
                                Foreground="{StaticResource ContentForeground}"
                                Text="{TemplateBinding Label}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_CheckBorder" Property="Visibility" Value="Visible" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="OuterBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="Padding" Value="16,9,16,9" />
                            <Setter Property="MinHeight" Value="40"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  GalleryFilterSelector Style  -->
    <Style x:Key="SyncfusionGalleryFilterSelectorStyle" TargetType="{x:Type tools:GalleryFilterSelector}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:GalleryFilterSelector}">
                    <Grid>
                        <Border
                            Name="PART_DropDownButton"
                            Height="{StaticResource MaterialDarkCustom.MinHeight}"
                            Padding="4"
                            Background="{StaticResource ContentBackgroundAlt2}"
                            BorderBrush="{StaticResource BorderAlt}"
                            BorderThickness="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant1}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
									Name="PART_DropDownText" 
                                    Margin="10,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    FontStyle="Normal"
                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:GalleryFilterSelector}}, Path=SelectedFilter.Label}" />
                                <Path
                                    Margin="4,1,1,1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 0 0 L 4 4 L 8 0 Z"
                                    Fill="{StaticResource IconColor}" />
                            </StackPanel>
                        </Border>
                        <Popup
                            Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:GalleryFilterSelector}}}"
                            Placement="Bottom"
							PlacementTarget="{Binding ElementName=PART_DropDownText}"
                            PopupAnimation="Fade"
                            StaysOpen="False">
                            <Border
                                Background="{StaticResource PopupBackground}"
                                BorderBrush="{StaticResource BorderAlt}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                
                                  Effect="{StaticResource Default.ShadowDepth3}">
                                <Border.Margin>
                                    <Thickness>8,1,8,8</Thickness>
                                </Border.Margin>

                                <tools:RibbonButtonChecker CheckedButton="{Binding Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:GalleryFilterSelector}}, Converter={StaticResource FilterToRibbonButtonConverter}, Path=SelectedFilter}" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:GalleryFilterSelector}}, Converter={StaticResource GalleryFilterConverter}, ConverterParameter={StaticResource SyncfusionQATMenuItemRibbonButtonStyle}, Path=Filters}" />
                            </Border>
                        </Popup>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasFilters}" Value="True">
                <Setter Property="Filters" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GalleryFilters}" />
                <Setter Property="SelectedFilter" Value="{Binding Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Path=CurrentFilter}" />
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionGalleryFilterSelectorStyle}" TargetType="{x:Type tools:GalleryFilterSelector}" />

    <!--  GalleryItem template  -->
    <Style x:Key="SyncfusionRibbonGalleryItemStyle" TargetType="{x:Type tools:RibbonGalleryItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonGalleryItem}">
                    <Border
                        Name="PART_TrippleBorder"
                        MinWidth="0"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                                x:Name="Contentnew"
                                MinWidth="0"
                                Margin="1,0,1,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ContentSource="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(tools:SimplifiedLayoutSettings.LayoutMode)}" Value="Simplified"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=IsDropDownOpen}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="PART_TrippleBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_TrippleBorder" Value="true">
                            <Setter TargetName="PART_TrippleBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="PART_TrippleBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Contentnew" Property="TextElement.Foreground" Value="{StaticResource SecondaryForeground}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsPressed" Value="True"/>
                                <Condition Property="IsStylusOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_TrippleBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="PART_TrippleBorder" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="Contentnew" Property="TextElement.Foreground" Value="{StaticResource SecondaryForeground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_TrippleBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="PART_TrippleBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="Contentnew" Property="TextElement.Foreground" Value="{StaticResource SecondaryForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonGalleryItemStyle}" TargetType="{x:Type tools:RibbonGalleryItem}" />

    <!--  RibbonMenuGroup Style  -->
    <Style x:Key="SyncfusionRibbonMenuGroupStyle" TargetType="{x:Type tools:RibbonMenuGroup}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonMenuGroup}">
                    <tools:LayoutPanel x:Name="PART_LayoutPanel">
                        <StackPanel Margin="1,0,1,1" HorizontalAlignment="Stretch">
                            <Border
                                Name="PART_Header"
                                Height="21"
                                Margin="0,0,0,2"
                                Padding="7,0,5,0"
                                HorizontalAlignment="Stretch"
                                Background="{StaticResource ContentBackgroundAlt2}"
                                BorderBrush="{StaticResource BorderAlt}"
                                SnapsToDevicePixels="True">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="Bold"
                                    Foreground="{StaticResource ContentForeground}"
                                    Text="{TemplateBinding Header}" />
                            </Border>
                            <ItemsPresenter
                                x:Name="PART_Presenter"
                                Margin="0,0,0,1"
                                HorizontalAlignment="Left"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                        <!--  <Border BorderThickness="0,0,1,0"  Visibility="{TemplateBinding IconBarEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"  Margin="1,1,1,1" Background="Transparent" BorderBrush="{StaticResource IconBar

                        Brush}" Height="{TemplateBinding ActualHeight}" Width="22" Panel.ZIndex="-1" HorizontalAlignment="Left"/>-->
                    </tools:LayoutPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasHeader" Value="False">
                            <Setter TargetName="PART_Header" Property="Height" Value="1" />
                        </Trigger>
                        <DataTrigger Binding="{Binding VisualMode, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}" Value="InRibbon">
                            <Setter TargetName="PART_Header" Property="BorderThickness" Value="0,5,0,0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonMenuGroupStyle}" TargetType="{x:Type tools:RibbonMenuGroup}" />

    <Style x:Key="SyncfusionRibbonGalleryGroupStyle" TargetType="{x:Type tools:RibbonGalleryGroup}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt}" />
        <Setter Property="Background" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Height" Value="21" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonGalleryGroup}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Padding="7,0,0,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            FlowDirection="{TemplateBinding FlowDirection}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Label}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonGalleryGroupStyle}" TargetType="{x:Type tools:RibbonGalleryGroup}" />

    <!--  GalleryRepeatButtonStyle  -->
    <Style x:Key="GalleryRepeatButtonStyle" BasedOn="{StaticResource WPFGlyphRepeatButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Width" Value="16" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}"/>
    </Style>

    <DataTemplate x:Key="RibbonItemIconTemplate">
        <Grid>
            <Image RenderOptions.BitmapScalingMode="NearestNeighbor"   x:Name="PART_Image" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent }}" />
        </Grid>
    </DataTemplate>

    <!--  RibbonGallery Style  -->
    <Style x:Key="SyncfusionRibbonGalleryStyle" TargetType="{x:Type tools:RibbonGallery}">
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="ItemMouseOverBorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}"/>
        <Setter Property="MediumIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt20.png" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="62" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonGallery}">
                    <Border
                        Height="{TemplateBinding Height}"
                        MaxHeight="62"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="scrollColumn" Width="16" />
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="1" Background="{StaticResource ContentBackgroundAlt}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <RepeatButton
                                    Name="PART_ScrollUpButton"
                                    Grid.Row="0" MinHeight="0"
                                    Margin="0,0,-2,0"
                                    Style="{StaticResource GalleryRepeatButtonStyle}"
                                    >
                                    <RepeatButton.Content>
                                        <Path 
                                              Width="6"
                                              Height="4"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                              Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}}}"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="180" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </RepeatButton.Content>
                                </RepeatButton>

                                <RepeatButton
                                    Name="PART_ScrollDownButton"
                                    Grid.Row="1" MinHeight="0"
                                    Margin="0,0,-2,0"
                                    Style="{StaticResource GalleryRepeatButtonStyle}">
                                    <RepeatButton.Content>
                                        <Path 
                                              Width="6"
                                              Height="4"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z "
                                              Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}}}"
                                              Stretch="Fill">
                                        </Path>
                                    </RepeatButton.Content>
                                </RepeatButton>

                                <Border
                                    Name="PART_ToggleButton"
                                    Grid.Row="2"
                                    Width="16"
                                    Height="20"
                                    Margin="0,0,-2,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource BorderAlt}"
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                                    <Path Name="Path1" 
                                          Width="8"
                                          Height="7"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M1 3.5L5 7.5L9 3.5M1 0.5H9"
                                          Fill="{StaticResource IconColor}"
                                          Stroke="{StaticResource IconColor}"
                                          StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}"
                                          Stretch="Fill"/>
                                </Border>
                            </Grid>
                            <tools:InRibbonItemsPresenter
                                Name="PART_ScrollPresenter"
                                Margin="1"
                                ClipToBounds="True" />
                            <Popup
                                Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}"
                                Placement="Custom"
                                PopupAnimation="Fade"
                                StaysOpen="False">

                                <Border
                                    Background="{StaticResource ContentBackgroundAlt2}"
                                    BorderBrush="{StaticResource BorderAlt}"
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                    
                                    Effect="{StaticResource Default.ShadowDepth3}">
                                    <Border.Margin>
                                        <Thickness>0.5,0,12,8</Thickness>
                                    </Border.Margin>
                                    <DockPanel SnapsToDevicePixels="True">
                                        <Border
                                            Name="PART_ThumbBorder"
                                            Background="Transparent"
                                            DockPanel.Dock="Bottom">
                                            <tools:PopupResizeThumb
                                                Name="PART_ResizeThumb"
                                                HorizontalAlignment="Right"
                                                IsTabStop="False" />
                                        </Border>
                                        <tools:GalleryFilterSelector DockPanel.Dock="Top" />
                                        <Grid DockPanel.Dock="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer
                                                Name="PART_ScrollViewer"
                                                Grid.Row="0"
                                                VerticalScrollBarVisibility="Auto"
                                                Style="{StaticResource WPFScrollViewerStyle}">
                                                <StackPanel>
                                                    <ItemsControl Name="PART_PopupItemsControl">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel
                                                                    IsItemsHost="True"
                                                                    ItemHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}"
                                                                    ItemWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemWidth}" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </ScrollViewer>
                                            <tools:RibbonMenuGroup
                                                Grid.Row="1"
                                                IconBarEnabled="{TemplateBinding MenuIconBarEnabled}"
                                                ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=MenuItems}"
                                                Visibility="{TemplateBinding MenuItems,
                                                                             Converter={StaticResource CountToVisibilityConverter}}" />
                                        </Grid>
                                    </DockPanel>
                                </Border>

                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="Path1" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="Path1" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>

                        <Trigger Property="HasGroups" Value="True">
                            <Setter TargetName="PART_PopupItemsControl" Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <tools:GalleryGroupPanel KeyboardNavigation.AcceptsReturn="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ResizeDirection" Value="HorizontalAndVertical">
                            <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=HorizontalOffset}" />
                            <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                        </Trigger>
                        <Trigger Property="ResizeDirection" Value="VerticalOnly">
                            <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                            <Setter TargetName="PART_ResizeThumb" Property="Template" Value="{StaticResource SyncfusionPopupResizeThumbControlTemplate}" />
                            <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="PopupPosition" Value="Above">
                            <Setter TargetName="PART_ThumbBorder" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="PART_ScrollViewer" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNESW" />
                        </Trigger>
                        <Trigger Property="ResizeDirection" Value="NoResize">
                            <Setter TargetName="PART_ResizeThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=PopupPosition}" Value="Above" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FlowDirection}" Value="RightToLeft" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNWSE" />
                        </MultiDataTrigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter TargetName="PART_ToggleButton" Property="Width" Value="24"/>
                            <Setter TargetName="scrollColumn" Property="Width" Value="24"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        Background="Transparent"
                        ClipToBounds="True"
                        ItemHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}"
                        ItemWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemWidth}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="SizeForm" Value="Large" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonGallery}">
                            <Border
                                Name="PART_OuterBorder"
                                BorderBrush="Transparent"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}">
                                <StackPanel>
                                    <Border
                                        Name="PART_ToggleButton"
                                        Height="{TemplateBinding Height}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                                        <StackPanel>
                                            <ContentPresenter 
                                    ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" 
                                    Name="IconContent" VerticalAlignment="Top" Margin="0,1,0,0" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="32" Width="32"/>

                                            <tools:CustomItemsControl x:Name="label" Foreground="{TemplateBinding Foreground}" ItemsSource="{Binding Path=Label, Mode=OneWay, Converter={StaticResource TextWrappingConverter}, RelativeSource={RelativeSource TemplatedParent}}" Path="{StaticResource SyncfusionDropDownPathIcon}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <tools:MultilinePanel />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </tools:CustomItemsControl>
                                        </StackPanel>
                                    </Border>

                                    <Popup
                                        Name="PART_Popup"
                                        MinWidth="{TemplateBinding ExpandWidth}"
                                        MinHeight="{TemplateBinding ExpandHeight}"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}"
                                        Placement="Custom"
                                        PopupAnimation="Fade"
                                        StaysOpen="False">
                                        <Border
                                            Background="{StaticResource ContentBackgroundAlt2}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <DockPanel LastChildFill="True" SnapsToDevicePixels="True">
                                                <Border
                                                    Name="PART_ThumbBorder"
                                                    Background="Transparent"
                                                    DockPanel.Dock="Bottom">
                                                    <tools:PopupResizeThumb Name="PART_ResizeThumb" HorizontalAlignment="Right" />
                                                </Border>
                                                <tools:GalleryFilterSelector DockPanel.Dock="Top" />

                                                <Grid DockPanel.Dock="Top">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}" />
                                                        <RowDefinition Height="Auto" MinHeight="0" />
                                                    </Grid.RowDefinitions>
                                                    <ScrollViewer Grid.Row="0">
                                                        <ItemsPresenter VerticalAlignment="Top" />
                                                    </ScrollViewer>

                                                    <tools:RibbonMenuGroup
                                                        Grid.Row="1"
                                                        IconBarEnabled="{TemplateBinding MenuIconBarEnabled}"
                                                        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=MenuItems}"
                                                        Visibility="{TemplateBinding MenuItems,
                                                                                     Converter={StaticResource CountToVisibilityConverter}}" />
                                                </Grid>
                                            </DockPanel>
                                        </Border>

                                    </Popup>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="ResizeDirection" Value="HorizontalAndVertical">
                                    <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=HorizontalOffset}" />
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                </Trigger>

                                <Trigger Property="ResizeDirection" Value="VerticalOnly">
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="Template" Value="{StaticResource SyncfusionPopupResizeThumbControlTemplate}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Center" />
                                </Trigger>

                                <Trigger Property="PopupPosition" Value="Above">
                                    <Setter TargetName="PART_ThumbBorder" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNESW" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter TargetName="PART_OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="NoResize">
                                    <Setter TargetName="PART_ResizeThumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=PopupPosition}" Value="Above" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FlowDirection}" Value="RightToLeft" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNWSE" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="SizeForm" Value="Small" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonGallery}">
                            <Border
                                Name="PART_OuterBorder"
                                BorderBrush="Transparent"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                Opacity="{TemplateBinding Opacity}">
                                <Border
                                    Name="PART_ToggleButton"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    IsEnabled="{TemplateBinding IsEnabled}"
                                    Opacity="{TemplateBinding Opacity}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="col1"/>
                                            <ColumnDefinition x:Name="col2"/>
                                            <ColumnDefinition x:Name="col3"/>
                                        </Grid.ColumnDefinitions>
                                        <Border 
                                            x:Name="galleryBorder"
                                            Grid.Column="0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                            <ContentPresenter 
                                    ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" 
                                    Name="IconContent" Margin="2" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>

                                        </Border>
                                        <TextBlock
                                            x:Name="galleryLabel"
                                            Grid.Column="1"
                                            Margin="2,0,2,0"
                                            VerticalAlignment="Center"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding Label}" />
                                        <Path
                                            Grid.Column="2" x:Name="ArrowControl"
                                            Width="5"
                                            Height="3"
                                            Margin="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                            Fill="{StaticResource IconColor}"
                                            Stretch="Fill" />
                                        <Popup
                                            Name="PART_Popup"
                                            MinWidth="{TemplateBinding ExpandWidth}"
                                            MinHeight="{TemplateBinding ExpandHeight}"
                                            AllowsTransparency="True"
                                            Focusable="False"
                                            IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}"
                                            Placement="Custom"
                                            PopupAnimation="Fade"
                                            StaysOpen="False">
                                            <Border
                                                Background="{StaticResource ContentBackgroundAlt2}"
                                                BorderBrush="{StaticResource BorderAlt}"
                                                
                                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                                <Border.Margin>
                                                    <Thickness>8,1,8,8</Thickness>
                                                </Border.Margin>
                                                <DockPanel LastChildFill="True" SnapsToDevicePixels="True">
                                                    <Border
                                                        Name="PART_ThumbBorder"
                                                        Background="Transparent"
                                                        DockPanel.Dock="Bottom">
                                                        <tools:PopupResizeThumb Name="PART_ResizeThumb" HorizontalAlignment="Right" />
                                                    </Border>
                                                    <tools:GalleryFilterSelector DockPanel.Dock="Top" />
                                                    <Grid DockPanel.Dock="Top">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}" />
                                                            <RowDefinition Height="Auto" MinHeight="0" />
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer Grid.Row="0">
                                                            <ItemsPresenter VerticalAlignment="Top" />
                                                        </ScrollViewer>

                                                        <tools:RibbonMenuGroup
                                                            Grid.Row="1"
                                                            IconBarEnabled="{TemplateBinding MenuIconBarEnabled}"
                                                            ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=MenuItems}"
                                                            Visibility="{TemplateBinding MenuItems,
                                                                                         Converter={StaticResource CountToVisibilityConverter}}" />
                                                    </Grid>
                                                </DockPanel>
                                            </Border>

                                        </Popup>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="ResizeDirection" Value="HorizontalAndVertical">
                                    <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=HorizontalOffset}" />
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                </Trigger>

                                <Trigger Property="ResizeDirection" Value="VerticalOnly">
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="Template" Value="{StaticResource SyncfusionPopupResizeThumbControlTemplate}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Center" />
                                </Trigger>

                                <Trigger Property="PopupPosition" Value="Above">
                                    <Setter TargetName="PART_ThumbBorder" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNESW" />

                                </Trigger>
                                <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                                    <Setter Property="Height" Value="NaN"/>
                                    <Setter Property="Margin" Value="0,1"/>
                                    <Setter TargetName="galleryBorder" Property="HorizontalAlignment" Value="Left"/>
                                    <Setter TargetName="galleryLabel" Property="HorizontalAlignment" Value="Left"/>
                                    <Setter TargetName="galleryLabel" Property="Margin" Value="6,0,10,0"/>
                                    <Setter TargetName="galleryLabel" Property="Foreground" Value="{StaticResource ContentForeground}"/>
                                    <Setter TargetName="PART_ToggleButton" Property="BorderThickness" Value="0"/>
                                    <Setter TargetName="PART_ToggleButton" Property="Padding" Value="6,5,0,5"/>
                                    <Setter TargetName="col1" Property="Width" Value="Auto"/>
                                    <Setter TargetName="col3" Property="Width" Value="12"/>
                                    <Setter TargetName="col2" Property="Width" Value="*"/>
                                    <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                                    <Setter Property="RenderTransform" TargetName="ArrowControl">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" CenterX="2" CenterY="2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ToggleButton" Property="Padding" Value="6,6,0,6"/>
                                    <Setter TargetName="IconContent" Property="Margin" Value="5,2,2,2"/>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="PART_OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="NoResize">
                                    <Setter TargetName="PART_ResizeThumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=PopupPosition}" Value="Above" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FlowDirection}" Value="RightToLeft" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNWSE" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="SizeForm" Value="ExtraSmall" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonGallery}">
                            <Border
                                Name="PART_OuterBorder"
                                Width="33"
                                Height="23"
                                BorderBrush="Transparent"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}">
                                <Border
                                    Name="PART_ToggleButton"
                                    Width="33"
                                    Height="23"
                                    Margin="0,-1,0,0"
                                    Background="{TemplateBinding Panel.Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Grid.Column="0"
                                            Width="18"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                            <ContentPresenter 
                                    ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" 
                                    Name="IconContent" Margin="1" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>

                                        </Border>
                                        <Path
                                            Grid.Column="1"
                                            Width="5"
                                            Height="3"
                                            Margin="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                            Fill="{StaticResource IconColor}"
                                            Stretch="Fill" />
                                        <Popup
                                            Name="PART_Popup"
                                            MinWidth="{TemplateBinding ExpandWidth}"
                                            MinHeight="{TemplateBinding ExpandHeight}"
                                            AllowsTransparency="True"
                                            Focusable="False"
                                            IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}"
                                            Placement="Bottom"
                                            PopupAnimation="Fade"
                                            StaysOpen="False">
                                            <Border
                                                VerticalAlignment="Stretch"
                                                Background="{StaticResource ContentBackgroundAlt2}"
                                                BorderBrush="{StaticResource BorderAlt}"
                                                
                                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                                <Border.Margin>
                                                    <Thickness>8,1,8,8</Thickness>
                                                </Border.Margin>

                                                <DockPanel VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                                    <Border
                                                        Name="PART_ThumbBorder"
                                                        Background="Transparent"
                                                        DockPanel.Dock="Bottom">
                                                        <tools:PopupResizeThumb Name="PART_ResizeThumb" HorizontalAlignment="Right" />
                                                    </Border>
                                                    <tools:GalleryFilterSelector DockPanel.Dock="Top" />

                                                    <Grid DockPanel.Dock="Top">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}" />
                                                            <RowDefinition Height="Auto" MinHeight="0" />
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer Grid.Row="0">
                                                            <ItemsPresenter VerticalAlignment="Top" />
                                                        </ScrollViewer>
                                                        <tools:RibbonMenuGroup
                                                            Grid.Row="1"
                                                            IconBarEnabled="{TemplateBinding MenuIconBarEnabled}"
                                                            ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=MenuItems}"
                                                            Visibility="{TemplateBinding MenuItems,
                                                                                         Converter={StaticResource CountToVisibilityConverter}}" />
                                                    </Grid>
                                                </DockPanel>
                                            </Border>

                                        </Popup>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsDropDownOpen" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="PART_OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="HorizontalAndVertical">
                                    <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=HorizontalOffset}" />
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="VerticalOnly">
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="Template" Value="{StaticResource SyncfusionPopupResizeThumbControlTemplate}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="PopupPosition" Value="Above">
                                    <Setter TargetName="PART_ThumbBorder" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNESW" />

                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="NoResize">
                                    <Setter TargetName="PART_ResizeThumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=PopupPosition}" Value="Above" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FlowDirection}" Value="RightToLeft" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNWSE" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <Trigger Property="VisualMode" Value="DropDown">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                <Setter Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="IsDropDownOpen" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                <Setter Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="HasGroups" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <tools:GalleryGroupPanel KeyboardNavigation.AcceptsReturn="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualMode" Value="DropDown" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="VisualMode" Value="InRibbon"/>
                </MultiTrigger.Conditions>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel x:Name="WrapPanel" Background="Transparent"
                               ClipToBounds="True"
                               ItemHeight="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonBar}}}"
                               ItemWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemWidth}" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="5,4,5,5"/>
                <Setter Property="Height" Value="NaN"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonGallery}">
                            <Border Height="{TemplateBinding Height}"
                            MaxHeight="62"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="16" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="1">
                                        <Border
                                    Name="PART_ToggleButton"
                                    Width="16"
                                    Margin="0,0,-2,-1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Stretch"
                                    Background="{StaticResource ContentBackgroundAlt2}"
                                    BorderBrush="{StaticResource BorderAlt}"
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Path
                                            x:Name="Path1"
                                            Margin="0,0,0,2"
                                            HorizontalAlignment="Center"
                                            Data="M0,0.5L7,0.5"
                                            Fill="{StaticResource IconColor}"
                                            Stroke="{StaticResource IconColor}" />
                                                <Path
                                            x:Name="Path2"
                                            Width="5"
                                            Height="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                            Fill="{StaticResource IconColor}"
                                            Stretch="Fill"
                                            Stroke="{StaticResource IconColor}" />
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                    <tools:InRibbonItemsPresenter 
                                        x:Name="PART_ScrollPresenter"
                                        Margin="1"
                                        ClipToBounds="True" />
                                    <Popup
                                Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}"
                                Placement="Custom"
                                PopupAnimation="Fade"
                                StaysOpen="False">
                                        <Border
                                            Background="{StaticResource ContentBackgroundAlt2}"
                                            BorderBrush="{StaticResource BorderAlt}"
                                            
                                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                            Effect="{StaticResource Default.ShadowDepth3}">
                                            <Border.Margin>
                                                <Thickness>8,1,8,8</Thickness>
                                            </Border.Margin>
                                            <DockPanel SnapsToDevicePixels="True">
                                                <Border
                                            Name="PART_ThumbBorder"
                                            Background="Transparent"
                                            DockPanel.Dock="Bottom">
                                                    <tools:PopupResizeThumb
                                                Name="PART_ResizeThumb"
                                                HorizontalAlignment="Right"
                                                IsTabStop="False" />
                                                </Border>
                                                <tools:GalleryFilterSelector DockPanel.Dock="Top" />
                                                <Grid DockPanel.Dock="Top">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <ScrollViewer
                                                Name="PART_ScrollViewer"
                                                Grid.Row="0"
                                                Style="{StaticResource WPFScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                                                        <StackPanel>
                                                            <ItemsControl Name="PART_PopupItemsControl">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <WrapPanel
                                                                    IsItemsHost="True"
                                                                    ItemHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}"
                                                                    ItemWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemWidth}" />
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                            </ItemsControl>
                                                        </StackPanel>
                                                    </ScrollViewer>
                                                    <tools:RibbonMenuGroup
                                                        Grid.Row="1"
                                                        tools:SimplifiedLayoutSettings.LayoutMode="Normal"
                                                        IconBarEnabled="{TemplateBinding MenuIconBarEnabled}"
                                                        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=MenuItems}"
                                                        Visibility="{TemplateBinding MenuItems, Converter={StaticResource CountToVisibilityConverter}}" />
                                                </Grid>
                                            </DockPanel>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDropDownOpen" Value="False">
                                    <Setter Property="ItemHeight" Value="30"/>
                                </Trigger>
                                <Trigger SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="Path1" Property="Fill" Value="{StaticResource IconColor}" />
                                    <Setter TargetName="Path2" Property="Stroke" Value="{StaticResource IconColor}" />
                                </Trigger>
                                <Trigger Property="HasGroups" Value="True">
                                    <Setter TargetName="PART_PopupItemsControl" Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <tools:GalleryGroupPanel KeyboardNavigation.AcceptsReturn="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="HorizontalAndVertical">
                                    <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=HorizontalOffset}" />
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="VerticalOnly">
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="Template" Value="{StaticResource SyncfusionPopupResizeThumbControlTemplate}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="PopupPosition" Value="Above">
                                    <Setter TargetName="PART_ThumbBorder" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="PART_ScrollViewer" Property="DockPanel.Dock" Value="Bottom" />
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNESW" />
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="NoResize">
                                    <Setter TargetName="PART_ResizeThumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=PopupPosition}" Value="Above" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FlowDirection}" Value="RightToLeft" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ResizeThumb" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeNWSE" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="VisualMode" Value="DropDown"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonGallery}">
                            <Border Name="PART_OuterBorder"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    IsEnabled="{TemplateBinding IsEnabled}"
                                    Opacity="{TemplateBinding Opacity}">
                                <Border Name="PART_ToggleButton"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsEnabled="{TemplateBinding IsEnabled}"
                                        Opacity="{TemplateBinding Opacity}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center">
                                            <ContentPresenter 
                                    ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" 
                                    Name="IconContent" Margin="2" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="20" Width="20"/>

                                        </Border>
                                        <TextBlock Grid.Column="1"
                                                   Margin="2,0,2,0"
                                                   VerticalAlignment="Center"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Text="{TemplateBinding Label}" />
                                        <Path
                                            Grid.Column="2"
                                            Width="5"
                                            Height="3"
                                            Margin="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M0,0 L100.25,0 100.25,20 80,20 80,39.75 60.5,39.75 60.5,60 39.75,60 39.75,39.75 20.75,39.75 20.75,20 0,20 z"
                                            Fill="{StaticResource ContentBackgroundAlt2}"
                                            Stretch="Fill" />
                                        <Popup 
                                            Name="PART_Popup"
                                            MinWidth="{TemplateBinding ExpandWidth}"
                                            MinHeight="{TemplateBinding ExpandHeight}"
                                            AllowsTransparency="True"
                                            Focusable="False"
                                            IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonGallery}}}"
                                            Placement="Custom"
                                            PopupAnimation="Fade"
                                            StaysOpen="False">
                                            <Border
                                                Background="{StaticResource ContentBackgroundAlt2}"
                                                BorderBrush="{StaticResource BorderAlt}"
                                                
                                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                                <Border.Margin>
                                                    <Thickness>8,0,8,8</Thickness>
                                                </Border.Margin>
                                                <DockPanel LastChildFill="True" SnapsToDevicePixels="True">
                                                    <Border
                                                        Name="PART_ThumbBorder"
                                                        Background="Transparent"
                                                        DockPanel.Dock="Bottom">
                                                        <tools:PopupResizeThumb Name="PART_ResizeThumb" HorizontalAlignment="Right" />
                                                    </Border>
                                                    <tools:GalleryFilterSelector DockPanel.Dock="Top" />
                                                    <Grid DockPanel.Dock="Top">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=ItemHeight}" />
                                                            <RowDefinition Height="Auto" MinHeight="0" />
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer Grid.Row="0">
                                                            <ItemsPresenter VerticalAlignment="Top" />
                                                        </ScrollViewer>

                                                        <tools:RibbonMenuGroup
                                                            Grid.Row="1"
                                                            tools:SimplifiedLayoutSettings.LayoutMode="Normal"
                                                            IconBarEnabled="{TemplateBinding MenuIconBarEnabled}"
                                                            ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonGallery}}, Path=MenuItems}"
                                                            Visibility="{TemplateBinding MenuItems,
                                                                                         Converter={StaticResource CountToVisibilityConverter}}" />
                                                    </Grid>
                                                </DockPanel>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                                </Trigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="ResizeDirection" Value="HorizontalAndVertical">
                                    <Setter TargetName="PART_Popup" Property="Width" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=HorizontalOffset}" />
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="VerticalOnly">
                                    <Setter TargetName="PART_Popup" Property="Height" Value="{Binding ElementName=PART_ResizeThumb, Mode=TwoWay, Path=VerticalOffset}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="Template" Value="{StaticResource VerticalPopupResizeThumbTemplate}" />
                                    <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="PopupPosition" Value="Above">
                                    <Setter TargetName="PART_ThumbBorder" Property="DockPanel.Dock" Value="Top" />
                                    <Setter Property="RenderTransform" TargetName="PART_ResizeThumb">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Cursor" Value="SizeNESW" TargetName="PART_ResizeThumb" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ToggleButton" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="PART_OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>
                                <Trigger Property="ResizeDirection" Value="NoResize">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ResizeThumb"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=PopupPosition}" Value="Above"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=FlowDirection}" Value="RightToLeft"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="RenderTransform" TargetName="PART_ResizeThumb">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" CenterX="5" CenterY="5"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Cursor" Value="SizeNWSE" TargetName="PART_ResizeThumb" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonGalleryStyle}" TargetType="{x:Type tools:RibbonGallery}" />

    <!--  End of the RibbonGallery resources  -->

    <!--  Start of the RibbonButton resources  -->

    <!--  RibbonButtonChecker Style  -->
    <Style x:Key="SyncfusionRibbonButtonCheckerStyle" TargetType="{x:Type tools:RibbonButtonChecker}">
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonButtonChecker}">
                    <Border
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonButtonCheckerStyle}" TargetType="{x:Type tools:RibbonButtonChecker}" />

    <!--  ButtonPanel  -->
    <Style x:Key="SyncfusionButtonPanelStyle" TargetType="{x:Type tools:ButtonPanel}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:ButtonPanel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            Height="{TemplateBinding Height}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                            ClipToBounds="True">
                            <ItemsPresenter />
                        </Border>
                        <Rectangle
                            Grid.Column="1"
                            Width="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Fill="{StaticResource SecondaryHoverBackground}"
                            Stroke="{StaticResource SecondaryHoverBackground}"
                            Visibility="{TemplateBinding SeparatorVisibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <tools:ButtonLayoutPanel ClipToBounds="True" SeparatorBrush="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger  Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                <Setter Property="Margin" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionButtonPanelStyle}" TargetType="{x:Type tools:ButtonPanel}" />

    <DataTemplate x:Key="RibbonButtonIconTemplate">
        <Grid>
            <Image RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="{Binding IconStretch, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonButton}}}" 
 x:Name="PART_Image" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent }}" />
        </Grid>
    </DataTemplate>

    <!--  RibbonButton style  -->
    <Style x:Key="SyncfusionRibbonButtonStyle" TargetType="{x:Type tools:RibbonButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}"/>
        <Setter Property="CornerRadius" Value="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="LargeIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt32.png" />
        <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png" />
        <Setter Property="MediumIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt20.png"/>
        <Style.Triggers>

            <Trigger Property="SizeForm" Value="ExtraSmall">
                <Setter Property="Padding" Value="3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Border
                                Name="OuterBorder"
                                MinHeight="22"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsEnabled="{TemplateBinding IsEnabled}">
                                <ContentPresenter Name="IconContent" Margin="{TemplateBinding Padding}" Height="16" Width="16" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsPressed" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMenuItem" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter Property="Padding" Value="5" />
                                    <Setter Property="MinHeight" TargetName="IconContent" Value="20"/>
                                    <Setter Property="MinWidth" TargetName="IconContent" Value="20"/>
                                    <Setter Property="MinWidth" Value="47" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="SizeForm" Value="Small">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Border
                                    Name="OuterBorder"
                                    MinHeight="22"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    IsEnabled="{TemplateBinding IsEnabled}">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="PART_ImageBorder"
                                            Grid.Column="0"
                                            Margin="1">
                                            <ContentPresenter Name="IconContent" Height="16" Width="16" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                                        </Border>
                                        <tools:RibbonAutomatableTextBlock
                                            x:Name="label"
                                            Grid.Column="1"
                                            Margin="2,2,4,0"
                                            HorizontalAlignment="Left"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding Label}" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IsSmallImageVisible" Value="False"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImageBorder" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                                    <Setter TargetName="OuterBorder" Property="Padding" Value="3"/>
                                    <Setter TargetName="label" Property="Margin" Value="6,2,15,0"/>
                                    <Setter TargetName="label" Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </MultiTrigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Padding" Value="4"/>
                                    <Setter Property="Margin" TargetName="IconContent" Value="5,2,2,2"/>
                                    <Setter TargetName="IconContent" Property="MinHeight" Value="20" />
                                    <Setter TargetName="IconContent" Property="MinWidth" Value="20" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                        <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="Normal"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Padding" Value="5" />
                                    <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="SizeForm" Value="Large">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Border
                                Name="OuterBorder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonButton}}}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonButton}}}">
                                    <StackPanel Orientation="Vertical">
                                        <Border
                                            Name="PART_ImageBorder"
                                            Margin="3"
                                            SnapsToDevicePixels="True">
                                            <ContentPresenter Name="IconContent" Height="32" Width="32" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                                        </Border>
                                        <ItemsControl
                                            x:Name="PART_Label"
                                            Margin="0,3,0,2"
                                            Focusable="False"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            Foreground="{TemplateBinding Foreground}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <tools:MultilinePanel />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemContainerStyle>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                </Style>
                                            </ItemsControl.ItemContainerStyle>
                                        </ItemsControl>
                                    </StackPanel>

                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IsLargeImageVisible" Value="False"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImageBorder" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />

                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />

                                </MultiTrigger>

                                <Trigger Property="IsPressed" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter TargetName="PART_Label" Property="Margin" Value="0,10,0,2" />
                                    <Setter Property="MinHeight" TargetName="IconContent" Value="48"/>
                                    <Setter Property="MinWidth" TargetName="IconContent" Value="48"/>
                                    <Setter Property="MinHeight" Value="100" />
                                    <Setter Property="MinWidth" Value="60" />
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
                <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                            <Border x:Name="OuterBorder"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    IsEnabled="{TemplateBinding IsEnabled}">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="PART_ImageBorder"
                                                Grid.Column="0"
                                                SnapsToDevicePixels="True">
                                        <ContentPresenter Name="IconContent" Height="20" Width="20" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" />
                                    </Border>
                                    <Border 
                                            x:Name="textBorder"
                                            Grid.Column="1"
                                            Margin="7,0,0,0"
                                            Focusable="False">
                                        <TextBlock 
                                                x:Name="PART_Label" 
                                                Text="{TemplateBinding Label}" 
                                                FontFamily="{TemplateBinding FontFamily}" 
                                                VerticalAlignment="Center"
                                                FontSize="{TemplateBinding FontSize}"
                                                Foreground="{TemplateBinding Foreground}" />

                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                                </Trigger>
                                <MultiTrigger >
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="VectorImage"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemVectorImageTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonButtonIconTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Width" Value="NaN"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Padding" Value="7,0,7,0"/>
                                </MultiTrigger>
                                <Trigger Property="SizeForm" Value="ExtraSmall">
                                    <Setter TargetName="textBorder" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryHoverBackground}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </MultiTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                                    <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Effect" Value="{StaticResource SyncfusionRibbonDisableEffect}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter Property="Padding" Value="5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonButtonStyle}" TargetType="{x:Type tools:RibbonButton}" />

    <!--  End of the RibbonButton resources  -->
    
    <!--  Start of the RibbonContextMenu resources  -->

    <!--  SeparatorStyle  -->
    <Style x:Key="SeparatorStyle" BasedOn="{StaticResource WPFSeparatorStyle}" TargetType="Separator" >
        <Setter Property="Border.BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness0001}" />
        <Setter Property="FrameworkElement.MinHeight" Value="2" />
        <Setter Property="Margin" Value="30,0,0,0" />
        <Style.Triggers>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter Property="Padding" Value="14,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  RibbonContextMenuItems  -->
    <ItemsControl x:Key="SyncfusionRibbonContextMenuItems">
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.RemoveItemFromQAT"
            Header="{tools:ToolsLocalizationResourceExtension ResourceName=RemoveFromQAT}"
            Tag="Remove"
            Visibility="Collapsed" />
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.AddItemToQAT"
            Header="{tools:ToolsLocalizationResourceExtension ResourceName=AddToQAT}"
            Tag="Item_One"
            Visibility="Collapsed" />
        <Separator Style="{StaticResource SeparatorStyle}" Tag="Item_Two" />
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.QATMoreCommands"
            Header="{tools:ToolsLocalizationResourceExtension ResourceName=CustomizeQATContextMenu}"
            Tag="Item_Three"/>
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.PlaceQATAbove"
            Header="{tools:ToolsLocalizationResourceExtension ResourceName=QATShowAbove}"
            Tag="Item_Four"
            Visibility="Collapsed" />
        <tools:RibbonMenuItem
            Command="tools:RibbonCommands.PlaceQATBelow"
            Header="{tools:ToolsLocalizationResourceExtension ResourceName=QATShowBelow}"
            Tag="Item_Five" />
        <Separator Style="{StaticResource SeparatorStyle}" Tag="Item_Six" />
        <tools:RibbonMenuItem
            Margin="0,0,0,0"
            Command="tools:RibbonCommands.MinimizeRibbon"
            Header="{tools:ToolsLocalizationResourceExtension ResourceName=MinimizeRibbon}"
            Tag="Item_Seven">
            <tools:RibbonMenuItem.Icon>
                <Path Stroke="{StaticResource BorderAlt}" StrokeThickness="1.4">
                    <Path.Data>
                        <GeometryGroup>
                            <LineGeometry StartPoint="6 9" EndPoint="9 16" />
                            <LineGeometry StartPoint="9 16" EndPoint="13 3" />
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </tools:RibbonMenuItem.Icon>
        </tools:RibbonMenuItem>
    </ItemsControl>

    <!--  RibbonMenuItem style  -->
    <Style x:Key="SyncfusionRibbonMenuItemStyle" TargetType="{x:Type tools:RibbonMenuItem}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonMenuItem}">
                    <Border Name="Bd">
                        <Grid Grid.ColumnSpan="3">
                            <Border
                                Name="Border"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="17" />
                                    </Grid.ColumnDefinitions>

                                    <Rectangle
                                        Name="InnerPath"
                                        Grid.ColumnSpan="4"
                                        SnapsToDevicePixels="True" />

                                    <Border
                                        Name="IconBorder"
                                        Grid.Column="0"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                                        <ContentPresenter
                                            x:Name="IconContent"
                                            Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                            Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"
                                            Margin="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding Icon}"
                                            RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                    </Border>

                                    <Border
                                        Name="PART_CheckBorder"
                                        Grid.Column="0"
                                        Width="20"
                                        Height="20"
                                        Background="Transparent"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                        CornerRadius="0"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Path
                                            x:Name="Glyph"
                                            Width="8"
                                            Height="8"
                                            Data="M10.738967,0 L11.817,1.1360061 5.1774399,7.4388217 5.1789999,7.4406547 4.0474274,8.5560006 0,3.7727338 1.1959616,2.7609998 4.1605471,6.244079 z"
                                            Fill="{StaticResource IconColor}"
                                            FlowDirection="LeftToRight"
                                            Stretch="Fill" />
                                    </Border>

                                    <ContentPresenter
                                        Name="content"
                                        Grid.Column="1"
                                        Margin="11,0,10,0"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        TextElement.FontFamily="{TemplateBinding FontFamily}">
                                        <ContentPresenter.Resources>
                                            <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                                        </ContentPresenter.Resources>
                                        <ContentPresenter.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                        <Setter Property="TextElement.FontSize" Value="13" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentPresenter.Style>
                                    </ContentPresenter>
                                    <Path
                                        Grid.Column="2"
                                        Width="17"
                                        Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        Data="M0,0L4,3.5 0,7z"
                                        Fill="{TemplateBinding Foreground}"
                                        Visibility="{TemplateBinding HasItems,
                                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Popup
                                        Name="PART_Popup"
                                        MinWidth="10"
                                        MinHeight="10"
                                        AllowsTransparency="true"
                                        Focusable="false"
                                        HorizontalOffset="1"
                                        IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        Placement="Right"
                                        PopupAnimation="Fade"
                                        StaysOpen="False"
                                        VerticalOffset="0">

                                        <Border BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}"
                                                
                                                Effect="{StaticResource Default.ShadowDepth3}">
                                            <Grid>
                                                <Rectangle
                                                    Width="25"
                                                    HorizontalAlignment="Left"
                                                    Fill="{TemplateBinding Background}"
                                                    RadiusX="2"
                                                    Visibility="{TemplateBinding IconBarEnabled,
                                                                                 Converter={StaticResource BooleanToVisibilityConverter}}" />

                                                <ScrollViewer
                                                    Grid.ColumnSpan="2"
                                                    Margin="0,0,1,0"
                                                    CanContentScroll="True"
                                                    Style="{StaticResource WPFMenuScrollViewer}">
                                                    <ItemsPresenter
                                                        Name="Presenter"
                                                        Grid.IsSharedSizeScope="true"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Border>

                                    </Popup>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                                <Condition Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
                        </MultiTrigger>
                        <Trigger Property="MenuItem.IsChecked" Value="True">
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{StaticResource ContentForeground}" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="IconContent" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="TextElement.FontSize" Value="13" />
                            <Setter Property="MinHeight" Value="40"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonMenuItemStyle}" TargetType="{x:Type tools:RibbonMenuItem}" />

    <!--  RibbonContextMenu Style  -->
    <Style x:Key="SyncfusionRibbonContextMenuStyle"
        BasedOn="{StaticResource WPFContextMenuStyle}"
        TargetType="{x:Type tools:RibbonContextMenu}">
        <Setter Property="Panel.Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="MenuItem.Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Border.BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="ContextMenuService.HasDropShadow" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SyncfusionRibbonMenuItemStyle}" />
        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource SyncfusionRibbonContextMenuItems}, Path=Items}" />
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonContextMenuStyle}" TargetType="{x:Type tools:RibbonContextMenu}" />

    <!--  End of the RibbonContextMenu resources  -->
    
    <!--  Start of the RibbonItems resources  -->

    <!--  RibbonAutomatableTextBlock Style  -->
    <Style x:Key="SyncfusionRibbonAutomatableTextBlockStyle" BasedOn="{StaticResource WPFTextBlockStyle}" TargetType="{x:Type tools:RibbonAutomatableTextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}"/>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonAutomatableTextBlockStyle}" TargetType="{x:Type tools:RibbonAutomatableTextBlock}"/>

    <!--  RibbonComboBoxItem Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxItemStyle"
        BasedOn="{StaticResource WPFComboBoxItemStyle}"
        TargetType="{x:Type tools:RibbonComboBoxItem}"/>
    <Style BasedOn="{StaticResource SyncfusionRibbonComboBoxItemStyle}" TargetType="{x:Type tools:RibbonComboBoxItem}" />

    <!--  RibbonComboBox Editable ToggleButton Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxGlyphEditableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ToggleButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border"  
                            Background="{TemplateBinding Background}"       
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}">
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"                    
                                          Width="9.5" 
                                          Height="7"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                            <ContentPresenter.Content>
                                <Path Name="Arrow" 
                                  Fill="{TemplateBinding Foreground}"
                                  Width="7"
                                  Height="4"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry>M 0 0 L 3.5 4 L 7 0 Z</PathGeometry>
                                    </Path.Data>
                                </Path>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                            <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                            <Setter Property="RenderTransform" TargetName="Arrow">
                                <Setter.Value>
                                    <RotateTransform Angle="180"  />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                            <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                            <Setter Property="RenderTransform" TargetName="Arrow">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"  />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconDisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RibbonComboBox ToggleButton Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxGlyphToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant1}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ToggleButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border"  
                            Background="{TemplateBinding Background}"       
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}">
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          Width="9.5" 
                                          Height="7"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                            <ContentPresenter.Content>
                                <Path Name="Arrow"   
                                  Margin="0" 
                                  Fill="{TemplateBinding Foreground}"
                                  Width="7"
                                  Height="4"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry>M 0 0 L 3.5 4 L 7 0 Z</PathGeometry>
                                    </Path.Data>
                                </Path>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
                            <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                            <Setter Property="RenderTransform" TargetName="Arrow">
                                <Setter.Value>
                                    <RotateTransform Angle="180"  />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                            <Setter Property="RenderTransformOrigin" Value="2.5,2.5"/>
                            <Setter Property="RenderTransform" TargetName="Arrow">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"  />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource IconDisabledColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RibbonComboBox Editable Template  -->
    <ControlTemplate x:Key="SyncfusionEditableRibbonComboBoxControlTemplate" TargetType="{x:Type tools:RibbonComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"  
                   Grid.ColumnSpan="2" 
                   AllowsTransparency="true" 
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom"
                   SnapsToDevicePixels="True">
                <Border x:Name="DropDownBorder" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                        MinWidth="{Binding ActualWidth, ElementName=Placement}"
                        BorderBrush="{StaticResource Border}" 
                        
                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                        Background="{StaticResource PopupBackground}" 
                        Effect="{StaticResource Default.ShadowDepth3}">
                    <Border.Margin>
                        <Thickness>8,1,8,8</Thickness>
                    </Border.Margin>
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid>
                            <Canvas HorizontalAlignment="Left" 
                                    VerticalAlignment="Top" 
                                    Height="0" 
                                    Width="0">
                                <Rectangle x:Name="OpaqueRect" 
                                           Fill="{Binding Background, ElementName=DropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"></Border>
            <ToggleButton x:Name="PART_ToggleButton" 
                          Grid.ColumnSpan="2"
                          Width="15"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource SyncfusionRibbonComboBoxGlyphEditableToggleButtonStyle}"
                          Margin="1"
                          Height="16"
                          HorizontalAlignment="Right">
            </ToggleButton>
            <TextBox x:Name="PART_EditableTextBox" 
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                     Margin="1,2,0,2" 
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     Style="{StaticResource WPFBorderlessTextBoxStyle}">
                <TextBox.Padding>
                    <Thickness>0</Thickness>
                </TextBox.Padding>
            </TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="TextElement.Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource ContentForeground}"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="PART_EditableTextBox"  Value="{StaticResource ContentForeground}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt2}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" SourceName="PART_ToggleButton" Value="true"/>
                    <Condition Property="IsFocused" SourceName="PART_EditableTextBox" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" TargetName="PART_ToggleButton" Value="0,0,1,1"/>
            </MultiTrigger>
            <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="True">
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource ContentForeground}" />
                <Setter Property="Background" TargetName="Border" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant2}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource ContentForeground}" />
                <Setter Property="Background" TargetName="Border" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant2}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="DropDownBorder" Value="14,0,14,14"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt}"/>
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  RibbonComboBox Style  -->
    <Style x:Key="SyncfusionRibbonComboBoxStyle" TargetType="{x:Type tools:RibbonComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant1}"/>
        <Setter Property="Padding">
            <Setter.Value>
                <Thickness>3,2,2,2</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily"
                Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}"/>
        <Setter Property="FontSize"
                Value="{StaticResource MaterialDarkCustom.BodyTextStyle}"/>
        <Setter Property="FontWeight"
                Value="{StaticResource MaterialDarkCustom.FontWeightNormal}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               Grid.ColumnSpan="2"
                               StaysOpen="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"                            
                               AllowsTransparency="true"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Bottom"
                               SnapsToDevicePixels="True">
                            <Border x:Name="DropDownBorder" 
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    BorderBrush="{StaticResource Border}"
                                    SnapsToDevicePixels="True"
                                    Background="{StaticResource PopupBackground}"
                                    
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                    Effect="{StaticResource Default.ShadowDepth3}">
                                <Border.Margin>
                                    <Thickness>8,1,8,8</Thickness>
                                </Border.Margin>
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid>
                                        <Canvas HorizontalAlignment="Left"
                                                VerticalAlignment="Top" 
                                                Height="0" 
                                                Width="0">
                                            <Rectangle x:Name="OpaqueRect" 
                                                        Fill="{Binding Background, ElementName=DropDownBorder}" 
                                                        Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                                        Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" 
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <Border x:Name="Border" 
                                Grid.ColumnSpan="2" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}"/>
                        <ToggleButton x:Name="PART_ToggleButton" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource SyncfusionRibbonComboBoxGlyphToggleButtonStyle}"
                                      HorizontalContentAlignment="Right"
                                      Margin="0,0,3,0"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                     
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="DropDownBorder" Value="14,0,14,14"/>
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt2}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant2}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant2}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForeground}" />
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderAlt}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource Border}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}"/>
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template" Value="{StaticResource SyncfusionEditableRibbonComboBoxControlTemplate}" />
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="1,4"/>
                <Setter Property="Margin" Value="5,4"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5,4,5,5"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="5,2"/>
            </MultiTrigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonComboBoxStyle}" TargetType="{x:Type tools:RibbonComboBox}" />

    <!--  LabelTextBlock Style  -->
    <Style x:Key="SyncfusionLabelTextBlockStyle" TargetType="{x:Type tools:LabelTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,-2,0,0" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}"/>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionLabelTextBlockStyle}" TargetType="{x:Type tools:LabelTextBlock}"/>

    <!--  RibbonListBox Style  -->
    <Style x:Key="SyncfusionRibbonListBoxStyle" BasedOn="{StaticResource WPFListBoxStyle}" TargetType="{x:Type tools:RibbonListBox}">
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Margin" Value="5,3"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Height" Value="NaN"/>
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonListBoxStyle}" TargetType="{x:Type tools:RibbonListBox}"/>

    <!--  RibbonCheckBox Style  -->
    <Style x:Key="SyncfusionRibbonCheckBoxStyle" BasedOn="{StaticResource WPFCheckBoxStyle}" TargetType="{x:Type tools:RibbonCheckBox}">
        <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="3,0,3,3"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="8,8,15,6"/>
                <Setter Property="Margin" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="Visibility" Value="Visible"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="10,12,15,8"/>
                <Setter Property="Margin" Value="12,0,0,0"/>
            </MultiTrigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonCheckBoxStyle}" TargetType="{x:Type tools:RibbonCheckBox}" />

    <!--  RibbonRadioButton Style  -->
    <Style x:Key="SyncfusionRibbonRadioButtonStyle" BasedOn="{StaticResource WPFRadioButtonStyle}" TargetType="{x:Type tools:RibbonRadioButton}">
        <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:Ribbon.IsQATItem" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="3,0,3,3"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="8,8,15,6"/>
                <Setter Property="Margin" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="Visibility" Value="Visible"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="10,12,15,8"/>
                <Setter Property="Margin" Value="12,0,0,0"/>
            </MultiTrigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonRadioButtonStyle}" TargetType="{x:Type tools:RibbonRadioButton}"/>

    <!--  RibbonSeparator Style  -->
    <Style x:Key="SyncfusionRibbonSeparatorStyle" TargetType="{x:Type tools:RibbonSeparator}">
        <Setter Property="Width" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonSeparator}">
                    <Rectangle
                        Width="1"
                        Height="55"
                        Fill="{StaticResource BorderAlt}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="3,5,3,0" />
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="3,5,3,5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonSeparatorStyle}" TargetType="{x:Type tools:RibbonSeparator}" />

    <!--  RibbonTextBox Style  -->
    <Style x:Key="SyncfusionRibbonTextBoxStyle" BasedOn="{StaticResource WPFTextBoxStyle}"  TargetType="{x:Type tools:RibbonTextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.BodyTextStyle}" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightNormal}" />
        <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
        <Setter Property="Padding" Value="2,3,2,2" />
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="1,3,1,2"/>
                <Setter Property="Margin" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified"/>
                    <Condition Property="Visibility" Value="Visible"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonBar}}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderDark}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource BorderAlt2}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant2}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.ThemeBorderThicknessVariant2}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                    <Condition Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="1,5"/>
            </MultiTrigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CircleKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonTextBoxStyle}" TargetType="{x:Type tools:RibbonTextBox}" />

    <Style x:Key="SyncfusionRibbonItemHostStyle" TargetType="tools:RibbonItemHost">
        <Style.Triggers>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="MaxHeight" Value="43"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.ActiveDisplayMode" Value="OverflowMenu">
                <Setter Property="Padding" Value="3"/>
                <Setter Property="MinHeight" Value="30"/>
            </Trigger>
            <Trigger Property="tools:Ribbon.IsQATItem" Value="True">
                <Setter Property="MaxHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
                <Setter Property="Margin" Value="2,0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                    <Condition Property="tools:Ribbon.IsQATItem" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="MaxHeight" Value="{StaticResource TouchMode.MinHeight}"/>
            </MultiTrigger>
        </Style.Triggers>
        <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="tools:RibbonItemHost">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonItemHostStyle}" TargetType="tools:RibbonItemHost" />

    <!--  End of the RibbonItems resources  -->
    
    <!--  Start of the RibbonToggleButton resources  -->

    <!--  Ribbon Minimize Button  -->
    <Style x:Key="SyncfusionMinimizeRibbonToggleButtonStyle" TargetType="{x:Type tools:RibbonToggleButton}">
        <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonToggleButton}">
                    <Grid>
                        <Border
                            x:Name="border"
                            MinWidth="{TemplateBinding MinWidth}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Stretch"
                            Background="Transparent">
                            <Grid>
                                <Path
                                    x:Name="path1"
                                    Width="8"
                                    Height="4"
                                    VerticalAlignment="Center"
                                    Data="M5.24264 7.77817L9.13173 3.88908L9.83884 4.59619L5.24264 9.19239L0.646448 4.59619L1.35356 3.88908L5.24264 7.77817Z"
                                    Fill="{StaticResource IconColor}"
                                    Stretch="Fill"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Path.RenderTransform>
                                </Path>
                                <Path
                                    x:Name="path2"
                                    Width="10"
                                    Height="8"
                                    Data="M5.3329997,0 L6.6939998,0 6.6939998,1.3620001 7.9999998,1.3620001 7.9999998,2.667 12,2.667 12,1.3620001 13.361,1.3620001 13.361,9.3069999 12,9.3069999 12,8.0000002 7.9999998,8.0000002 7.9999998,9.3339999 6.6939998,9.3339999 6.6939998,10.641 5.3329997,10.641 5.3329997,6.6670001 0,6.6670001 0,3.9740001 5.3329997,3.9740001 z"
                                    Fill="{StaticResource IconColor}"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=RibbonState}" Value="Normal"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=(tools:SimplifiedLayoutSettings.LayoutMode)}" Value="Normal"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="path2" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="path1" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=RibbonState}" Value="Normal"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=(tools:SimplifiedLayoutSettings.LayoutMode)}" Value="Simplified"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="path2" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="path1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path1" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=RibbonState}" Value="Adorner">
                            <Setter TargetName="path2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path1" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path2" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="path1" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="path2" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="path1" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="LargeIconTemplate">
        <Image  x:Name="LargeImage" RenderOptions.BitmapScalingMode="NearestNeighbor"
               Width="26" Height="26" Stretch="{Binding Path=IconStretch, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
			   Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
    </DataTemplate>

    <DataTemplate x:Key="SmallIconTemplate">
        <Image x:Name="smallimage" Stretch="{Binding Path=IconStretch, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Width="{Binding IconWidth, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding IconHeight, RelativeSource={RelativeSource TemplatedParent}}"   
						             RenderOptions.BitmapScalingMode="NearestNeighbor"
						  Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
    </DataTemplate>

    <ControlTemplate x:Key="SyncfusionRibbonToggleButtonControlTemplate" TargetType="tools:RibbonToggleButton">
        <Border
                            Name="ItemBorder1"
                            MinHeight="{StaticResource MaterialDarkCustom.MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            >
            <Border
                                x:Name="InnerBorder1"
                                Margin="1,1,1,0"
                                Background="Transparent"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}">
                <StackPanel Margin="{TemplateBinding Padding}">
                    <Border Name="PART_ImageBorderLarge">

                        <ContentPresenter x:Name="LargeIconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding}" Margin="2"
                                                          ContentTemplateSelector="{TemplateBinding IconTemplateSelector}"/>
                    </Border>
                    <TextBlock x:Name="PART_LargeText" 
                                               Focusable="False"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                           
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Text="{TemplateBinding Label}"
                                               Margin="2,0,4,0">
                    </TextBlock>
                </StackPanel>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{StaticResource SecondaryHoverBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                <Setter TargetName="InnerBorder1" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                <Setter TargetName="InnerBorder1" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="Transparent" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IconTemplate" Value="{x:Null}"/>
                    <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter Property="ContentTemplate" TargetName="LargeIconContent" Value="{StaticResource LargeIconTemplate}"/>
                <Setter Property="Tag" TargetName="LargeIconContent" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Ribbon ToggleButton Style  -->
    <Style x:Key="SyncfusionRibbonToggleButtonStyle" TargetType="tools:RibbonToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="SmallIcon" Value="/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt16.png" />
        <Setter Property="LargeIcon" Value="/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt32.png" />
        <Setter Property="Label" Value="RibbonToggleButton" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="tools:RibbonToggleButton">
                    <Grid>
                        <Border
                            x:Name="ItemCheckedBorder"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0" />
                        <Border
                            Name="ItemBorder"
                            MinHeight="{StaticResource MaterialDarkCustom.MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource MaterialDarkCustom.CornerRadius2}"
                            SnapsToDevicePixels="True">
                            <Border
                                x:Name="InnerBorder"
                                Margin="1,1,1,0"
                                Background="Transparent"
                                CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="PART_ImageBorder" Grid.Column="0">
                                        <ContentPresenter x:Name="SmallIconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding}" Margin="2"
                                                          ContentTemplateSelector="{TemplateBinding IconTemplateSelector}"/>
                                    </Border>
                                    <AccessText
                                        x:Name="PART_Text"
                                        Grid.Column="1"
                                        Margin="2,0,4,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Label}" />
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ItemBorder" Property="Border.Background" Value="{StaticResource SecondaryHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ItemBorder" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ItemBorder" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ItemBorder" Property="Border.Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="SizeMode" Value="Small">
                            <Setter Property="Visibility" TargetName="PART_Text" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IconTemplate" Value="{x:Null}"/>
                                <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ContentTemplate" TargetName="SmallIconContent" Value="{StaticResource SmallIconTemplate}"/>
                            <Setter Property="Tag" TargetName="SmallIconContent" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SizeMode" Value="Large">
                <Setter Property="Template" Value="{StaticResource SyncfusionRibbonToggleButtonControlTemplate}" />
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionRibbonToggleButtonStyle}" TargetType="tools:RibbonToggleButton" />

    <!--  End of the RibbonToggleButton resources  -->
    
    <!--  Start of the RibbonBar resources  -->

    <!--  RibbonBarLauncherButton style  -->
    <Style x:Key="SyncfusionLauncherRibbonButtonStyle" TargetType="{x:Type tools:RibbonButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                    <Border
                        Name="Part_OuterBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Canvas
                            Width="8"
                            Height="8"
                            Margin="1,0,0,0"
                            Background="Transparent "
                            SnapsToDevicePixels="True">
                            <Path x:Name="path" Stroke="{StaticResource IconColor}">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0.5,0" EndPoint="0.5,6" />
                                        <LineGeometry StartPoint="0,0.5" EndPoint="6,0.5" />
                                        <LineGeometry StartPoint="3,3.5" EndPoint="4,3.5" />
                                        <LineGeometry StartPoint="4,4.5" EndPoint="6,4.5" />
                                        <LineGeometry StartPoint="4,5.5" EndPoint="6,5.5" />
                                        <LineGeometry StartPoint="3,6.5" EndPoint="7,6.5" />
                                        <LineGeometry StartPoint="6.5,3" EndPoint="6.5,7" />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <!--  </Border>  -->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Part_OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Part_OuterBorder" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  RibbonBar style  -->
    <Style x:Key="SyncfusionRibbonBarStyle" TargetType="{x:Type tools:RibbonBar}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="CollapseImage" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}, Path=RibbonBarCollapseImage}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnterStoryBoard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="BarHoverGrid"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeaveStoryBoard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="BarHoverGrid"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="1,0,-5,0">
                        <Grid
                            x:Name="BarHoverGrid"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Background="{StaticResource ContentBackgroundAlt2}"
                            ClipToBounds="True"
                            Opacity="0">
                            <Rectangle
                                Height="Auto"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="{StaticResource ContentBackgroundAlt2}"
                                Stroke="{StaticResource BorderAlt}"
                                StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}" />
                        </Grid>
                        <Border>
                            <Grid x:Name="barGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="5" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="barRow" Height="74"/>
                                    <RowDefinition MinHeight="17" />
                                </Grid.RowDefinitions>
                                <Border Name="PART_RibbonBarBorder" Margin="3,0,3,0">
                                    <Border Name="PART_presenterBorder" Grid.Row="0">
                                        <ItemsPresenter />
                                    </Border>
                                </Border>
                                <Border Name="PART_headerBorder" Grid.Row="1">
                                    <DockPanel>
                                        <tools:RibbonButton
                                            Name="PART_DialogLauncherButton"
                                            Width="15"
                                            Height="13"
                                            Margin="0,2,0,0"
                                            Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommandParameter}"
                                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommandTarget}"
                                            DockPanel.Dock="Right"
                                            SizeForm="ExtraSmall"
											IconTemplate="{TemplateBinding IconTemplate}"
                                            SmallIcon="{TemplateBinding CollapseImage}"
                                            Style="{StaticResource SyncfusionLauncherRibbonButtonStyle}"
                                            ToolTip="{TemplateBinding LauncherToolTip}"
                                            ToolTipService.ShowOnDisabled="{Binding Path=(ToolTipService.ShowOnDisabled), RelativeSource={RelativeSource TemplatedParent}}"
                                            Visibility="{TemplateBinding IsLauncherButtonVisible,
                                                                         Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <tools:RibbonAutomatableTextBlock
                                            Name="header"
                                            Margin="0,0,0,2"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ContentForeground}"
                                            Style="{StaticResource SyncfusionRibbonAutomatableTextBlockStyle}"
                                            Text="{TemplateBinding Header}"
                                            TextAlignment="Center" />
                                    </DockPanel>
                                </Border>
                                <Border
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Width="1"
                                    Height="{TemplateBinding Height}"
                                    HorizontalAlignment="Left"
                                    Background="{StaticResource BorderAlt}"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                                <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="PART_headerBorder" Value="5,0,5,0"/>
                            <Setter TargetName="barRow" Property="Height" Value="104"/>
                        </MultiTrigger>
                        <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                            <Setter TargetName="PART_headerBorder" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter TargetName="barRow" Property="Height" Value="43"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <tools:GroupPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="PanelState" Value="ExtraSmall">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonBar}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="MouseEnterStoryBoard">
                                    <DoubleAnimationUsingKeyFrames
                                        BeginTime="00:00:00"
                                        Storyboard.TargetName="BarHoverGrid"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="MouseLeaveStoryBoard">
                                    <DoubleAnimationUsingKeyFrames
                                        BeginTime="00:00:00"
                                        Storyboard.TargetName="BarHoverGrid"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <tools:DropDownButton
                                Name="PART_RibbonDropDownButton"
                                Label="{TemplateBinding Header}"
                                SizeForm="ExtraSmall"
								IconTemplate="{TemplateBinding IconTemplate}"
                                SmallIcon="{TemplateBinding CollapseImage}">
                                <Grid
                                    x:Name="BarHoverGrid"
                                    Grid.RowSpan="2"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="0,0,1,1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{StaticResource SecondaryHoverBackground}"
                                    ClipToBounds="True"
                                    Opacity="0">
                                    <Rectangle
                                        Height="Auto"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Fill="{StaticResource SecondaryHoverBackground}"
                                        Stroke="{x:Null}"
                                        StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness}" />
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="5" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition>
                                            <RowDefinition.Style>
                                                <Style>
                                                    <Setter Property="RowDefinition.Height" Value="70" />
                                                    <Style.Triggers>
                                                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                            <Setter Property="RowDefinition.MinHeight" Value="100" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RowDefinition.Style>
                                        </RowDefinition>
                                        <RowDefinition Height="17" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Name="PART_RibbonBarBorder" 
                                        Background="{TemplateBinding Background}"
                                        Margin="3,0,3,0">
                                        <Border Name="PART_PresenterBorder" Grid.Row="0">
                                            <ItemsPresenter />
                                        </Border>
                                    </Border>
                                    <Border Name="PART_headerBorder" Grid.Row="1">
                                        <DockPanel>
                                            <tools:RibbonButton
                                                Name="PART_DialogLauncherButton"
                                                Width="15"
                                                Height="14"
                                                Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommandParameter}"
                                                CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommandTarget}"
                                                DockPanel.Dock="Right"
                                                SizeForm="ExtraSmall"
												IconTemplate="{TemplateBinding IconTemplate}"
                                                SmallIcon="{TemplateBinding CollapseImage}"
                                                Style="{StaticResource SyncfusionLauncherRibbonButtonStyle}"
                                                ToolTip="{TemplateBinding LauncherToolTip}"
                                                ToolTipService.ShowOnDisabled="{Binding Path=(ToolTipService.ShowOnDisabled), RelativeSource={RelativeSource TemplatedParent}}"
                                                Visibility="{TemplateBinding IsLauncherButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <TextBlock
                                                Name="header"
                                                VerticalAlignment="Center"
                                                Foreground="{StaticResource ContentForeground}"
                                                Text="{TemplateBinding Header}"
                                                TextAlignment="Center" />
                                        </DockPanel>
                                    </Border>
                                    <Line
                                        Grid.RowSpan="2"
                                        Grid.Column="1"
                                        Width="1"
                                        Stroke="{StaticResource BorderAlt}"
                                        X1="1"
                                        Y1="87"
                                        Y2="1" />
                                </Grid>
                            </tools:DropDownButton>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <BeginStoryboard Storyboard="{StaticResource MouseLeaveStoryBoard}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <BeginStoryboard Storyboard="{StaticResource MouseEnterStoryBoard}" />
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="0" />
            </Trigger>

            <Trigger Property="PanelState" Value="Collapsed">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:RibbonBar}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="MouseEnterStoryBoard">
                                    <DoubleAnimationUsingKeyFrames
                                        BeginTime="00:00:00"
                                        Storyboard.TargetName="BarHoverGrid"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="MouseLeaveStoryBoard">
                                    <DoubleAnimationUsingKeyFrames
                                        BeginTime="00:00:00"
                                        Storyboard.TargetName="BarHoverGrid"
                                        Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="5" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" BorderThickness="{TemplateBinding BorderThickness}">

                                    <Border Name="PART_InnerBorder" BorderBrush="Transparent">
                                        <Grid>
                                            <tools:DropDownButton
                                                Name="PART_RibbonDropDownButton"
                                                Label="{TemplateBinding Header}"
												IconTemplate="{TemplateBinding IconTemplate}"
                                                LargeIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CollapseImage}"
                                                Style="{StaticResource SyncfusionRibbonBarDropDownButtonStyle}"
                                                Visibility="Hidden">

                                                <Border
                                                    Name="PART_PopupBorder"
                                                    Background="{StaticResource ContentBackgroundAlt2}"
                                                    BorderBrush="{StaticResource BorderAlt}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                    <Grid>
                                                        <Grid
                                                            x:Name="BarHoverGrid"
                                                            Grid.RowSpan="2"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            Margin="0,0,1,1"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                            Background="{StaticResource ContentBackgroundAlt2}"
                                                            ClipToBounds="True"
                                                            Opacity="0">
                                                            <Rectangle
                                                                Height="Auto"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Stretch"
                                                                Fill="{StaticResource ContentBackgroundAlt2}"
                                                                Stroke="{StaticResource ContentBackgroundAlt2}"
                                                                StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}" />
                                                        </Grid>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition>
                                                                    <RowDefinition.Style>
                                                                        <Style>
                                                                            <Setter Property="RowDefinition.Height" Value="70" />
                                                                            <Style.Triggers>
                                                                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                                                    <Setter Property="RowDefinition.MinHeight" Value="100" />
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </RowDefinition.Style>
                                                                </RowDefinition>
                                                                <RowDefinition Height="17" />
                                                            </Grid.RowDefinitions>
                                                            <Border
                                                                Name="PART_RibbonBarBorder"
                                                                Margin="3,0,3,0"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}">
                                                                <Border Name="PART_PresenterBorder" Grid.Row="0">
                                                                    <ItemsPresenter />
                                                                </Border>
                                                            </Border>
                                                            <Border
                                                                Name="PART_headerBorder"
                                                                Grid.Row="1"
                                                                Background="{TemplateBinding Background}">
                                                                <DockPanel>
                                                                    <tools:RibbonButton
                                                                        Name="PART_DialogLauncherButton"
                                                                        Width="15"
                                                                        Height="14"
                                                                        Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommand}"
                                                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommandParameter}"
                                                                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LauncherCommandTarget}"
                                                                        DockPanel.Dock="Right"
                                                                        SizeForm="ExtraSmall"
																		IconTemplate="{TemplateBinding IconTemplate}"
                                                                        SmallIcon="{TemplateBinding CollapseImage}"
                                                                        Style="{StaticResource SyncfusionLauncherRibbonButtonStyle}"
                                                                        ToolTip="{TemplateBinding LauncherToolTip}"
                                                                        ToolTipService.ShowOnDisabled="{Binding Path=(ToolTipService.ShowOnDisabled), RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Visibility="{TemplateBinding IsLauncherButtonVisible,
                                                                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                                    <TextBlock
                                                                        VerticalAlignment="Center"
                                                                        Foreground="{StaticResource ContentForeground}"
                                                                        Text="{TemplateBinding Header}"
                                                                        TextAlignment="Center" />
                                                                </DockPanel>
                                                            </Border>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </tools:DropDownButton>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Line
                                    x:Name="barLine"
                                    Grid.Column="1"
                                    Width="1"
                                    Stroke="{StaticResource BorderAlt}"
                                    X1="1"
                                    Y1="87"
                                    Y2="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                                    <Setter TargetName="PART_headerBorder" Property="Visibility" Value="Collapsed"/>
                                    <Setter Property="Margin" Value="0"/>
                                </Trigger>
                                <Trigger Property="PanelState" Value="Collapsed">
                                    <Setter TargetName="PART_RibbonDropDownButton" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <BeginStoryboard Storyboard="{StaticResource MouseLeaveStoryBoard}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <BeginStoryboard Storyboard="{StaticResource MouseEnterStoryBoard}" />
                                </EventTrigger>
                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                    <Setter TargetName="barLine" Property="Y1" Value="140" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsLargeButtonPanel" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <tools:LargeButtonPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <tools:LargeButtonPanel VerticalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonBarStyle}" TargetType="{x:Type tools:RibbonBar}" />

    <!--  RibbonPage Style  -->
    <Style x:Key="SyncfusionRibbonPageStyle" TargetType="{x:Type tools:RibbonPage}">
        <Setter Property="Margin" Value="0,25,0,0" />
        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.TitleTextStyle}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonPage}">
                    <AdornerDecorator x:Name="PART_Adorner">
                        <Border
                                Name="PART_MainBorder"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                            <DockPanel
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent">
                                <ContentPresenter Content="{TemplateBinding StatusBar}" DockPanel.Dock="Bottom" />
                                <AdornerDecorator Panel.ZIndex="100" DockPanel.Dock="Top">
                                    <ContentPresenter Content="{TemplateBinding Ribbon}" />
                                </AdornerDecorator>
                                <ContentPresenter Content="{TemplateBinding Content}" DockPanel.Dock="Bottom" />
                            </DockPanel>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonPageStyle}" TargetType="{x:Type tools:RibbonPage}" />

    <!--  End of the RibbonBar resources  -->
    
    <!--  Start of the RibbonTab resources  -->
    
    <!--  TabButton Style  -->
    <Style x:Key="SyncfusionTabButtonStyle" TargetType="{x:Type tools:TabButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.BodyTextStyle}" />
        <Setter Property="Padding" Value="0,1,0,2" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightNormal}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:TabButton}">
                    <Border
                        x:Name="border"
                        Height="25"
                        Margin="0,0,0,0"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid ClipToBounds="True">

                            <Border
                                Name="center_Path"
                                Height="25"
                                Margin="0"
                                Panel.ZIndex="100"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                                <Grid>
                                    <ContentPresenter
                                        x:Name="PART_CaptionContent"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}, Path=ItemTemplate}"
                                        ContentTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}, Path=ItemTemplateSelector}" />
                                    <TextBlock
                                        Name="PART_Caption"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        SnapsToDevicePixels="True"
                                        Text="{TemplateBinding Caption}"
                                        TextAlignment="Center" />
                                </Grid>

                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--  Context  Tab Group Checked  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonTab}}, Path=HasContextTabGroup}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="PART_Caption" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                            <Setter TargetName="center_Path" Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                            <Setter TargetName="border" Property="Margin" Value="0,0,0,-3" />
                            <Setter TargetName="center_Path" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="center_Path" Property="Background" Value="Transparent" />
                        </MultiDataTrigger>

                        <!--  Context  Tab Group Checked when context color is  Transparent  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonTab}}, Path=HasContextTabGroup}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonTab}}, Path=ContextColor}" Value="Transparent" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Caption" Property="Foreground" Value="{StaticResource SecondaryForeground}" />
                        </MultiDataTrigger>

                        <!--  Tab Checked  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonTab}}, Path=HasContextTabGroup}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColorForeground}" />
                            <Setter TargetName="center_Path" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="center_Path" Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                            <Setter TargetName="border" Property="Margin" Value="0,0,0,-3" />
                            <Setter TargetName="center_Path" Property="Background" Value="Transparent" />
                        </MultiDataTrigger>

                        <!--  Tab Mouse Over  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryBackgroundOpacity}" />
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBackgroundOpacity}" />
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionTabButtonStyle}" TargetType="{x:Type tools:TabButton}" />

    <!--  QuickAccessToolBar style  -->
    <Style x:Key="SyncfusionQuickAccessToolBarStyle" TargetType="{x:Type tools:QuickAccessToolBar}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="GeometryBackground" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="GeometryStroke" Value="{StaticResource BorderAlt}" />
        <Setter Property="Control.Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:QuickAccessToolBar}">
                    <Border
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <tools:TwoItemsLayoutPanelEx
                                Name="PART_PanelEx"
                                MinHeight="25"
                                Margin="0,-1,0,0"
                                windows_shared:WindowChrome.IsHitTestVisibleInChrome="True"
                                MaxRightWidth="30"
                                MinRightWidth="30">
                            <ItemsControl Name="PART_Main" Focusable="False">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <tools:QuickAccessToolBarPanel
                                                HorizontalAlignment="Left"
                                                Background="Transparent"
                                                ClipToBounds="True"
                                                GeometryBackground="{Binding Path=GeometryBackground, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:QuickAccessToolBar}}}"
                                                GeometryStroke="{Binding Path=GeometryStroke, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:QuickAccessToolBar}}}"
                                                GeometryStrokeThickness="0"
                                                HasGeometry="{Binding Path=HasGeometry, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tools:QuickAccessToolBar}}}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <Grid>
                                <tools:DropDownButton
                                        Name="PART_PopupButton"
                                        Width="23"
                                        Style="{StaticResource SyncfusionQuickAccessPopupDropDownButtonStyle}">
                                    <Border
                                            x:Name="_QATDropDownPopUp"
                                            Width="Auto"
                                            BorderBrush="{StaticResource ContentBackground}"
                                            BorderThickness="0.5">
                                        <Grid>
                                            <StackPanel>
                                                <Border
                                                        Width="Auto"
                                                        Height="24"
                                                        Background="{StaticResource ContentBackgroundAlt2}">
                                                    <Border.Margin>
                                                        <Thickness>1,1,0,1</Thickness>
                                                    </Border.Margin>
                                                    <TextBlock
                                                            x:Uid="CustomizeQATTextBlock"
                                                            Width="Auto"
                                                            Margin="6,0,3,0"
                                                            Padding="0,0,7,0"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            FontWeight="{StaticResource MaterialDarkCustom.FontWeightMedium}"
                                                            Foreground="{StaticResource ContentForeground}"
                                                            Text="{tools:ToolsLocalizationResourceExtension ResourceName=CustomizeQAT}" />
                                                </Border>
                                                <ItemsControl
                                                        Name="PART_QATMenu"
                                                        FocusManager.IsFocusScope="False"
                                                        KeyboardNavigation.IsTabStop="False">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                                                                <StackPanel.Resources>
                                                                    <Style TargetType="{x:Type tools:RibbonButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                                                        <Setter Property="Background" Value="{StaticResource PopupBackground}" />
                                                                        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                                                                        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
                                                                        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.BodyTextStyle}" />
                                                                        <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightNormal}" />
                                                                        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
                                                                        <Setter Property="Margin" Value="1,0,0,0" />
                                                                        <Setter Property="Padding" Value="0,0,7,0" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                                                                                    <Border
                                                                                            Name="OuterBorder"
                                                                                            Width="{TemplateBinding Width}"
                                                                                            Height="{TemplateBinding Height}"
                                                                                            MinWidth="{TemplateBinding MinWidth}"
                                                                                            MinHeight="{TemplateBinding MinHeight}"
                                                                                            MaxWidth="{TemplateBinding MaxWidth}"
                                                                                            MaxHeight="{TemplateBinding MaxHeight}"
                                                                                            Margin="{TemplateBinding Margin}"
                                                                                            Padding="{TemplateBinding Padding}"
                                                                                            Background="{TemplateBinding Panel.Background}"
                                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            SnapsToDevicePixels="True">
                                                                                        <Grid Margin="0,1,0,1">
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="Auto" MinWidth="22" />
                                                                                                <ColumnDefinition Width="Auto" />
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <Border
                                                                                                    Name="PART_CheckBorder"
                                                                                                    Grid.Column="0"
                                                                                                    Width="19"
                                                                                                    Height="19"
                                                                                                    HorizontalAlignment="Center"
                                                                                                    VerticalAlignment="Center"
                                                                                                    Background="Transparent"
                                                                                                    Visibility="Collapsed">
                                                                                                <Path
                                                                                                        x:Name="path"
                                                                                                        Width="8"
                                                                                                        Height="8"
                                                                                                        Data="M10.738967,0 L11.817,1.1360061 5.1774399,7.4388217 5.1789999,7.4406547 4.0474274,8.5560006 0,3.7727338 1.1959616,2.7609998 4.1605471,6.244079 z"
                                                                                                        Fill="{StaticResource IconColor}"
                                                                                                        SnapsToDevicePixels="True"
                                                                                                        Stretch="Fill" />
                                                                                            </Border>
                                                                                            <TextBlock
                                                                                                    Name="label"
                                                                                                    Grid.Column="1"
                                                                                                    Margin="7,2,2,2"
                                                                                                    VerticalAlignment="Center"
                                                                                                    Foreground="{TemplateBinding Foreground}"
                                                                                                    Text="{TemplateBinding Label}" />
                                                                                        </Grid>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="IsMouseOver" Value="False" />
                                                                                                <Condition Property="IsKeyboardFocused" Value="True" />
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                                                                            <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                                                                        </MultiTrigger>
                                                                                        <Trigger Property="IsSelected" Value="True">
                                                                                            <Setter TargetName="PART_CheckBorder" Property="Visibility" Value="Visible" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                                                                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                                                                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
                                                                                            <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                                                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                                                            <Setter Property="FontSize" Value="13" />
                                                                                            <Setter Property="Padding" Value="16,9,16,9" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </StackPanel.Resources>
                                                            </StackPanel>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                                <Rectangle
                                                        Name="TopSeperator"
                                                        Height="1"
                                                        Margin="30,0,0,0"
                                                        Fill="{StaticResource BorderAlt}"
                                                        StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}"
                                                        Visibility="Collapsed" />
                                                <tools:RibbonButton
                                                        Name="PART_MoreCommands"
                                                        Width="auto"
                                                        Margin="0,1"
                                                        Command="tools:RibbonCommands.QATMoreCommands"
                                                        Foreground="{StaticResource ContentForeground}"
                                                        Label="{tools:ToolsLocalizationResourceExtension ResourceName=QATMoreCommands}"
                                                        Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}"
                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}, Path=EnableMoreCommands, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                <tools:RibbonButton
                                                        Name="PART_AboveButton"
                                                        Width="auto"
                                                        Margin="0,1"
                                                        Command="tools:RibbonCommands.PlaceQATAbove"
                                                        Foreground="{StaticResource ContentForeground}"
                                                        Label="{tools:ToolsLocalizationResourceExtension ResourceName=QATShowAbove}"
                                                        Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}"
                                                        Visibility="Collapsed" />
                                                <tools:RibbonButton
                                                        Name="PART_BelowButton"
                                                        Width="auto"
                                                        Margin="0,1"
                                                        Command="tools:RibbonCommands.PlaceQATBelow"
                                                        Foreground="{StaticResource ContentForeground}"
                                                        Label="{tools:ToolsLocalizationResourceExtension ResourceName=QATShowBelow}"
                                                        Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}" />
                                                <Rectangle
                                                        Height="1"
                                                        Margin="30,1,0,1"
                                                        Fill="{StaticResource BorderAlt}"
                                                        StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}" />
                                                <tools:RibbonButton
                                                        Name="PART_MinimizeButton"
                                                        Width="auto"
                                                        Margin="0,1"
                                                        Command="tools:RibbonCommands.MinimizeRibbon"
                                                        Foreground="{StaticResource ContentForeground}"
                                                        IsToggle="True"
                                                        Label="{tools:ToolsLocalizationResourceExtension ResourceName=MinimizeRibbon}"
                                                        Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}" />
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </tools:DropDownButton>
                                <tools:DropDownButton
                                        x:Name="PART_OverflowButton"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource SyncfusionRibbonOverflowDropDownButtonStyle}"
                                        Visibility="Collapsed">
                                    <tools:DropDownButton.PathGeometry>
                                        <GeometryGroup>
                                            <PathGeometry>
                                                <PathFigure
                                                        IsClosed="True"
                                                        IsFilled="True"
                                                        StartPoint="3.5,8">
                                                    <LineSegment Point="4.5,9" />
                                                    <LineSegment Point="3.5,10" />
                                                </PathFigure>
                                            </PathGeometry>
                                            <PathGeometry>
                                                <PathFigure
                                                        IsClosed="True"
                                                        IsFilled="True"
                                                        StartPoint="7.5,8">
                                                    <LineSegment Point="8.5,9" />
                                                    <LineSegment Point="7.5,10" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </GeometryGroup>
                                    </tools:DropDownButton.PathGeometry>
                                    <StackPanel
                                            x:Name="PART_OverflowPanel"
                                            Height="21"
                                            Background="{TemplateBinding Background}"
                                            Orientation="Horizontal">
                                        <ItemsControl Name="PART_PopupItemsControl">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>

                                        <tools:DropDownButton
                                                Name="PART_PopupButtonOverflowed"
                                                Style="{StaticResource SyncfusionQuickAccessPopupDropDownButtonStyle}"
                                                Visibility="{TemplateBinding QATDropDownVisiblity}">
                                            <tools:DropDownButton.PathGeometry>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="4,7" EndPoint="9,7" />
                                                    <PathGeometry>
                                                        <PathFigure
                                                                IsClosed="True"
                                                                IsFilled="True"
                                                                StartPoint="5,10">
                                                            <LineSegment Point="8,10" />
                                                            <LineSegment Point="6.5,12.5" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </GeometryGroup>
                                            </tools:DropDownButton.PathGeometry>
                                            <Border
                                                    Width="Auto"
                                                    Padding="2"
                                                    BorderBrush="{StaticResource ContentBackground}"
                                                    BorderThickness="0.5">
                                                <Grid>
                                                    <DockPanel>
                                                        <Border
                                                                Width="25"
                                                                HorizontalAlignment="Left"
                                                                Background="Transparent"
                                                                DockPanel.Dock="Left" />
                                                    </DockPanel>
                                                    <StackPanel>
                                                        <Border
                                                                Height="{StaticResource MaterialDarkCustom.MinHeight}"
                                                                Margin="0,0,0,1"
                                                                Background="{StaticResource ContentBackgroundAlt2}">
                                                            <TextBlock
                                                                    x:Uid="CustomizeQATTextBlock"
                                                                    Margin="3,0,0,0"
                                                                    VerticalAlignment="Center"
                                                                    FontWeight="{StaticResource MaterialDarkCustom.FontWeightMedium}"
                                                                    Foreground="{StaticResource ContentForeground}"
                                                                    Text="{tools:ToolsLocalizationResourceExtension ResourceName=CustomizeQAT}" />
                                                        </Border>
                                                        <ItemsControl
                                                        Name="PART_QATMenuOverFlow"
                                                        FocusManager.IsFocusScope="False"
                                                        KeyboardNavigation.IsTabStop="False">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                                                                        <StackPanel.Resources>
                                                                            <Style TargetType="{x:Type tools:RibbonButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                                                                <Setter Property="Background" Value="{StaticResource PopupBackground}" />
                                                                                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                                                                                <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
                                                                                <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.BodyTextStyle}" />
                                                                                <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightNormal}" />
                                                                                <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
                                                                                <Setter Property="Margin" Value="1,0,0,0" />
                                                                                <Setter Property="Padding" Value="0,0,7,0" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                                                                                            <Border
                                                                                            Name="OuterBorder"
                                                                                            Width="{TemplateBinding Width}"
                                                                                            Height="{TemplateBinding Height}"
                                                                                            MinWidth="{TemplateBinding MinWidth}"
                                                                                            MinHeight="{TemplateBinding MinHeight}"
                                                                                            MaxWidth="{TemplateBinding MaxWidth}"
                                                                                            MaxHeight="{TemplateBinding MaxHeight}"
                                                                                            Margin="{TemplateBinding Margin}"
                                                                                            Padding="{TemplateBinding Padding}"
                                                                                            Background="{TemplateBinding Panel.Background}"
                                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            SnapsToDevicePixels="True">
                                                                                                <Grid Margin="0,1,0,1">
                                                                                                    <Grid.ColumnDefinitions>
                                                                                                        <ColumnDefinition Width="Auto" MinWidth="22" />
                                                                                                        <ColumnDefinition Width="Auto" />
                                                                                                    </Grid.ColumnDefinitions>
                                                                                                    <Border
                                                                                                    Name="PART_CheckBorder"
                                                                                                    Grid.Column="0"
                                                                                                    Width="19"
                                                                                                    Height="19"
                                                                                                    HorizontalAlignment="Center"
                                                                                                    VerticalAlignment="Center"
                                                                                                    Background="Transparent"
                                                                                                    Visibility="Collapsed">
                                                                                                        <Path
                                                                                                        x:Name="path"
                                                                                                        Width="8"
                                                                                                        Height="8"
                                                                                                        Data="M10.738967,0 L11.817,1.1360061 5.1774399,7.4388217 5.1789999,7.4406547 4.0474274,8.5560006 0,3.7727338 1.1959616,2.7609998 4.1605471,6.244079 z"
                                                                                                        Fill="{StaticResource IconColor}"
                                                                                                        SnapsToDevicePixels="True"
                                                                                                        Stretch="Fill" />
                                                                                                    </Border>
                                                                                                    <TextBlock
                                                                                                    Name="label"
                                                                                                    Grid.Column="1"
                                                                                                    Margin="7,2,2,2"
                                                                                                    VerticalAlignment="Center"
                                                                                                    Foreground="{StaticResource ContentForeground}"
                                                                                                    Text="{TemplateBinding Label}" />
                                                                                                </Grid>
                                                                                            </Border>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <MultiTrigger>
                                                                                                    <MultiTrigger.Conditions>
                                                                                                        <Condition Property="IsMouseOver" Value="False" />
                                                                                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                                                                                    </MultiTrigger.Conditions>
                                                                                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                                                                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                                                                                </MultiTrigger>
                                                                                                <Trigger Property="IsSelected" Value="True">
                                                                                                    <Setter TargetName="PART_CheckBorder" Property="Visibility" Value="Visible" />
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                                                                                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                                                                                                    <Setter TargetName="OuterBorder" Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
                                                                                                    <Setter TargetName="path" Property="Fill" Value="{StaticResource IconColor}" />
                                                                                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                                                                                                </Trigger>
                                                                                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                                                                    <Setter Property="FontSize" Value="13" />
                                                                                                    <Setter Property="Padding" Value="16,9,16,9" />
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </StackPanel.Resources>
                                                                    </StackPanel>
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                        </ItemsControl>
                                                        <Separator
                                                                Name="TopSeperatorOverFlow"
                                                                Height="2"
                                                                Margin="30,0,0,0"
                                                                Background="#FFE0E3E6"
                                                                Visibility="Collapsed" />
                                                        <tools:RibbonButton
                                                                Command="tools:RibbonCommands.QATMoreCommands"
                                                                Foreground="{StaticResource ContentForeground}"
                                                                Label="{tools:ToolsLocalizationResourceExtension ResourceName=QATMoreCommands}"
                                                                Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}"
                                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}, Path=EnableMoreCommands, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <tools:RibbonButton
                                                                Command="tools:RibbonCommands.PlaceQATAbove"
                                                                Foreground="{StaticResource ContentForeground}"
                                                                Label="{tools:ToolsLocalizationResourceExtension ResourceName=QATShowAbove}"
                                                                Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}"
                                                                Visibility="{Binding ElementName=PART_AboveButton, Path=Visibility, Mode=TwoWay}" />
                                                        <tools:RibbonButton
                                                                Command="tools:RibbonCommands.PlaceQATBelow"
                                                                Foreground="{StaticResource ContentForeground}"
                                                                Label="{tools:ToolsLocalizationResourceExtension ResourceName=QATShowBelow}"
                                                                Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}"
                                                                Visibility="{Binding ElementName=PART_BelowButton, Path=Visibility, Mode=TwoWay}" />
                                                        <Separator
                                                                Height="2"
                                                                Margin="30,0,0,0"
                                                                Background="{StaticResource ContentBackgroundAlt2}" />
                                                        <tools:RibbonButton
                                                                Command="tools:RibbonCommands.MinimizeRibbon"
                                                                Foreground="{StaticResource ContentForeground}"
                                                                IsSelected="{Binding ElementName=PART_MinimizeButton, Path=IsSelected, Mode=TwoWay}"
                                                                IsToggle="True"
                                                                Label="{tools:ToolsLocalizationResourceExtension ResourceName=MinimizeRibbon}"
                                                                Style="{StaticResource SyncfusionQATMenuItemRibbonButtonStyle}" />
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </tools:DropDownButton>
                                    </StackPanel>
                                </tools:DropDownButton>
                            </Grid>
                        </tools:TwoItemsLayoutPanelEx>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="AllowToolTipOnQAT" Value="True">
                            <Setter TargetName="PART_PopupButton" Property="ToolTip" Value="{tools:ToolsLocalizationResourceExtension ResourceName=QATToolTip}" />
                        </Trigger>
                        <Trigger Property="HasOverflowChildren" Value="True">
                            <Setter TargetName="PART_PopupButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_OverflowButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="PART_QATMenu" Property="HasItems" Value="True">
                            <Setter TargetName="TopSeperator" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="PART_QATMenuOverFlow" Property="HasItems" Value="True">
                            <Setter TargetName="TopSeperatorOverFlow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasGeometry" Value="False">
                            <Setter TargetName="PART_AboveButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_BelowButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="FrameworkElement.MinHeight" Value="40" />
                            <Setter Property="Margin" Value="0,5,0,0" />
                            <Setter TargetName="PART_PopupButton" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_OverflowButton" Property="Height" Value="28" />
                            <Setter TargetName="PART_OverflowButton" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_OverflowPanel" Property="Height" Value="40" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionQuickAccessToolBarStyle}" TargetType="{x:Type tools:QuickAccessToolBar}" />

    <!--  End of the RibbonTab resources  -->
    
    <!--  Start of the Ribbon resources  -->

    <Style x:Key="SyncfusionBackStageButtonStyle" TargetType="{x:Type tools:BackStageButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="61" />
        <Setter Property="MinWidth" Value="62" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="-2,28,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextBlock.FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}"/>
        <Setter Property="TextBlock.FontSize" Value="{StaticResource MaterialDarkCustom.TitleTextStyle}"/>
        <Setter Property="TextBlock.FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightMedium}"/>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ContentForeground}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:BackStageButton}">
                    <Border
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        Margin="0"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="2,0,2,0">
                            <TextBlock
                                x:Name="contentPresenter"
                                Margin="0,5"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Header}"
                                FontFamily="{TemplateBinding TextBlock.FontFamily}"
                                FontSize="{TemplateBinding TextBlock.FontSize}"
                                FontWeight="{TemplateBinding TextBlock.FontWeight}"
                                Foreground="{TemplateBinding TextBlock.Foreground}"
                                TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                Typography.Capitals="AllSmallCaps" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionBackStageButtonStyle}" TargetType="{x:Type tools:BackStageButton}" />

    <Style x:Key="SyncfusionNavigationBackStageButtonStyle" BasedOn="{StaticResource SyncfusionBackStageButtonStyle}" TargetType="{x:Type tools:BackStageButton}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}" />
        <Style.Triggers>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter Property="MinWidth" Value="64" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Margin" Value="-2,32,0,0" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryLight}" />
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryLight}" />
                <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />

            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />

            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Backstage button template  -->
    <DataTemplate x:Key="BackStageButtonTemplate">
        <tools:BackStageButton Style="{StaticResource SyncfusionNavigationBackStageButtonStyle}"/>
    </DataTemplate>

    <!--  ItemsControlInternalItemStyle  -->
    <Style x:Key="SyncfusionItemsControlInternalItemStyle" TargetType="shared:ItemsControlInternalItem">
        <Setter Property="Background" Value="{StaticResource ContentBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="shared:ItemsControlInternalItem">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:ItemsControlInternal}}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ApplicationMenu Style  -->
    <Style x:Key="SyncfusionApplicationMenuStyle" TargetType="{x:Type tools:ApplicationMenu}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:ApplicationMenu}">
                    <tools:CustomPopup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{Binding Path=IsPopupOpen, Mode=TwoWay, UpdateSourceTrigger=Explicit, RelativeSource={RelativeSource TemplatedParent}}"                         
                            PopupAnimation="Fade"
                            SnapsToDevicePixels="True"
                            StaysOpen="False">
                        <Microsoft_Windows_Luna:SystemDropShadowChrome Name="Shdw">
                            <Grid x:Name="mainGrid">
                                <Border
                                        Background="{StaticResource ContentBackgroundAlt2}"
                                        BorderBrush="{StaticResource BorderAlt}"
                                        BorderThickness="1">
                                    <DockPanel LastChildFill="True">
                                        <Border
                                                Background="{StaticResource ContentBackgroundAlt2}"
                                                DockPanel.Dock="Bottom">
                                            <shared:ItemsControlInternal
                                                    x:Name="PART_AppItems"
                                                    HorizontalAlignment="Right"
                                                    ItemContainerStyle="{StaticResource SyncfusionItemsControlInternalItemStyle}"
                                                    Visibility="Visible">
                                                <shared:ItemsControlInternal.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel
                                                                IsItemsHost="True"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </shared:ItemsControlInternal.ItemsPanel>
                                            </shared:ItemsControlInternal>
                                        </Border>
                                        <Border
                                                BorderBrush="{StaticResource BorderAlt}"
                                                BorderThickness="0,0,0,1">
                                            <DockPanel LastChildFill="True">
                                                <Border
                                                        x:Name="PART_Border"
                                                        MinWidth="{TemplateBinding PreviewPanelMinWidth}"
                                                        Padding="5"
                                                        Background="{StaticResource ContentBackgroundAlt2}"
                                                        BorderBrush="{StaticResource BorderAlt}"
                                                        BorderThickness="1,0,0,0"
                                                        DockPanel.Dock="Right"
                                                        Visibility="Visible">
                                                    <ItemsControl
                                                            x:Name="PART_MenuItems"
                                                            Foreground="{StaticResource ContentForeground}"
                                                            ItemTemplate="{x:Null}"
                                                            ItemsSource="{TemplateBinding internalMenuItems}" />
                                                </Border>
                                                <ItemsPresenter
                                                        x:Name="PART_Items"
                                                        Margin="5"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </DockPanel>
                                        </Border>
                                    </DockPanel>
                                </Border>
                            </Grid>
                        </Microsoft_Windows_Luna:SystemDropShadowChrome>
                    </tools:CustomPopup>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,4,4" />
                        </Trigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="70" />
                            <Setter TargetName="PART_Popup" Property="HorizontalOffset" Value="-38" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsQATBelow,RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}}" Value="True">
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="52"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionApplicationMenuStyle}" TargetType="{x:Type tools:ApplicationMenu}" />

    <!--  ApplicationMenuGroup Style  -->
    <Style x:Key="{x:Type tools:ApplicationMenuGroup}" TargetType="{x:Type tools:ApplicationMenuGroup}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:ApplicationMenuGroup}">
                    <tools:LayoutPanel x:Name="PART_LayoutPanel" Width="{TemplateBinding ActualWidth}">
                        <StackPanel Margin="1,0,1,1" HorizontalAlignment="Stretch">
                            <Border
                                Name="PART_Header"
                                Height="21"
                                Margin="0,0,0,2"
                                Padding="7,0,5,0"
                                HorizontalAlignment="Stretch"
                                Background="{StaticResource ContentBackgroundAlt2}"
                                SnapsToDevicePixels="True">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="Bold"
                                    Foreground="{StaticResource ContentForeground}"
                                    Text="{TemplateBinding Header}" />
                            </Border>
                            <ItemsPresenter
                                x:Name="PART_Presenter"
                                Margin="0,0,0,1"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                        <Border
                            Width="24"
                            Height="{TemplateBinding ActualHeight}"
                            Margin="1,1,1,1"
                            HorizontalAlignment="Left"
                            Panel.ZIndex="-1"
                            Background="Transparent"
                            Visibility="{TemplateBinding IconBarEnabled,
                                                         Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </tools:LayoutPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasHeader" Value="False">
                            <Setter TargetName="PART_Header" Property="Height" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Ribbon Normal State Template  -->
    <ControlTemplate x:Key="SyncfusionRibbonControlTemplate" TargetType="{x:Type tools:Ribbon}">
        <AdornerDecorator Name="PART_AdornerDecorator"
                          Margin="0,-53,0,0"
                          Panel.ZIndex="100"
                          DockPanel.Dock="Top">
            <Grid ClipToBounds="True">
                <Grid.RowDefinitions>
                    <RowDefinition Name="QATAboveRow">
                        <RowDefinition.Style>
                            <Style>
                                <Setter Property="RowDefinition.Height" Value="53" />
                                <Style.Triggers>
                                    <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                        <Setter Property="RowDefinition.MinHeight" Value="73" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" Panel.ZIndex="200" x:Name="rootDockPanel" Background="{StaticResource ContentBackgroundAlt2}">
                    <tools:RibbonWindowPanel
                            x:Name="PART_RibbonWindowPanel"
                            MinHeight="53"
                            Panel.ZIndex="100"
                            DockPanel.Dock="Top">
                        <Border
                                x:Name="PART_TitleBorder"
                                Width="{TemplateBinding ActualWidth}"
                                Height="30"
                                Margin="0,0,0,-20"
                                Visibility="Collapsed" />
                        <ContentPresenter ContentSource="ApplicationMenu" Name="PART_ApplicationMenu" Content="{TemplateBinding ApplicationMenu}" />
                        <ContentPresenter Name="PART_BackstageButton" ContentTemplate="{StaticResource BackStageButtonTemplate}" Focusable="False" >
                            <ContentPresenter.Style>
                                <Style>
                                    <Setter Property="FrameworkElement.Height" Value="53" />
                                    <Style.Triggers>
                                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                            <Setter Property="FrameworkElement.MinHeight" Value="63" />
                                            <Setter Property="FrameworkElement.Margin" Value="0,10,0,0" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                        <ContentPresenter
								x:Name="quickAccessToolBar"
                                HorizontalAlignment="Center"
                                windows_shared:WindowChrome.IsHitTestVisibleInChrome="True"
                                >
                            <ContentPresenter.Style>
                                <Style>
                                    <Setter Property="FrameworkElement.Height" Value="28" />
                                    <Style.Triggers>
                                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                            <Setter Property="FrameworkElement.MinHeight" Value="40" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                    </tools:RibbonWindowPanel>
                    <Border
                            Width="5"
                            Height="1"
                            Margin="0,-14,0,0"
                            DockPanel.Dock="Left" />
                    <Border
                            Width="41"
                            Height="0"
                            Margin="0,-14,0,0"
                            Panel.ZIndex="11"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                            DockPanel.Dock="Left" />
                    <Border
                            Width="5"
                            Height="0.02"
                            Margin="0,-14,0,0"
                            Panel.ZIndex="12"
                            DockPanel.Dock="Right" />
                    <Border
                            Panel.ZIndex="12"
                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                            DockPanel.Dock="Right">
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Margin" Value="0,-24,0,1" />
                                <Setter Property="Border.Height" Value="23" />
                                <Style.Triggers>
                                    <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                        <Setter Property="Border.Margin" Value="0,-39,0,1" />
                                        <Setter Property="Border.MinHeight" Value="40" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ContentPresenter tools:SimplifiedLayoutSettings.LayoutMode="Normal" ContentSource="TabPanelItem" />
                    </Border>

                    <Border
                            x:Name="ribbonTabBorder"
                            Panel.ZIndex="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            DockPanel.Dock="Bottom">
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=BackStageButton.Visibility}" Value="Visible">
                                        <Setter Property="Border.Margin" Value="17,-25,0,2" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=BackStageButton.Visibility}" Value="Collapsed">
                                        <Setter Property="Border.Margin" Value="-46,-25,0,2" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ItemsPresenter Focusable="False" KeyboardNavigation.IsTabStop="False" />
                    </Border>
                </DockPanel>
                <Border Grid.Row="3" x:Name="backstageTopBorder"  BorderBrush="{Binding Path=BackStageColor,RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}}">
                    <ContentPresenter x:Name="ribbonBackStageContent" Content="{TemplateBinding BackStage}"  Visibility="Collapsed">
                        <ContentPresenter.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                </Border>
                <Border
                        x:Name="ribBorder"
                        Grid.Row="1"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,1,0,1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <tools:RibbonTabItemsControl
                                DisplayMemberPath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.DisplayMemberPath}"
                                Focusable="False" x:Name="ribbonTabItemsControl"
                                ItemContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemContainerStyle}"
                                ItemContainerStyleSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemContainerStyleSelector}"
                                ItemStringFormat="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemStringFormat}"
                                ItemTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemTemplate}"
                                ItemTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemTemplateSelector}"
                                ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.Items}">
                            <tools:RibbonTabItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <tools:RibbonLayoutPanel />
                                </ItemsPanelTemplate>
                            </tools:RibbonTabItemsControl.ItemsPanel>
                        </tools:RibbonTabItemsControl>
                        <Grid Grid.Column="1" HorizontalAlignment="Right" Background="{StaticResource ContentBackgroundAlt2}">
                            <tools:RibbonToggleButton
                                    x:Name="ToggleButton"
                                    Width="29"
                                    Height="{StaticResource MaterialDarkCustom.MinHeight}"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Panel.ZIndex="12"
                                    tools:Ribbon.IsQATItem="False"
                                    Style="{StaticResource SyncfusionMinimizeRibbonToggleButtonStyle}"
                                    Visibility="{TemplateBinding MinimizeButtonVisibility}" />
                        </Grid>
                    </Grid>
                </Border>
                <Border
                                            Name="PART_QAT" 
                                            Grid.Row="2"
                                            Margin="0,1,0,0"
                                            Background="{StaticResource ContentBackgroundAlt2}">
                    <ContentPresenter x:Name="QATBelow"
                                                HorizontalAlignment="Left"
                                                
                                                DockPanel.Dock="Top" />
                </Border>
            </Grid>
        </AdornerDecorator>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ribbonBackStageContent" Property="Visibility" Value="Visible">
                <Setter TargetName="backstageTopBorder" Property="BorderThickness" Value="0,1,0,0"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter TargetName="ribBorder" Property="Height" Value="43"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal">
                <Setter TargetName="ribBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                <Setter TargetName="PART_AdornerDecorator" Property="Margin" Value="0,-53,0,0"/>
            </Trigger>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Default">
                <Setter TargetName="PART_RibbonWindowPanel" Property="MinHeight" Value="53" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Normal" />
                    <Condition Property="IsQATBelow" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="QATBelow" Property="Content" Value="{Binding Path=QuickAccessToolBar, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Normal" />
                    <Condition Property="IsQATBelow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="quickAccessToolBar" Property="Content" Value="{Binding Path=QuickAccessToolBar, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </MultiTrigger>
            <Trigger Property="RibbonState" Value="Adorner">
                <Setter TargetName="PART_QAT" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                <Setter TargetName="PART_AdornerDecorator" Property="Margin" Value="0" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Hide" />
                    <Condition Property="IsQATBelow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_QAT" Property="Height" Value="0" />
                <Setter TargetName="ribBorder" Property="Height" Value="0" />
                <Setter TargetName="ribBorder" Property="MinHeight" Value="0" />
                <Setter TargetName="quickAccessToolBar" Property="Content" Value="{Binding Path=QuickAccessToolBar, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Hide" />
                    <Condition Property="IsQATBelow" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="QATBelow" Property="Content" Value="{Binding Path=QuickAccessToolBar, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Setter TargetName="ribBorder" Property="Height" Value="0" />
                <Setter TargetName="ribBorder" Property="MinHeight" Value="0" />
            </MultiTrigger>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter TargetName="ribbonTabBorder" Property="Margin" Value="17,-27,0,2" />
                <Setter TargetName="ribBorder" Property="Margin" Value="0,-3,0,0" />
                <Setter TargetName="PART_RibbonWindowPanel" Property="MinHeight" Value="73" />
                <Setter TargetName="PART_AdornerDecorator" Property="Margin" Value="0,-73,0,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal" />
                    <Condition Property="RibbonState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ribBorder" Property="MinHeight" Value="145" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Ribbon Adorner State Template  -->
    <ControlTemplate x:Key="SyncfusionRibbonAdornerControlTemplate" TargetType="{x:Type tools:Ribbon}">
        <AdornerDecorator Name="PART_AdornerDecorator"
                          Margin="0,-53,0,0"
                          Panel.ZIndex="100"
                          DockPanel.Dock="Top">
            <Border>
                <Grid x:Name="LayoutGrid" ClipToBounds="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Name="QATAboveRow">
                            <RowDefinition.Style>
                                <Style>
                                    <Setter Property="RowDefinition.Height" Value="53" />
                                    <Style.Triggers>
                                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                            <Setter Property="RowDefinition.MinHeight" Value="73" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsQATBelow, RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}}" Value="True">
                                            <Setter Property="RowDefinition.Height" Value="53" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RowDefinition.Style>
                        </RowDefinition>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <DockPanel
                                            x:Name="rootDockPanel"
                                            Grid.Row="0"
                                            Panel.ZIndex="200" Background="{StaticResource ContentBackgroundAlt2}">
                        <tools:RibbonWindowPanel
                                                x:Name="PART_RibbonWindowPanel"
                                                MinHeight="53"
                                                Panel.ZIndex="100"
                                                DockPanel.Dock="Top">
                            <Border
                                                    x:Name="PART_TitleBorder"
                                                    Width="{TemplateBinding ActualWidth}"
                                                    Height="30"
                                                    Margin="0,0,0,-20"
                                                    Visibility="Collapsed" />
                            <ContentPresenter ContentSource="ApplicationMenu" Name="PART_ApplicationMenu" Content="{TemplateBinding ApplicationMenu}" />
                            <ContentPresenter Name="PART_BackstageButton" ContentTemplate="{StaticResource BackStageButtonTemplate}" >
                                <ContentPresenter.Style>
                                    <Style>
                                        <Setter Property="FrameworkElement.Height" Value="53" />
                                        <Style.Triggers>
                                            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                <Setter Property="FrameworkElement.MinHeight" Value="63" />
                                                <Setter Property="FrameworkElement.Margin" Value="0,12,0,0" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>
                            <ContentPresenter
													x:Name="quickAccessToolBar"
                                                    HorizontalAlignment="Center"
                                                    windows_shared:WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Content="{TemplateBinding QuickAccessToolBar}"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsQATBelow, Converter={StaticResource BoolInvertConverter}}">
                                <ContentPresenter.Style>
                                    <Style>
                                        <Setter Property="FrameworkElement.Height" Value="28" />
                                        <Style.Triggers>
                                            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                <Setter Property="FrameworkElement.MinHeight" Value="36" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>
                        </tools:RibbonWindowPanel>
                        <Border
                                                Width="5"
                                                Height="0"
                                                Margin="0,-14,0,0"
                                                DockPanel.Dock="Left" />
                        <Border
                                                Width="41"
                                                Height="0"
                                                Margin="0,-14,0,0"
                                                Panel.ZIndex="11"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="0,0,0,1"
                                                DockPanel.Dock="Left" />
                        <Border
                                                Width="5"
                                                Height="0.02"
                                                Margin="0,-14,0,0"
                                                Panel.ZIndex="12"
                                                DockPanel.Dock="Right" />
                        <Border
                                                Panel.ZIndex="12"
                                                Background="Transparent"
                                                DockPanel.Dock="Right">
                            <Border.Style>
                                <Style>
                                    <Setter Property="Border.Margin" Value="0,-24,0,1" />
                                    <Setter Property="Border.Height" Value="23" />
                                </Style>
                            </Border.Style>
                            <ContentPresenter tools:SimplifiedLayoutSettings.LayoutMode="Normal"  ContentSource="TabPanelItem" />
                        </Border>
                        <Border
                                                x:Name="ribbonTabBorder"
                                                Panel.ZIndex="10"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                DockPanel.Dock="Bottom">
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=BackStageButton.Visibility}" Value="Visible">
                                            <Setter Property="Border.Margin" Value="17,-25,0,2" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=BackStageButton.Visibility}" Value="Collapsed">
                                            <Setter Property="Border.Margin" Value="-46,-25,0,2" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ItemsPresenter />
                        </Border>
                    </DockPanel>
                    <Popup
                                            x:Name="Part_AdornerPopup"
                                            AllowsTransparency="True"
                                            ClipToBounds="True"
                                            IsOpen="False"
                                            PlacementTarget="{Binding ElementName=rootDockPanel}"
                                            StaysOpen="False">
                        <Border x:Name="PopupOuterBorder" MinHeight="92" Margin="0,7,0,15">
                            <Border
                                                    x:Name="AdornerTabPanelBorder"
                                                    Margin="0,-2,0,0"
                                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                    Background="{StaticResource ContentBackgroundAlt2}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="0,1,0,1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <tools:RibbonTabItemsControl
                                                            DisplayMemberPath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.DisplayMemberPath}"
                                                            Focusable="False" x:Name="ribbonTabItemsControl"
                                                            ItemContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemContainerStyle}"
                                                            ItemContainerStyleSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemContainerStyleSelector}"
                                                            ItemStringFormat="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemStringFormat}"
                                                            ItemTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemTemplate}"
                                                            ItemTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.ItemTemplateSelector}"
                                                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedTabItem.Items}">

                                        <tools:RibbonTabItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <tools:RibbonLayoutPanel />
                                            </ItemsPanelTemplate>
                                        </tools:RibbonTabItemsControl.ItemsPanel>
                                    </tools:RibbonTabItemsControl>
                                    <Grid Grid.Column="1" HorizontalAlignment="Right">
                                        <tools:RibbonToggleButton
                                                                x:Name="ToggleButton"
                                                                Width="29"
                                                                Height="{StaticResource MaterialDarkCustom.MinHeight}"
                                                                HorizontalAlignment="Right"
                                                                VerticalAlignment="Bottom"
                                                                Panel.ZIndex="12"
                                                                tools:Ribbon.IsQATItem="False"
                                                                Style="{StaticResource SyncfusionMinimizeRibbonToggleButtonStyle}"
                                                                Visibility="{TemplateBinding MinimizeButtonVisibility}" />
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                    </Popup>
                    <Border Grid.Row="1" x:Name="backstageTopBorder"  BorderBrush="{Binding Path=BackStageColor,RelativeSource={RelativeSource AncestorType={x:Type tools:Ribbon}}}">
                        <ContentPresenter x:Name="ribbonBackStageContent" Content="{TemplateBinding BackStage}"  Visibility="Collapsed">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                </Grid>
            </Border>
        </AdornerDecorator>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ribbonBackStageContent" Property="Visibility" Value="Visible">
                <Setter TargetName="backstageTopBorder" Property="BorderThickness" Value="0,1,0,0"/>
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Simplified">
                <Setter TargetName="PopupOuterBorder" Property="Height" Value="43"/>
                <Setter TargetName="PopupOuterBorder" Property="Margin" Value="0"/>
                <Setter TargetName="PopupOuterBorder" Property="MinHeight" Value="43"/>
            </Trigger>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                <Setter TargetName="PART_AdornerDecorator" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter TargetName="ribbonTabBorder" Property="Margin" Value="17,-27,0,2" />
                <Setter TargetName="PART_RibbonWindowPanel" Property="MinHeight" Value="73" />
                <Setter TargetName="PART_AdornerDecorator" Property="Margin" Value="0,-73,0,0" />
            </Trigger>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Default">
                <Setter TargetName="PART_RibbonWindowPanel" Property="MinHeight" Value="53" />
            </Trigger>
            <Trigger Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal">
                <Setter TargetName="AdornerTabPanelBorder" Property="MinHeight" Value="97"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PopupOuterBorder" Property="MinHeight" Value="145" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ContextAdorner Style  -->
    <Style x:Key="SyncfusionTemplatedAdornerInternalControlStyle" TargetType="{x:Type shared:TemplatedAdornerInternalControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Path=ContextTabGroup.Visibility}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Converter={StaticResource colorToTransparentBrushConverter}, Path=ContextTabGroup.BackColor}" />
        <Setter Property="Height" Value="57" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Converter={StaticResource colorToBrushConverter}, Path=ContextTabGroup.BackColor}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Converter={StaticResource colorToTransparentBrushConverter}, Path=ContextTabGroup.BackColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:TemplatedAdornerInternalControl}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Margin="0,5,0,0"
                        BorderBrush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Converter={StaticResource colorToBrushConverter}, Path=ContextTabGroup.BackColor}"
                        BorderThickness="0,4,0,0"
                        IsHitTestVisible="False">
                        <Grid>
                            <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Converter={StaticResource colorToBrushConverter}, Path=ContextTabGroup.BackColor}" Opacity="0.10" />
                            <TextBlock
                                x:Name="PART_Label"
                                Margin="8,3,3,0"
                                HorizontalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}, Path=TabGroupLabelAlignment}"
                                FontSize="12"
                                FontWeight="thin"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:ContextAdorner}}, Path=ContextTabGroup.Label}"
                                TextAlignment="Center"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Normal" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Label" Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect
                                        GlowColor="#FFFFFFFF"
                                        GlowSize="10"
                                        Opacity="1" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RibbonState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}}" Value="Hide" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="0,0,0,-3" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RibbonState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:Ribbon}}}" Value="Adorner" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="0,0,0,-3" />
                        </MultiDataTrigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="75" />
                            <Setter Property="Margin" Value="0,-18,0,0" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RibbonAdorner Style-->

    <Style x:Key="SyncfusionScreenTipAdornerStyle" TargetType="{x:Type shared:TemplatedAdornerInternalControl}">
        <Setter Property="MinWidth" Value="15"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="Control.FontSize" Value="11.5"/>
        <Setter Property="Control.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.Foreground" Value="{StaticResource Black}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate >
                    <Border x:Name="PART_InnerBorder" CornerRadius="{StaticResource MaterialDarkCustom.CornerRadius2}" BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}" BorderBrush="#FF767676" Background="{StaticResource TooltipBackground}" >
                        <TextBlock Margin="2,0,2,0" 				
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Text ="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonAdorner}}, Path=Text}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionRibbonStyle" TargetType="{x:Type tools:Ribbon}">
        <Setter Property="BackStageColor" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Panel.ZIndex" Value="1000" />
        <Setter Property="TabGroupLabelAlignment" Value="Center" />
        <Setter Property="RibbonBarCollapseImage" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="ContextAdornerStyle" Value="{StaticResource SyncfusionTemplatedAdornerInternalControlStyle}" />
        <Setter Property="ScreenTipStyle" Value="{StaticResource SyncfusionScreenTipAdornerStyle}"/>
        <Setter Property="BackStageButton">
            <Setter.Value>
                <tools:BackStageButton windows_shared:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource SyncfusionNavigationBackStageButtonStyle}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <tools:TabPanel Name="TabPanel" SeparatorColor="{StaticResource BorderAlt.Color}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Style.Triggers>
            <Trigger Property="RibbonState" Value="Normal">
                <Setter Property="Template" Value="{StaticResource SyncfusionRibbonControlTemplate}" />
            </Trigger>
            <Trigger Property="RibbonState" Value="Adorner">
                <Setter Property="Template" Value="{StaticResource SyncfusionRibbonAdornerControlTemplate}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Normal" />
                    <Condition Property="IsQATBelow" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource SyncfusionRibbonControlTemplate}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Hide" />
                    <Condition Property="IsQATBelow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource SyncfusionRibbonControlTemplate}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Hide" />
                    <Condition Property="IsQATBelow" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource SyncfusionRibbonControlTemplate}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch"/>
                    <Condition Property="RibbonState" Value="Normal" />
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="175"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Normal" />
                    <Condition Property="IsQATBelow" Value="False" />
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="145" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Normal" />
                    <Condition Property="IsQATBelow" Value="True" />
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                    <Condition Property="tools:SimplifiedLayoutSettings.LayoutMode" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="170" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Hide" />
                    <Condition Property="IsQATBelow" Value="False" />
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonState" Value="Hide" />
                    <Condition Property="IsQATBelow" Value="True" />
                    <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="40" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonStyle}" TargetType="{x:Type tools:Ribbon}" />

    <!--  ScreenTip Style  -->
    <Style x:Key="SyncfusionScreenTipStyle" TargetType="{x:Type tools:ScreenTip}">
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBackground}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackground}" />
        <Setter Property="Foreground" Value="{StaticResource Black}" />
        <Setter Property="Padding" Value="1,1,3,1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:ScreenTip}">
                    <Border
                        MinHeight="20"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        Effect="{StaticResource Default.ShadowDepth3}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1.5*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Name="Desc"
                                Grid.Row="0"
                                Grid.ColumnSpan="2"
                                Margin="4,4,1,4"
                                FontFamily="Calibri"
                                FontSize="12"
                                FontWeight="Bold"
                                Text="{TemplateBinding Description}">
                                <TextBlock.Resources>
                                    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                                </TextBlock.Resources>
                            </TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <Border
                                    Name="Image"
                                    Margin="6"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding ImageSource,Converter={StaticResource EmptyObjectToObjectConverter},RelativeSource={RelativeSource TemplatedParent}}">
                                    <Image Source="{Binding Path=ImageSource, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                                <ContentPresenter
                                    Name="Text"
                                    Grid.Row="1"
                                    Margin="4,1,4,6"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter.Resources>
                                        <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </StackPanel>
                            <Border
                                Name="PART_Seperator"
                                Grid.Row="2"
                                Grid.ColumnSpan="2"
                                Height="1"
                                Margin="4,1,4,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Background="{StaticResource TooltipBackground}"
                                SnapsToDevicePixels="True" />
                            <Grid Grid.Row="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="HelpImage"
                                    Grid.Column="0"
                                    Margin="4,4,0,4"
                                    HorizontalAlignment="Left">
                                    <Image
                                        x:Name="helpImage"
                                        Width="16"
                                        Height="16"
                                        Source="{Binding Path=HelpIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                                <TextBlock
                                    Name="PART_HelpText"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="28,4,1,4"
                                    HorizontalAlignment="Left"
                                    FontFamily="Calibri"
                                    FontSize="12"
                                    FontWeight="Bold"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}"
                                    Text="{TemplateBinding HelpText}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="HelpIcon" Value="{x:Null}">
                            <Setter TargetName="helpImage" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/HelpSmall.png" />
                        </Trigger>
                        <Trigger Property="Description" Value="">
                            <Setter TargetName="Desc" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Text" Property="Margin" Value="4,1,4,1" />
                        </Trigger>
                        <Trigger Property="HelpText" Value="">

                            <Setter TargetName="HelpImage" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Seperator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_HelpText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionScreenTipStyle}" TargetType="{x:Type tools:ScreenTip}" />

    <DataTemplate x:Key="SimpleMenuButtonIconTemplate">
        <Grid>
            <Image RenderOptions.BitmapScalingMode="{Binding Path=(RenderOptions.BitmapScalingMode), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:SimpleMenuButton}}}"
                   Stretch="{Binding IconStretch, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:SimpleMenuButton}}}"                                        
                                       Source="{Binding Path=Tag, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="SyncfusionSimpleMenuButtonStyle" TargetType="{x:Type tools:SimpleMenuButton}">
        <Setter Property="FocusVisualStyle"  Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:SimpleMenuButton}">
                    <Border x:Name="PART_OutterBorder"			  
			            Margin="{TemplateBinding Padding}"
                        BorderThickness="{TemplateBinding BorderThickness}"
		                BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
		                Opacity="{TemplateBinding Opacity}"
		                IsEnabled="{TemplateBinding IsEnabled}">
                        <Grid>
                            <Border x:Name="PART_InnerBorder" 
                                MaxWidth="{TemplateBinding ActualWidth}">
                                <DockPanel HorizontalAlignment="Stretch" 
                                    Margin="1,3,3,1" 
                                    LastChildFill="True" >
                                    <ContentPresenter 
                                        Margin="5,0,5,3"
                                        Grid.Row="0"  
                                        Name="IconContent" 
                                        ContentTemplate="{TemplateBinding IconTemplate}" 
                                        Content="{Binding }" 
                                        Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                        Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"
							            MinHeight="16" MinWidth="16" />
                                    <StackPanel Orientation="Vertical" 
                                           Margin="0,0,0,2" 
                                           VerticalAlignment="Center" 
                                           DockPanel.Dock="Right">
                                        <TextBlock x:Name="PART_Label" 
                                           TextAlignment="Left"
							               VerticalAlignment="Center" 
                                           HorizontalAlignment="Left"
							               FontWeight="Bold"
							               Text="{TemplateBinding Label}"/>
                                        <tools:TwoLinesLayoutPanel HorizontalAlignment="Left">
                                            <TextBlock x:Name="PART_Description" 
                                                TextWrapping="Wrap" 
                                                Margin="0,0,10,0" 
                                                TextAlignment="Left"
						                        VerticalAlignment="Center" 
                                                HorizontalAlignment="Left"
						                        Text="{TemplateBinding Description}"/>
                                        </tools:TwoLinesLayoutPanel>
                                    </StackPanel>
                                </DockPanel>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IconTemplate" Value="{x:Null}">
                            <Setter TargetName="IconContent" Property="Tag" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource SimpleMenuButtonIconTemplate}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_OutterBorder"  Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_InnerBorder"  Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_InnerBorder"  Property="Background" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_OutterBorder"  Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_InnerBorder"  Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_InnerBorder"  Property="Background" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_Label" Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Description, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter TargetName="PART_Description" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Label" Property="FontWeight" Value="Normal"/>
                        </DataTrigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="MinHeight" TargetName="IconContent" Value="20"/>
                            <Setter Property="MinWidth" TargetName="IconContent" Value="20"/>
                        </Trigger>
                        <Trigger Property="tools:Ribbon.IsQATItem" Value="True">
                            <Setter Property="Height" TargetName="IconContent" Value="16"/>
                            <Setter Property="Width" TargetName="IconContent" Value="16"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionSimpleMenuButtonStyle}" TargetType="{x:Type tools:SimpleMenuButton}"/>

    <Style x:Key="SyncfusionSplitMenuButtonStyle" TargetType="{x:Type tools:SplitMenuButton}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle"  Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:SplitMenuButton}">
                    <Border
                        HorizontalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsEnabled="{TemplateBinding IsEnabled}"
                        Opacity="{TemplateBinding Opacity}">
                        <Grid HorizontalAlignment="Stretch">
                            <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">
                                <Border
                                    Name="PART_ToggleButton"
                                    Width="24"
                                    Height="24"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,1,1,1"
                                    DockPanel.Dock="Right">
                                    <Border x:Name="PART_TogleButtonInnerBorder" BorderThickness="1">
                                        <Path
                                            Margin="5,16,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            Fill="{TemplateBinding Foreground}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="-90" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </Border>
                                </Border>
                                <Border
                                    x:Name="PART_OutterBorder"
                                    HorizontalAlignment="Stretch"
                                    BorderThickness="1"
                                    DockPanel.Dock="Left">
                                    <Border
                                        x:Name="PART_InnerBorder"
                                        Background="Transparent"
                                        BorderThickness="1">
                                        <WrapPanel
                                            Margin="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal">
                                            <Image
                                                Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                                Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"
                                                MinWidth="16"
                                                MinHeight="16"
                                                Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                Stretch="{Binding Path=IconStretch, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <TextBlock
                                                Name="label"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{TemplateBinding Foreground}"
                                                Text="{TemplateBinding Label}"
                                                TextAlignment="Center"
                                                TextWrapping="Wrap" />
                                        </WrapPanel>
                                    </Border>
                                </Border>
                            </DockPanel>
                            <tools:CustomPopup
                                Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding Path=IsMenuOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Custom"
                                PlacementTarget="{Binding Path=PlacementBorder, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type tools:ApplicationMenu}}}"
                                PopupAnimation="Fade"
                                StaysOpen="True">
                                <Microsoft_Windows_Luna:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                    <Border
                                        Background="{StaticResource ContentBackgroundAlt2}"
                                        BorderBrush="{StaticResource ContentBackgroundAlt2}"
                                        BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                                        <ScrollViewer
                                            x:Name="PART_ScrollViwer"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                          TypeInTargetAssembly=FrameworkElement}}">
                                            <ItemsPresenter
                                                Margin="2,0,0,5"
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </ScrollViewer>
                                    </Border>
                                </Microsoft_Windows_Luna:SystemDropShadowChrome>
                            </tools:CustomPopup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,4,4" />
                        </Trigger>
                        <Trigger Property="IsMenuOpen" Value="True">
                            <Setter TargetName="PART_ToggleButton"  Property="Background" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_OutterBorder"  Property="Background" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ToggleButton"  Property="Background" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="PART_OutterBorder"  Property="Background" Value="{StaticResource SecondaryHoverBackground}"/>
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionSplitMenuButtonStyle}" TargetType="{x:Type tools:SplitMenuButton}" />

    <!--  End of the Ribbon resources  -->

    <!--  Start of the RibbonWindow resources  -->

    <Style x:Key="SyncfusionRibbonSystemWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Foreground" Value="{StaticResource IconColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">
                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            x:Name="Content"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            RecognizesAccessKey="False"
                            SnapsToDevicePixels="True" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionRibbonStatusBarStyle" TargetType="{x:Type tools:RibbonStatusBar}">
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="Height" Value="{StaticResource MaterialDarkCustom.MinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonStatusBar}">
                    <Border
                        Height="{TemplateBinding Height}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True"
                        TextElement.Foreground="{TemplateBinding Foreground}">

                        <StackPanel
                            Height="{TemplateBinding Height}"
                            MinHeight="{TemplateBinding MinHeight}"
                            VerticalAlignment="Center"
                            IsItemsHost="True"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonStatusBarStyle}" TargetType="{x:Type tools:RibbonStatusBar}" />

    <Style x:Key="SyncfusionCloseWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">
                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Path
                            x:Name="closepath"
                            Width="10"
                            Height="10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M5.70801 5.11182L10 9.40381L9.29199 10.1118L5 5.81982L0.708008 10.1118L0 9.40381L4.29199 5.11182L0 0.819824L0.708008 0.111816L5 4.40381L9.29199 0.111816L10 0.819824L5.70801 5.11182Z"
                            Fill="{StaticResource IconColor}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsActive}" Value="False">
                            <Setter TargetName="closepath" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ErrorBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ErrorBackground}" />
                            <Setter TargetName="closepath" Property="Fill" Value="{StaticResource White}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ErrorBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ErrorBackground}" />
                            <Setter TargetName="closepath" Property="Fill" Value="{StaticResource White}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionMinimizeWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">
                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Path
                            x:Name="minpath"
                            Width="10"
                            Height="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M10 0.11084V1.11182H0V0.11084H10Z"
                            Fill="{StaticResource IconColor}"
                            SnapsToDevicePixels="True"
                            Stretch="Fill"
                            Stroke="{StaticResource IconColor}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsActive}" Value="False">
                            <Setter TargetName="minpath" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                            <Setter TargetName="minpath" Property="Stroke" Value="{StaticResource IconDisabledColor}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="minpath" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="minpath" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="minpath" Property="Fill" Value="{StaticResource IconColor}" />
                            <Setter TargetName="minpath" Property="Stroke" Value="{StaticResource IconColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">
                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="12" Height="10">
                            <Border
                                x:Name="border1"
                                Width="8"
                                Height="6"
                                Background="Transparent"
                                BorderBrush="{StaticResource SecondaryBackground}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}">
                                <Border
                                    x:Name="innerborder"
                                    BorderBrush="{StaticResource SecondaryBackground}"
                                    BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness1}" />
                            </Border>
                            <Border
                                x:Name="topleft"
                                Width="3"
                                Height="3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                BorderBrush="{StaticResource SecondaryBackground}"
                                BorderThickness="1,1,0,0" />
                            <Border
                                x:Name="topright"
                                Width="3"
                                Height="3"
                                HorizontalAlignment="right"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                BorderBrush="{StaticResource SecondaryBackground}"
                                BorderThickness="0,1,1,0" />
                            <Border
                                x:Name="bottomright"
                                Width="3"
                                Height="3"
                                HorizontalAlignment="right"
                                VerticalAlignment="Bottom"
                                Background="Transparent"
                                BorderBrush="{StaticResource SecondaryBackground}"
                                BorderThickness="0,0,1,1" />
                            <Border
                                x:Name="bottomleft"
                                Width="3"
                                Height="3"
                                HorizontalAlignment="left"
                                VerticalAlignment="Bottom"
                                Background="Transparent"
                                BorderBrush="{StaticResource SecondaryBackground}"
                                BorderThickness="1,0,0,1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="border1" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="innerborder" Property="BorderBrush" Value="{StaticResource Office2013RibbonItemPressedBrush}" />
                            <Setter TargetName="topleft" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="topright" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="bottomright" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="bottomleft" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="border1" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="innerborder" Property="BorderBrush" Value="{StaticResource Office2013RibbonItemPressedBrush}" />
                            <Setter TargetName="topleft" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="topright" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="bottomright" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />
                            <Setter TargetName="bottomright" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=BackStageColor}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionHelpWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">
                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="12" Height="15">
                            <Path
                                x:Name="helppath"
                                Width="10"
                                Height="10"
                                VerticalAlignment="Center"
                                Data="M3.8489965,13.000001 L5.8489965,13.000001 5.8489965,15.000001 3.8489965,15.000001 z M4.8490004,0 C7.522005,0 9.6980003,2.0939989 9.6980003,4.6669989 9.6980003,5.3259993 9.5509972,5.9730005 9.2610191,6.5889997 L9.2610096,6.5900006 C8.8190082,7.5270004 8.0570063,8.309 7.1170043,8.7890005 6.3520025,9.1810007 5.8540014,9.9530001 5.8490013,10.756001 L5.8490013,11.000001 3.8489965,11.000001 3.8489965,10.750001 C3.8589965,9.2030001 4.7839989,7.7360005 6.2060021,7.0090003 6.7206906,6.745563 7.1422156,6.3318324 7.4021853,5.8361988 L7.4514154,5.737186 7.4510211,5.7370005 C7.6150226,5.3900003 7.6979999,5.0299997 7.6979999,4.6669989 7.6979999,3.1960001 6.4200148,1.999999 4.8490004,1.9999992 3.2780158,1.999999 2.0000004,3.1960001 2.0000004,4.6669989 L0,4.6669989 C-6.5440645E-08,2.0939989 2.1759952,0 4.8490004,0 z"
                                Fill="{StaticResource IconColor}"
                                FlowDirection="LeftToRight"
                                Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsActive}" Value="False">
                            <Setter TargetName="helppath" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="helppath" Property="Fill" Value="{StaticResource IconColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="helppath" Property="Fill" Value="{StaticResource IconColor}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionNormalWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">

                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid Width="10" Height="10">

                            <Path
                                x:Name="restorepath"
                                Width="10"
                                Height="10"
                                VerticalAlignment="Center"
                                Data="M10 7.99805H7.99805V10H0V2.00195H2.00195V0H10V7.99805ZM7.00195 2.99805H1.00098V8.99902H7.00195V2.99805ZM8.99902 1.00098H2.99805V2.00195H7.99805V7.00195H8.99902V1.00098Z"
                                Fill="{StaticResource IconColor}"
                                FlowDirection="LeftToRight"
                                Stretch="Fill" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsActive}" Value="False">
                            <Setter TargetName="restorepath" Property="Fill" Value="{StaticResource IconDisabledColor}" />

                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="restorepath" Property="Fill" Value="{StaticResource IconColor}" />

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="restorepath" Property="Fill" Value="{StaticResource IconColor}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SyncfusionMaximizeWindowTitleBarButtonStyle" TargetType="{x:Type tools:WindowTitleBarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:WindowTitleBarButton}">

                    <Border
                        x:Name="PART_Border"
                        Panel.ZIndex="100"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="12" Height="15">
                            <Path
                                x:Name="maxpath"
                                Width="10"
                                Height="10"
                                VerticalAlignment="Center"
                                Data="M10 0.111816V10.1118H0V0.111816H10ZM8.99902 1.11279H1.00098V9.11084H8.99902V1.11279Z"
                                Fill="{StaticResource IconColor}"
                                FlowDirection="LeftToRight"
                                Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsActive}" Value="False">
                            <Setter TargetName="maxpath" Property="Fill" Value="{StaticResource IconDisabledColor}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondaryHoverBackground}" />
                            <Setter TargetName="maxpath" Property="Fill" Value="{StaticResource IconColor}" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Property="Background" Value="Transparent" />
                            <Setter TargetName="maxpath" Property="Fill" Value="{StaticResource IconDisabledColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource SecondarySelectionBackground}" />
                            <Setter TargetName="maxpath" Property="Fill" Value="{StaticResource IconColor}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TitleBar Style  -->
    <Style x:Key="SyncfusionTitleBarStyle" TargetType="{x:Type tools:TitleBar}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.TitleTextStyle}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightMedium}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:TitleBar}">
                    <Border
                        x:Name="TitleBorder"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Right">
                                    <Image
                                        Grid.Column="1"
                                        Width="500"
                                        HorizontalAlignment="Right"
                                        Opacity="0.2"
                                        Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:RibbonWindow}}, Path=TitleBarPatternImage}"
                                        Stretch="fill" />
                                </Grid>
                            </Border>
                            <Grid Name="GlassActive" Height="{TemplateBinding Height}" MinHeight="{TemplateBinding MinHeight}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="{Binding Path=QATColumnWidth, Converter={StaticResource DoubleToGridLengthConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="{Binding Path=SysButtonsColumnWidth, Converter={StaticResource DoubleToGridLengthConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="TitleGrid" Grid.Column="2" Margin="10,0,10,10">
                                    <TextBlock
                                        Name="PART_Title"
                                        Grid.Column="2"
                                        MaxWidth="{TemplateBinding TitleMaxWidth}"
                                        Margin="0,7,0,0"
                                        HorizontalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=TitleTextAlignment}"
                                        VerticalAlignment="Top"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{StaticResource ContentForeground}"
                                        Text="{TemplateBinding Title}" />
                                </Grid>
                                <Image
                                    x:Name="Part_SysIcon"
                                    Width="16"
                                    Height="16"
                                    Margin="8,6,-9,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    windows_shared:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=Office2010Icon}"
                                    Stretch="Fill" />
                                <ItemsControl x:Name="PART_HeaderItems" 
                                              MaxHeight="25" 
                                              Grid.Column="3" 
                                              VerticalAlignment="Top"
                                              windows_shared:WindowChrome.IsHitTestVisibleInChrome="True"
                                              ItemTemplate="{Binding HeaderItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}}" 
                                              ItemsSource="{Binding HeaderItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}}" 
                                              ItemTemplateSelector="{Binding HeaderItemTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel 
                                                Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <StackPanel
                                    x:Name="stack"
                                    Grid.Column="4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Orientation="Horizontal">
                                    <tools:WindowTitleBarButton
                                        x:Name="HelpButton"
                                        Width="32"
                                        Height="24"
                                        Style="{StaticResource SyncfusionHelpWindowTitleBarButtonStyle}"
                                        Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ShowHelpButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    </tools:WindowTitleBarButton>
                                    <tools:WindowTitleBarButton
                                        x:Name="MinButton"
                                        Width="32"
                                        Height="24"
                                        Style="{StaticResource SyncfusionMinimizeWindowTitleBarButtonStyle}"
                                        ToolTip="{tools:ToolsLocalizationResourceExtension ResourceName=MinimizeTooltip}">
                                    </tools:WindowTitleBarButton>
                                    <tools:WindowTitleBarButton
                                        x:Name="MaxButton"
                                        Width="32"
                                        Height="24"
                                        Style="{StaticResource SyncfusionMaximizeWindowTitleBarButtonStyle}"
                                        ToolTip="{tools:ToolsLocalizationResourceExtension ResourceName=MaximizeTooltip}"
                                        Visibility="Collapsed">
                                    </tools:WindowTitleBarButton>
                                    <tools:WindowTitleBarButton
                                        x:Name="NormalButton"
                                        Width="32"
                                        Height="24"
                                        Style="{StaticResource SyncfusionNormalWindowTitleBarButtonStyle}"
                                        ToolTip="{tools:ToolsLocalizationResourceExtension ResourceName=RestoreTooltip}">
                                    </tools:WindowTitleBarButton>
                                    <tools:WindowTitleBarButton
                                        x:Name="CloseButton"
                                        Width="32"
                                        Height="24"
                                        Command="Close"
                                        Style="{StaticResource SyncfusionCloseWindowTitleBarButtonStyle}"
                                        ToolTip="{tools:ToolsLocalizationResourceExtension ResourceName=CloseTooltip}">
                                    </tools:WindowTitleBarButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="TitleBorder" Property="Background" Value="{StaticResource ContentBackgroundAlt}" />

                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=Office2010Icon}" Value="{x:Null}">
                            <Setter TargetName="Part_SysIcon" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsActive}" Value="False">
                            <Setter TargetName="PART_Title" Property="Foreground" Value="{StaticResource ContentForeground}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=TitleTextAlignment}" Value="Left">
                            <Setter TargetName="PART_Title" Property="Padding" Value="8,0,0,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=HeaderItemsSource}" Value="{x:Null}">
                            <Setter TargetName="PART_HeaderItems" Property="ItemsControl.ItemsSource" Value="{Binding HeaderItems, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Maximized" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Part_SysIcon" Property="Margin" Value="5,6,-5,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Maximized" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Part_SysIcon" Property="Margin" Value="5,8,-5,0" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Normal">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="NormalButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Maximized">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NormalButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Minimized">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NormalButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ResizeMode}" Value="CanMinimize">
                            <Setter TargetName="MaxButton" Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Normal" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Title" Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect
                                        GlowColor="#FFFFFFFF"
                                        GlowSize="14"
                                        Opacity="1" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowStyle}" Value="ToolWindow" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MinButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NormalButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=MaximizedMode}" Value="KioskStyle" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Maximized" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowStyle}" Value="None" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MinButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NormalButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowState}" Value="Maximized" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowStyle}" Value="None" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="GlassActive" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter TargetName="Part_SysIcon" Property="Margin" Value="8,18,-9,0" />
                            <Setter Property="MinHeight" Value="73"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="False">
                <Setter Property="SysButtonsColumnWidth" Value="130" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ShowHelpButton}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="130" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ResizeMode}" Value="NoResize">
                <Setter Property="SysButtonsColumnWidth" Value="34" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowStyle}" Value="ToolWindow" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="34" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ResizeMode}" Value="CanResize" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="130" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ResizeMode}" Value="CanResizeWithGrip" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="130" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=ResizeMode}" Value="CanMinimize" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="130" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowStyle}" Value="ToolWindow" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="30" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=IsGlassActive}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools:RibbonWindow}}, Path=WindowStyle}" Value="None" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SysButtonsColumnWidth" Value="0" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--  RibbonWindow Style  -->
    <Style x:Key="SyncfusionRibbonWindowStyle" TargetType="{x:Type tools:RibbonWindow}">
        <Setter Property="RibbonStatusBarStyle" Value="{StaticResource SyncfusionRibbonStatusBarStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="150" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="ShowHelpButton" Value="True" />
        <Setter Property="Background" Value="{StaticResource ContentBackground}" />
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness1}" />
        <Setter Property="TitleTextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonWindow}">

                    <AdornerDecorator x:Name="PART_Adorner">

                        <Grid>
                            <Grid.LayoutTransform>
                                <ScaleTransform x:Name="ScaleTransform" CenterX="0" CenterY="0" />
                            </Grid.LayoutTransform>
                            <Border
                                Name="PART_MainBorder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Border x:Name="PART_Border">

                                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <tools:TitleBar
                                            x:Name="PART_TitleBar"
                                            Title="{TemplateBinding Title}"
                                            Height="52"
                                            Padding="2,0,0,0"
                                            DockPanel.Dock="Top"
                                            Style="{StaticResource SyncfusionTitleBarStyle}" />
                                        <Grid>
                                            <DockPanel Background="{TemplateBinding Background}">
                                                <ContentPresenter Content="{TemplateBinding StatusBar}" DockPanel.Dock="Bottom" />
                                                <Grid DockPanel.Dock="Bottom">
                                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                                    <ContentControl
                                                        x:Name="BackStageContent"
                                                        Visibility="Collapsed">
                                                        <ContentControl.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </ContentControl.RenderTransform>
                                                    </ContentControl>
                                                </Grid>
                                            </DockPanel>
                                            <Label
                                                x:Name="PART_ResizeGrip"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"
                                                Cursor="SizeNWSE"
                                                IsTabStop="False"
                                                Visibility="Collapsed">
                                                <Grid Background="{TemplateBinding BackStageColor}" SnapsToDevicePixels="True">
                                                    <Path Data="M 9,1 L 11,1 L 11,3 L 9,3 Z M 5,5 L 7,5 L 7,7 L 5,7 Z M 9,5 L 11,5 L 11,7 L 9,7 Z M 1,9 L 3,9 L 3,11 L 1,11 Z M 5,9 L 7,9 L 7,11 L 5,11 Z M 9,9 L 11,9 L 11,11 L 9,11 Z" Fill="{StaticResource BorderAlt}" />
                                                    <Path Data="M 8,0 L 10,0 L 10,2 L 8,2 Z M 4,4 L 6,4 L 6,6 L 4,6 Z M 8,4 L 10,4 L 10,6 L 8,6 Z M 0,8 L 2,8 L 2,10 L 0,10 Z M 4,8 L 6,8 L 6,10 L 4,10 Z M 8,8 L 10,8 L 10,10 L 8,10 Z" Fill="{StaticResource BorderAlt}" />
                                                </Grid>
                                            </Label>
                                        </Grid>
                                    </DockPanel>
                                </Border>
                            </Border>
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MaximizedMode" Value="KioskStyle" />
                                <Condition Property="WindowState" Value="Maximized" />
                                <Condition Property="WindowStyle" Value="None" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_TitleBar" Property="Visibility" Value="Collapsed" />
                            <Setter Property="windows_shared:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        </MultiTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_Border" Property="Margin" Value="{Binding Source={x:Static SystemParameters.ResizeFrameVerticalBorderWidth}, Converter={StaticResource borderThicknessConverter}, ConverterParameter={x:Static SystemParameters.ResizeFrameHorizontalBorderHeight}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized" />
                                <Condition Property="WindowStyle" Value="None" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Border" Property="Margin" Value="0,0,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="NoResize" />
                                <Condition Property="WindowState" Value="Maximized" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Border" Property="Margin" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type shared:TemplatedAdornerInternalControl}">
                            <Setter Property="Height" Value="0" />
                            <Setter Property="Width" Value="0" />
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionRibbonWindowStyle}" TargetType="{x:Type tools:RibbonWindow}" />
    <!--  End of the RibbonWindow resources  -->
    
    <!--  Start of the RibbonBackstage resources  -->
    
    <!--  Backstageseparator style  -->
    <Style x:Key="SyncfusionBackStageSeparatorStyle" TargetType="{x:Type tools:BackStageSeparator}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:BackStageSeparator}">
                    <Grid MinHeight="24">
                        <Border
                            Height="1"
                            Margin="21,0"
                            Background="{StaticResource DisabledForeground}"
                            SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionBackStageSeparatorStyle}" TargetType="{x:Type tools:BackStageSeparator}" />
    
    <!--  BackStage TabItem Style  -->
    <Style x:Key="SyncfusionBackstageTabItemStyle" TargetType="{x:Type tools:BackstageTabItem}">
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="MinHeight" Value="38" />
        <Setter Property="MinWidth" Value="125" />
        <Setter Property="Margin" Value="0,2,0,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:BackstageTabItem}">
                    <Grid x:Name="layoutRoot" Background="Transparent">

                        <Border
                            x:Name="hoverBorder"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Margin="0,0,1,0"
                            Background="{StaticResource ContentBackgroundAlt2}"
                            BorderBrush="{StaticResource BorderAlt}"
                            BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="controlLabel"
                            Margin="19,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            TextElement.FontFamily="{TemplateBinding FontFamily}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hoverBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="hoverBorder" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="hoverBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundHover}" />
                            <Setter TargetName="controlLabel" Property="TextElement.Foreground" Value="{StaticResource ContentForeground}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="hoverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="controlLabel" Property="Opacity" Value="0.5" />
                            <Setter TargetName="hoverBorder" Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
                            <Setter TargetName="hoverBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundAlt2}" />
                            <Setter TargetName="controlLabel" Property="TextElement.Foreground" Value="{StaticResource SecondaryForegroundDisabled}" />
                        </Trigger>

                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="hoverBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="hoverBorder" Property="Background" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="hoverBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundSelection}" />
                            <Setter TargetName="controlLabel" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Backstage}}, Path=SelectedTabItemForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionBackstageTabItemStyle}" TargetType="{x:Type tools:BackstageTabItem}" />

    <!--  BackStage CommandButton Style  -->
    <Style x:Key="SyncfusionBackStageCommandButtonStyle" TargetType="{x:Type tools:BackStageCommandButton}">
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="SizeForm" Value="Small" />
        <Style.Triggers>
            <Trigger Property="SizeForm" Value="Small">
                <Setter Property="Height" Value="38" />
                <Setter Property="Margin" Value="0,2,0,2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:BackStageCommandButton}">
                            <Grid Background="Transparent">
                                <Border
                                    x:Name="border"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="{StaticResource ContentBackgroundAlt2}"
                                    BorderBrush="{StaticResource BorderAlt}"
                                    Visibility="Collapsed" />
                                <StackPanel
                                    Margin="16,0,15,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <ContentPresenter 
                                    ContentTemplateSelector="{TemplateBinding IconTemplateSelector}"  
                                    Name="IconContent" HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                         ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>
                                    <tools:RibbonAutomatableTextBlock
                                        x:Name="controlLabel"
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Text="{TemplateBinding Header}"
                                        Foreground="{TemplateBinding Foreground}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="NoWrap" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Icon" Value="{x:Null}"/>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="controlLabel" Property="Margin" Value="3,0,0,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemIconTemplate}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsEnabled" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="border" Property="Visibility" Value="Visible" />
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="IconContent" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="border" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ContentBackgroundHover}" />
                                    <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
                                    <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="controlLabel" Property="TextElement.Foreground" Value="{StaticResource SecondaryForegroundDisabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="SizeForm" Value="ExtraSmall">
                <Setter Property="Padding" Value="3" />
                <Setter Property="MinHeight" Value="{StaticResource MaterialDarkCustom.MinHeight}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools:BackStageCommandButton}">
                            <Border
                                Name="OuterBorder"
                                MinHeight="{TemplateBinding MinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                Opacity="{TemplateBinding Opacity}">
                                <ContentPresenter 
                                    ContentTemplateSelector="{TemplateBinding IconTemplateSelector}"  
                                    Name="IconContent" HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                     ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding }" Height="16" Width="16"/>

                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                                        <Condition Property="IconType" Value="Icon"/>
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IconContent" Property="Tag" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="ContentTemplate" TargetName="IconContent" Value="{StaticResource RibbonItemIconTemplate}"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">

                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ContentBackgroundHover}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundHover}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="IconContent" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
                                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ContentBackgroundAlt2}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionBackStageCommandButtonStyle}" TargetType="{x:Type tools:BackStageCommandButton}" />

    <Style x:Key="SyncfusionBackStageRibbonButtonStyle" TargetType="{x:Type tools:RibbonButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:RibbonButton}">
                    <Grid>
                        <Ellipse
                            x:Name="ellipse1"
                            Width="24"
                            Height="24"
                            Fill="Transparent"
                            Stroke="{StaticResource ContentForeground}"
                            StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness2}" />
                        <Path
                            x:Name="path1"
                            Width="15"
                            Height="12"
                            Data="F1 M 536.526,366.592L 528.898,358.964L 536.526,351.335L 540.988,351.327L 535.016,357.3L 553.101,357.3L 553.101,360.588L 534.974,360.588L 540.979,366.592L 536.526,366.592 Z "
                            Fill="{StaticResource ContentForeground}"
                            Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="path1" Property="Fill" Value="{StaticResource ContentForeground}" />
                            <Setter TargetName="ellipse1" Property="Stroke" Value="{StaticResource ContentForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FlatKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SyncfusionRibbonScrollButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource ContentForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"                             
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            >
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ContentBackgroundAlt2}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ContentBackgroundAlt2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  BackStage Style  -->
    <Style x:Key="SyncfusionBackstageStyle" TargetType="{x:Type tools:Backstage}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt2}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="SelectedTabItemForeground" Value="{StaticResource ContentForeground}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <tools:BackStageItemsPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools:Backstage}">
                    <ControlTemplate.Resources />
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="125"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="titleBarGrid" Margin="0,-73,0,0" Width="{Binding ElementName=BackStagePanelGrid, Path=ActualWidth}" HorizontalAlignment="Left" Background="{StaticResource ContentBackgroundAlt2}"/>
                        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" x:Name="BackStageScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="0,-20,0,0">
                            <Grid x:Name="BackStageGrid" Background="Transparent" MinWidth="300">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="125" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!--  Column 2  -->
                                <Grid
                            Grid.Column="1"
                            Height="Auto"
                            Margin="-1,0,0,0">
                                    <Border
                                x:Name="BackStageCornerImageBorder"
                                Width="343"
                                Height="181"
                                Margin="-100,0,0,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource ContentBackgroundAlt2}"
                                BorderThickness="{StaticResource MaterialDarkCustom.BorderThickness}"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed">
                                        <Image
                                    x:Name="image"
                                    Width="343"
                                    Height="181"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    FlowDirection="{Binding Path=FlowDirection, RelativeSource={RelativeSource TemplatedParent}}"
                                    RenderTransformOrigin="0.5,0.5"
                                    SnapsToDevicePixels="True"
                                    Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/BackstageCorner.png"
                                    Stretch="None">
                                            <Image.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Image.RenderTransform>
                                        </Image>
                                    </Border>
                                    <Border Background="{StaticResource ContentBackground}">
                                        <ContentPresenter
                                    Grid.Column="1"
                                    Height="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    ContentSource="SelectedTabContent"
                                    ContentTemplate="{TemplateBinding ItemTemplate}"
                                    TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type tools:Backstage}}, Path=Foreground}" />
                                    </Border>
                                </Grid>

                                <!--  Column 1  -->
                                <Grid
                            x:Name="BackStagePanelGrid"
                            Margin="0,-25,0,0"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource ContentBackgroundAlt2}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="73" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <tools:RibbonButton
                                    x:Name="BackstageBackButton"
                                    Width="24"
                                    Height="24"
                                    Margin="19,0,0,0"
                                    HorizontalAlignment="Left"
                                    windows_shared:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Style="{StaticResource SyncfusionBackStageRibbonButtonStyle}" />
                                    </Grid>
                                    <ItemsPresenter Grid.Row="1" />
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PlacementType" Value="BelowTab">
                            <Setter TargetName="titleBarGrid" Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionBackstageStyle}" TargetType="{x:Type tools:Backstage}" />

    <!--  End of the RibbonBackstage resources  -->

</ResourceDictionary>
