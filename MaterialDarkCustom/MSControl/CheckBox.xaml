<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
                    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="MaterialDarkCustom"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="MaterialDarkCustom"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="CheckBoxOptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="17,0,0,0" 
                               Stroke="{StaticResource Border}" 
                               StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}" 
                               StrokeDashArray="{StaticResource MaterialDarkCustom.StrokeDashArray}"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="{StaticResource MaterialDarkCustom.FocusMargin}" 
                               Stroke="{StaticResource Border}" 
                               StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness1}" 
                               StrokeDashArray="{StaticResource MaterialDarkCustom.StrokeDashArray}"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WPFCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
        <Setter Property="BorderThickness" Value="{StaticResource MaterialDarkCustom.BorderThickness2}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}"/>
        <Setter Property="FontFamily" Value="{StaticResource MaterialDarkCustom.ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource MaterialDarkCustom.BodyTextStyle}"/>
        <Setter Property="FontWeight" Value="{StaticResource MaterialDarkCustom.FontWeightNormal}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" 
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Margin="1"  
                                Width="14"
                                Height="14"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                            CornerRadius="{StaticResource MaterialDarkCustom.ThemeCornerRadiusVariant1}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      StrokeThickness="{StaticResource MaterialDarkCustom.StrokeThickness2}"
                                      Fill="{StaticResource IconColor}" 
                                      Margin="1" 
                                      Opacity="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stretch="None">
                                    <Path.Data>
                                        <PathGeometry>F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z</PathGeometry>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="indeterminateMark" 
                                      Data="M0,0 L7.0000002,0 7.0000002,1 0,1 z"
                                      Fill="{StaticResource IconColor}"
                                      Margin="2"
                                      Height="2"
                                      Stretch="Fill"
                                      Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="1" 
                                          Focusable="False"  
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{x:Null}"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="FlowDirection" TargetName="optionMark" Value="LeftToRight"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxOptionMarkFocusVisual}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource PrimaryForeground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource ContentBackground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource ContentBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderAlt2}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource ContentBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderAlt2}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource PrimaryBackground}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource ContentBackground}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource ContentBackground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource ContentBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderAlt2}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ContentForeground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderDark}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource BorderDark}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForeground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource BorderDark}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderDark}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource White}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForeground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderDark}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForeground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource WPFCheckBoxStyle}" TargetType="{x:Type CheckBox}"/>
</ResourceDictionary>
