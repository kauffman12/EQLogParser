<UserControl x:Class="EQLogParser.TriggersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:local="clr-namespace:EQLogParser"
             Initialized="TriggersViewOnInitialized"
             Loaded="ContentLoaded"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="{DynamicResource EQGridTitleHeight}"></RowDefinition>
      <RowDefinition Height="300*"></RowDefinition>
    </Grid.RowDefinitions>
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
      <CheckBox x:Name="basicCheckBox" Template="{StaticResource CustomCheckBoxTemplate}" Margin="6,0,-8,2" FontWeight="Normal" Unchecked="BasicChecked" Checked="BasicChecked" />
      <Label x:Name="titleLabel" Margin="4,0,0,2" VerticalContentAlignment="Center" Padding="0" Content="Check to Activate Triggers" Style="{DynamicResource EQTitleStyle}" Foreground="{DynamicResource EQStopForegroundBrush}"/>
      <fa:ImageAwesome x:Name="stopBtn" Visibility="Collapsed" MouseLeftButtonDown="StopBtnClick"  Icon="Regular_StopCircle" Cursor="Hand" Height="16" Width="16" Margin="8,0,0,1" HorizontalAlignment="Center" Foreground="{DynamicResource EQStopForegroundBrush}" ToolTip="Stop Everything. Removes all timers, speech, and overlays. Works the same as {EQLP:STOP}">
        <fa:ImageAwesome.LayoutTransform>
          <ScaleTransform ScaleX="{DynamicResource EQCheckBoxScale}" ScaleY="{DynamicResource EQCheckBoxScale}"/>
        </fa:ImageAwesome.LayoutTransform>
      </fa:ImageAwesome>
      <Label x:Name="triggerStatus" Margin="40,0,0,2" Padding="0" Visibility="Collapsed" VerticalAlignment="Center" Content="Cache Update Pending..." Style="{DynamicResource EQStatusStyle}" />
    </StackPanel>
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
      <Grid Margin="0,0,12,8" PreviewMouseLeftButtonDown="ToggleAdvancedPreviewMouseDown">
        <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource EQWarnForegroundBrush}">
          <TextBlock x:Name="advancedText" Text="Switch to Advanced" Cursor="Hand" TextWrapping="Wrap" FontSize="{DynamicResource EQContentSize}" Foreground="{DynamicResource EQWarnForegroundBrush}" VerticalAlignment="Bottom" Padding="0,0,0,1"/>
        </Border>
      </Grid>
      <ComboBox x:Name="voices" SelectedIndex="0" Margin="0,0,8,2" SelectionChanged="OptionsChanged" />
      <ComboBox x:Name="rateOption" SelectedIndex="0" Margin="0,0,8,2" SelectionChanged="OptionsChanged">
        <ComboBoxItem>Default Voice Rate</ComboBoxItem>
        <ComboBoxItem>Increased Rate 1</ComboBoxItem>
        <ComboBoxItem>Increased Rate 2</ComboBoxItem>
        <ComboBoxItem>Increased Rate 3</ComboBoxItem>
        <ComboBoxItem>Increased Rate 4</ComboBoxItem>
        <ComboBoxItem>Increased Rate 5</ComboBoxItem>
        <ComboBoxItem>Increased Rate 6</ComboBoxItem>
      </ComboBox>
      <ComboBox x:Name="deviceList" SelectedIndex="0" Margin="0,0,8,2" MaxWidth="150" SelectionChanged="OptionsChanged" />
      <Button Name="volumeBtn" Content="Volume" Margin="0,0,4,1" Padding="8,0,8,0" Height="{DynamicResource EQButtonHeight}" Click="VolumeButtonClick" />
      <Popup Name="volumePopup" PlacementTarget="{Binding ElementName=volumeBtn}" Height="320" Width="60" Placement="Right" StaysOpen="False" VerticalOffset="30" HorizontalOffset="-20">
        <Border Background="{DynamicResource ContentBackgroundAlt2}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <syncfusion:SfRangeSlider Name="volumeSlider" Height="300" Minimum="0" Maximum="100" LabelOrientation="Horizontal" TickFrequency="10" ValuePlacement="BottomRight" ShowValueLabels="True" Orientation="Vertical" PreviewMouseLeftButtonUp="VolumeSliderChanged"/>
        </Border>
      </Popup>
      <Button x:Name="dictButton" Margin="0,0,4,1" Padding="8,0,8,0" IsEnabled="True" Height="{DynamicResource EQButtonHeight}"  ToolTip="Phonetic Dictionary" Click="DictionaryClick">Dictionary</Button>
      <Button x:Name="quickShareButton" Margin="0,0,8,1" Padding="8,0,8,0" IsEnabled="True" Height="{DynamicResource EQButtonHeight}"  ToolTip="Quick Share Settings and Received Log" Click="QuickShareClick">Quick Shares</Button>
    </StackPanel>
    <Grid x:Name="mainGrid" Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{DynamicResource EQTriggerCharacterList}"></ColumnDefinition>
        <ColumnDefinition Width="3"></ColumnDefinition>
        <ColumnDefinition Width="355"></ColumnDefinition>
        <ColumnDefinition Width="3"></ColumnDefinition>
        <ColumnDefinition Width="200*"></ColumnDefinition>
      </Grid.ColumnDefinitions>
      <local:TriggersCharacterView x:Name="characterView" Grid.Column="0" />
      <GridSplitter Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch" />
      <Grid Grid.Column="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="300*"></RowDefinition>
        </Grid.RowDefinitions>
        <local:TriggersTreeView x:Name="theTreeView" Grid.Row="0" />
      </Grid>
      <GridSplitter Grid.Column="3" ResizeDirection="Columns" HorizontalAlignment="Stretch" />
      <Grid Grid.Column="4">
        <Grid.RowDefinitions>
          <RowDefinition Height="40"></RowDefinition>
          <RowDefinition Height="100*"></RowDefinition>
        </Grid.RowDefinitions>
        <syncfusion:PropertyGrid
          x:Name="thePropertyGrid"
          BorderBrush="{DynamicResource ContentBackgroundAlt2}"
          BorderThickness="0"
          ButtonPanelVisibility="Collapsed"
          EnableGrouping="True"
          DescriptionPanelVisibility="Collapsed"
          SearchBoxVisibility="Collapsed"
          IsEnabled="False"
          PropertyExpandMode="NestedMode"
          Margin="0"
          Grid.Row="1"
          SortDirection="{x:Null}"
          EnableToolTip="False"
          AutoGenerateItems="False"
          UpdateSourceMode="Immediately"
          ValueChanged="ValueChanged">
          <syncfusion:PropertyGrid.PropertyNameColumnDefinition>
            <GridLength>200</GridLength>
          </syncfusion:PropertyGrid.PropertyNameColumnDefinition>
          <syncfusion:PropertyGrid.Items>
            <syncfusion:PropertyGridItem CategoryName="General" PropertyName="Private" DisplayName="Private" Description="Prevents Trigger from being shared via Quick Share."/>
            <syncfusion:PropertyGridItem CategoryName="General" PropertyName="ChatWebhook" DisplayName="Webhook (Discord)" Description="Webhook/URL for sending messages to a Chat service. Discord is the only supported API at this time."/>
            <syncfusion:PropertyGridItem CategoryName="General" x:Name="triggerVolumeItem" PropertyName="Volume" DisplayName="Volume" Description="Modifies the Volume used for this Trigger. Note that the increase can not go above the max 100% volume level. For this to be useful your Default Volume needs to be below 100% or above 0%."/>
            <syncfusion:PropertyGridItem CategoryName="Overlays" PropertyName="SelectedTextOverlays" DisplayName="Assigned Text" Visibility="Collapsed" Description="Overlays used to display spoken Text associated with this Trigger."/>
            <syncfusion:PropertyGridItem x:Name="assignedOverlaysItem" CategoryName="Overlays" PropertyName="SelectedTimerOverlays" DisplayName="Assigned Timer" Visibility="Collapsed" Description="Overlays used to display Timers."/>
            <syncfusion:PropertyGridItem x:Name="triggerActiveBrushItem" CategoryName="Overlays" PropertyName="TriggerActiveBrush" DisplayName="Custom Active Color" Visibility="Collapsed" Description="Choose a custom Active Color to use as an override for the Active Color specified in Overlays that display this Trigger."/>
            <syncfusion:PropertyGridItem x:Name="triggerFontBrushItem" CategoryName="Overlays" PropertyName="TriggerFontBrush" DisplayName="Custom Font Color" Visibility="Collapsed" Description="Choose a custom Font Color to use as an override for the Font Color specified in the Overlays that display this Trigger."/>
            <syncfusion:PropertyGridItem x:Name="triggerIconSourceItem" CategoryName="Overlays" PropertyName="IconSource" DisplayName="Timer Bar Icon" Visibility="Collapsed" Description="An Icon to display to the left of the Timer Bar for this Trigger."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="Comments" DisplayName="Comments" Description="Notes about this Trigger." />
            <syncfusion:PropertyGridItem x:Name="patternItem" CategoryName="Trigger" PropertyName="Pattern" DisplayName="Match Pattern" Description="Text to match on. It is not case-sensitive. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem x:Name="useRegexItem" CategoryName="Hidden Settings" PropertyName="UseRegex" DisplayName="Pattern Use Regex" Visibility="Hidden"  Description="True if Regex is to be used for the specified Pattern."/>
            <syncfusion:PropertyGridItem x:Name="previousPatternItem" CategoryName="Trigger" PropertyName="PreviousPattern" DisplayName="Match Previous Line" Description="Text of the previous line to match on. It is the line directly before the current line in the log file. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem x:Name="previousUseRegexItem" CategoryName="Hidden Settings" PropertyName="PreviousUseRegex" DisplayName="Match Pattern Use Regex" Visibility="Hidden"  Description="True if Regex is to be used for the specified Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="Priority" DisplayName="Priority" Description="Priority used to determine if speech for a Trigger may be interrupted. The highest priority is 1 and lowest is 5. Interruptions may happen any time a higher priority trigger needs to play while a lower priority trigger has not finished."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="RepeatedResetTime" DisplayName="Repeated Reset Time (s)" Description="The time in seconds when the {repeated} count and {counter} are reset. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="SoundOrText" DisplayName="Sound/Text to Speak" Description="The Phrase to be spoken or sound file to play. For additional wav files, copy them to Program Files\EQLogParser\data\sounds. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="TextToDisplay" DisplayName="Text to Display" Description="The Text to Display in a Text Overlay. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="TextToSendToChat" DisplayName="Text to Send (Discord)" Description="The Text to Send is sent to the configured Chat service when the trigger pattern is matched. Configured via the Webhook General setting. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="TextToShare" DisplayName="Text to Share (Copy)" Description="The Text to Share is copied to the Clipboard when the trigger pattern is matched. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="LockoutTime" DisplayName="Trigger Lockout Time (s)" Description="The time in seconds until this Trigger can be activated again. Useful to prevent a Trigger from being spammed."/>
            <syncfusion:PropertyGridItem x:Name="timerTypeItem" CategoryName="Trigger" PropertyName="TimerType" DisplayName="Enable Timer" Description="Select the Type of Timer to associate with this Trigger. Countdown is a standard Timer. Fast Countdown has fewer options but is optimized for short time intervals. Progress Timers increase in value as time passes but work the same as standard Countdown timers in other aspects."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="AltTimerName" DisplayName="Alternate Timer Name"  Visibility="Collapsed" Description="The Name of the Timer defaults to the name of the Trigger. Set this property if an Alternate Name is required. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem x:Name="timerDurationItem" CategoryName="Timer Settings" PropertyName="DurationTimeSpan" DisplayName="Duration (hh:mm:ss)" Visibility="Collapsed" Description="Number of Minutes/Seconds after the Trigger has been executed before the Timer completes." />
            <syncfusion:PropertyGridItem x:Name="timerShortDurationItem" CategoryName="Timer Settings" PropertyName="DurationSeconds" DisplayName="Duration (0.2s -> 2.0s)" Visibility="Collapsed" Description="Number of Milliseconds after the Trigger has been executed before the Timer completes." />
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndSoundOrText" DisplayName="End Sound/Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken or sound file to play at completion of the Timer. For additional wav files, copy them to Program Files\EQLogParser\data\sounds. Also, see the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndTextToDisplay" DisplayName="End Text to Display" Description="The Text to Display in a Text Overlay at completion of the Timer. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="TriggerAgainOption" DisplayName="If Triggered Again" Visibility="Collapsed" Description="What to do if the Trigger is matched a second time but the original Timer has not completed."/>
            <syncfusion:PropertyGridItem x:Name="resetDurationItem" CategoryName="Timer Settings" PropertyName="ResetDurationTimeSpan" DisplayName="Reset Duration (hh:mm:ss)" Visibility="Collapsed" Description="Number of Minutes/Seconds required for the Timer to fully Reset if using a Timer Overlay configured as Cooldown. This is generally your cooldown time on an ability. Cooldown Overlays allow for a Timer that cycles through three states. Active, Reset, and and Idle/Waiting where each may have different colors." />
            <syncfusion:PropertyGridItem x:Name="loopingTimerItem" CategoryName="Timer Settings" PropertyName="TimesToLoop" DisplayName="Times to Loop" Visibility="Collapsed" Description="Number of times the Timer should loop or automatically restart." />
            <syncfusion:PropertyGridItem x:Name="endEarlyPatternItem" CategoryName="Timer End Early Settings" PropertyName="EndEarlyPattern" DisplayName="Match Pattern" Visibility="Collapsed" Description="If this End Early Pattern is matched it will cause the Timer to end even if there is time remaining. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlyPattern2" DisplayName="Match Pattern 2" Visibility="Collapsed" Description="If this End Early Pattern is matched it will cause the Timer to end even if there is time remaining. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlyRepeatedCount" DisplayName="Repeated Threshold"  Visibility="Collapsed" Description="The Timer will End Early if {repeated} or {counter} are specified in the Alternate Timer Name and they reache the specified value. If those tags are not used or zero is specified then this value will be ignored."/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlySoundOrText" DisplayName="Sound/Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken or sound file to play if the Timer Ends Early. If no value is specified then the Sound/Text to Speak specified in the Timer End section will be used. If you wish to replace the Timer End message with nothing at all. Use the value {null} in this field. For additional wav files, copy them to Program Files\EQLogParser\data\sounds. Also, see the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlyTextToDisplay" DisplayName="Text to Display" Description="The Text to Display in a Text Overlay if the Timer Ended Early. If no value is specified then the Text to Display specified in the Timer End section will be used. If you wish to replace the Timer End message with nothing at all. Use the value {null} in this field. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem x:Name="warningSecondsItem" CategoryName="Timer Warning Settings" PropertyName="WarningSeconds" DisplayName="Warn With Time Remaining" Visibility="Collapsed" Description="Seconds before Timer ending to warn the user with the Warning Text/Sound."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Warning Settings" PropertyName="WarningSoundOrText" DisplayName="Warning Sound/Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken or sound file to play at the Warning Time. For additional wav files, copy them to Program Files\EQLogParser\data\sounds. Also, see the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Warning Settings" PropertyName="WarningTextToDisplay" DisplayName="Warning Text to Display" Description="The Text to Display in a Text Overlay at the Warning Time. See the documentation on Using Trigger Variables for additional information."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="NodeId" DisplayName="ID" Description="Unique Overlay ID."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="OverlayComments" DisplayName="Comments" Visibility="Collapsed" Description="Notes about this Overlay." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="IsDefault" DisplayName="Default Overlay" Visibility="Collapsed" Description="If checked this Overlay will be used as the Default Overlay when no other are assigned. There can only be one Default Text Overlay and one Default Timer Overlay." />
            <syncfusion:PropertyGridItem x:Name="fontBrushItem" CategoryName="Overlay" PropertyName="FontBrush" DisplayName="Font Color" Visibility="Collapsed" Description="Font Color used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem x:Name="fontFamilyItem" CategoryName="Overlay" PropertyName="FontFamily" DisplayName="Font Family" Visibility="Collapsed" Description="Font Family used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem x:Name="fontSizeItem" CategoryName="Overlay" PropertyName="FontSize" DisplayName="Font Size" Visibility="Collapsed" Description="Font Size used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem x:Name="fontWeightItem" CategoryName="Overlay" PropertyName="FontWeight" DisplayName="Font Weight" Visibility="Collapsed" Description="Font Weight used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem x:Name="overlayBrushItem" CategoryName="Overlay" PropertyName="OverlayBrush" DisplayName="Overlay Color" Visibility="Collapsed" Description="Color used for the background of this Overlay."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Left" DisplayName="Positon Left" IsReadOnly="False" Visibility="Collapsed" Description="Left most position for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Top" DisplayName="Positon Top" IsReadOnly="False" Visibility="Collapsed" Description="Top most position for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Height" DisplayName="Position Height" IsReadOnly="False" Visibility="Collapsed" Description="Height for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Width" DisplayName="Position Width" IsReadOnly="False" Visibility="Collapsed" Description="Width for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="StreamerMode" DisplayName="Streamer Mode" IsReadOnly="False" Visibility="Collapsed" Description="Enabling Streamer Mode allows the Overlay window to be visible to streaming software. Note that changing this value will cause the Overlay window to clear everything and restart and it may require Windows 10 Capture Method to work in applications such as OBS." />
            <syncfusion:PropertyGridItem x:Name="verticalAlignmentItem" CategoryName="Overlay" PropertyName="VerticalAlignment" DisplayName="Vertical Alignment" IsReadOnly="False" Visibility="Collapsed" Description="Display Overlay contents starting from the Top of the window, Center, or Bottom." />
            <syncfusion:PropertyGridItem x:Name="timerModeItem" CategoryName="Timer Overlay" PropertyName="TimerMode" DisplayName="Mode" Visibility="Collapsed" Description="Standard Mode Overlays will count down for the Duration and be removed. Cooldown Mode Overlays will restart the Timer after the Reset Time while showing progress."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="TimerBarPreview" DisplayName="Preview" IsReadOnly="True" Visibility="Collapsed" Description="Example Timer Bar based on these settings." />
            <syncfusion:PropertyGridItem x:Name="activeBrushItem" CategoryName="Timer Overlay" PropertyName="ActiveBrush" DisplayName="Active Color" Visibility="Collapsed" Description="Color used for the Timer countdown bars representing the time left." />
            <syncfusion:PropertyGridItem x:Name="backgroundBrushItem" CategoryName="Timer Overlay" PropertyName="BackgroundBrush" DisplayName="Background Color" Visibility="Collapsed" Description="Color used for the Timer Bars representing the time used." />
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="SortBy" DisplayName="Sort By" Visibility="Collapsed" Description="Sort Option for Timer Bars on the Overlay. Either by the time they were initially triggered or by the time each one has remaining."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="UseStandardTime" DisplayName="Standardize Time" Visibility="Collapsed" Description="If using Standardized Time all Timer Bars will be based on the same/the longest timeframe."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="HideDuplicates" DisplayName="Hide Dupes (multi-character)" Visibility="Collapsed" Description="Attempt to hide duplicate Timers when multiple characters respond to the same Trigger."/>
            <syncfusion:PropertyGridItem CategoryName="Cooldown Overlay" PropertyName="IdleTimeoutTimeSpan" DisplayName="Idle Timeout" Visibility="Collapsed" Description="If specified the Cooldown Timers will be removed once they have all been idle for the configured time." />
            <syncfusion:PropertyGridItem x:Name="closePatternItem" CategoryName="Text Overlay" PropertyName="ClosePattern" DisplayName="Close Pattern" Description="Text to match on to make this Overlay close. It is not case-sensitive and does not support any special trigger variables."/>
            <syncfusion:PropertyGridItem x:Name="useCloseRegexItem" CategoryName="Hidden Settings" PropertyName="UseCloseRegex" DisplayName="Use Regex" Visibility="Hidden"  Description="True if Regex is to be used for the Close Pattern."/>
            <syncfusion:PropertyGridItem x:Name="fadeDelayItem" CategoryName="Text Overlay" PropertyName="FadeDelay" DisplayName="Fade Delay (s)" Visibility="Collapsed" Description="Seconds before Text fades from screen."/>
            <syncfusion:PropertyGridItem x:Name="horizontalAlignmentItem" CategoryName="Text Overlay" PropertyName="HorizontalAlignment" DisplayName="Horizontal Alignment" IsReadOnly="False" Visibility="Collapsed" Description="Display Text Overlay contents on the Left side of the window, Center, or Right." />
            <syncfusion:PropertyGridItem x:Name="idleBrushItem" CategoryName="Cooldown Overlay" PropertyName="IdleBrush" DisplayName="Idle Color" Visibility="Collapsed" Description="Color used for the Timer Bars representing time waiting for activation." />
            <syncfusion:PropertyGridItem x:Name="resetBrushItem" CategoryName="Cooldown Overlay" PropertyName="ResetBrush" DisplayName="Reset Color" Visibility="Collapsed" Description="Color used for the Timer countdown bars representing the reset time left." />
            <syncfusion:PropertyGridItem CategoryName="Cooldown Overlay" PropertyName="ShowActive" DisplayName="Show Active" Visibility="Collapsed" Description="Show Cooldown Timer when in Active state." />
            <syncfusion:PropertyGridItem CategoryName="Cooldown Overlay" PropertyName="ShowIdle" DisplayName="Show Idle" Visibility="Collapsed" Description="Show Cooldown Timer when in Idle state." />
            <syncfusion:PropertyGridItem CategoryName="Cooldown Overlay" PropertyName="ShowReset" DisplayName="Show Reset" Visibility="Collapsed" Description="Show Cooldown Timer when in Reset state." />
          </syncfusion:PropertyGrid.Items>
        </syncfusion:PropertyGrid>
        <Border Grid.Row="0" Padding="10,1,0,0" Background="{DynamicResource ContentBackgroundAlt2}" BorderThickness="0">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
              <TextBlock Text="Edit Properties" Margin="0,1,20,0" FontSize="{DynamicResource EQTitleSize}" Height="{DynamicResource EQButtonHeight}" />
              <Button x:Name="showButton" Visibility="Collapsed" Margin="0,0,4,3" Padding="16,0,16,0" IsEnabled="True" Height="{DynamicResource EQButtonHeight}" Click="ShowClick">Preview Overlay</Button>
              <Button x:Name="saveButton" Margin="0,0,4,3" Padding="10,0,10,0"  IsEnabled="False" Height="{DynamicResource EQButtonHeight}" Click="SaveClick">Save</Button>
              <Button x:Name="cancelButton" Margin="0,0,4,3" Padding="10,0,10,0" IsEnabled="False" Height="{DynamicResource EQButtonHeight}" Click="CancelClick">Cancel</Button>
              <Button x:Name="regexButton" Margin="0,0,0,3" Padding="10,0,10,0" Height="{DynamicResource EQButtonHeight}" Click="RegexClick" ToolTip="Help with Regex and Trigger Variables">View Documentation</Button>
            </StackPanel>
          </Grid>
        </Border>
      </Grid>
    </Grid>
  </Grid>
</UserControl>